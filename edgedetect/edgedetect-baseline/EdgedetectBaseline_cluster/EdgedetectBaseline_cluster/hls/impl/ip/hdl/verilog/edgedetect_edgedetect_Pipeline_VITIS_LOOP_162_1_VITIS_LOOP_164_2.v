// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module edgedetect_edgedetect_Pipeline_VITIS_LOOP_162_1_VITIS_LOOP_164_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        sext_ln162_1,
        sext_ln10_1,
        sext_ln162
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [511:0] m_axi_gmem_WDATA;
output  [63:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [511:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [8:0] m_axi_gmem_RFIFONUM;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
input  [57:0] sext_ln162_1;
input  [57:0] sext_ln10_1;
input  [57:0] sext_ln162;

reg ap_idle;
reg m_axi_gmem_WVALID;
reg m_axi_gmem_ARVALID;
reg[63:0] m_axi_gmem_ARADDR;
reg m_axi_gmem_RREADY;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
reg   [0:0] icmp_ln162_reg_657;
reg   [0:0] icmp_ln167_reg_668;
reg    ap_predicate_op135_readreq_state4;
reg    ap_block_state4_io;
reg   [0:0] icmp_ln162_reg_657_pp0_iter35_reg;
reg   [0:0] icmp_ln167_reg_668_pp0_iter35_reg;
reg    ap_predicate_op274_read_state74;
reg    ap_block_state74_pp0_stage1_iter36;
reg    ap_block_pp0_stage1_subdone;
wire   [0:0] icmp_ln162_fu_243_p2;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem_blk_n_W;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln170_1_reg_682;
reg   [0:0] icmp_ln170_1_reg_682_pp0_iter37_reg;
reg    gmem_blk_n_AR;
reg    gmem_blk_n_R;
wire    ap_block_pp0_stage1;
reg   [0:0] icmp_ln162_reg_657_pp0_iter36_reg;
reg   [0:0] icmp_ln167_reg_668_pp0_iter36_reg;
reg    ap_predicate_op131_readreq_state3;
reg    ap_block_state3_io;
reg    ap_predicate_op285_read_state75;
reg    ap_block_state75_pp0_stage0_iter37;
reg    ap_block_state77_io;
reg    ap_block_pp0_stage0_11001;
wire  signed [58:0] sext_ln162_cast_fu_198_p1;
reg  signed [58:0] sext_ln162_cast_reg_642;
wire  signed [58:0] sext_ln10_1_cast_fu_202_p1;
reg  signed [58:0] sext_ln10_1_cast_reg_647;
reg    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln162_reg_657_pp0_iter1_reg;
reg   [0:0] icmp_ln162_reg_657_pp0_iter2_reg;
reg   [0:0] icmp_ln162_reg_657_pp0_iter3_reg;
reg   [0:0] icmp_ln162_reg_657_pp0_iter4_reg;
reg   [0:0] icmp_ln162_reg_657_pp0_iter5_reg;
reg   [0:0] icmp_ln162_reg_657_pp0_iter6_reg;
reg   [0:0] icmp_ln162_reg_657_pp0_iter7_reg;
reg   [0:0] icmp_ln162_reg_657_pp0_iter8_reg;
reg   [0:0] icmp_ln162_reg_657_pp0_iter9_reg;
reg   [0:0] icmp_ln162_reg_657_pp0_iter10_reg;
reg   [0:0] icmp_ln162_reg_657_pp0_iter11_reg;
reg   [0:0] icmp_ln162_reg_657_pp0_iter12_reg;
reg   [0:0] icmp_ln162_reg_657_pp0_iter13_reg;
reg   [0:0] icmp_ln162_reg_657_pp0_iter14_reg;
reg   [0:0] icmp_ln162_reg_657_pp0_iter15_reg;
reg   [0:0] icmp_ln162_reg_657_pp0_iter16_reg;
reg   [0:0] icmp_ln162_reg_657_pp0_iter17_reg;
reg   [0:0] icmp_ln162_reg_657_pp0_iter18_reg;
reg   [0:0] icmp_ln162_reg_657_pp0_iter19_reg;
reg   [0:0] icmp_ln162_reg_657_pp0_iter20_reg;
reg   [0:0] icmp_ln162_reg_657_pp0_iter21_reg;
reg   [0:0] icmp_ln162_reg_657_pp0_iter22_reg;
reg   [0:0] icmp_ln162_reg_657_pp0_iter23_reg;
reg   [0:0] icmp_ln162_reg_657_pp0_iter24_reg;
reg   [0:0] icmp_ln162_reg_657_pp0_iter25_reg;
reg   [0:0] icmp_ln162_reg_657_pp0_iter26_reg;
reg   [0:0] icmp_ln162_reg_657_pp0_iter27_reg;
reg   [0:0] icmp_ln162_reg_657_pp0_iter28_reg;
reg   [0:0] icmp_ln162_reg_657_pp0_iter29_reg;
reg   [0:0] icmp_ln162_reg_657_pp0_iter30_reg;
reg   [0:0] icmp_ln162_reg_657_pp0_iter31_reg;
reg   [0:0] icmp_ln162_reg_657_pp0_iter32_reg;
reg   [0:0] icmp_ln162_reg_657_pp0_iter33_reg;
reg   [0:0] icmp_ln162_reg_657_pp0_iter34_reg;
wire   [0:0] icmp_ln164_fu_261_p2;
reg   [0:0] icmp_ln164_reg_661;
reg   [0:0] icmp_ln164_reg_661_pp0_iter1_reg;
reg   [0:0] icmp_ln164_reg_661_pp0_iter2_reg;
reg   [0:0] icmp_ln164_reg_661_pp0_iter3_reg;
reg   [0:0] icmp_ln164_reg_661_pp0_iter4_reg;
reg   [0:0] icmp_ln164_reg_661_pp0_iter5_reg;
reg   [0:0] icmp_ln164_reg_661_pp0_iter6_reg;
reg   [0:0] icmp_ln164_reg_661_pp0_iter7_reg;
reg   [0:0] icmp_ln164_reg_661_pp0_iter8_reg;
reg   [0:0] icmp_ln164_reg_661_pp0_iter9_reg;
reg   [0:0] icmp_ln164_reg_661_pp0_iter10_reg;
reg   [0:0] icmp_ln164_reg_661_pp0_iter11_reg;
reg   [0:0] icmp_ln164_reg_661_pp0_iter12_reg;
reg   [0:0] icmp_ln164_reg_661_pp0_iter13_reg;
reg   [0:0] icmp_ln164_reg_661_pp0_iter14_reg;
reg   [0:0] icmp_ln164_reg_661_pp0_iter15_reg;
reg   [0:0] icmp_ln164_reg_661_pp0_iter16_reg;
reg   [0:0] icmp_ln164_reg_661_pp0_iter17_reg;
reg   [0:0] icmp_ln164_reg_661_pp0_iter18_reg;
reg   [0:0] icmp_ln164_reg_661_pp0_iter19_reg;
reg   [0:0] icmp_ln164_reg_661_pp0_iter20_reg;
reg   [0:0] icmp_ln164_reg_661_pp0_iter21_reg;
reg   [0:0] icmp_ln164_reg_661_pp0_iter22_reg;
reg   [0:0] icmp_ln164_reg_661_pp0_iter23_reg;
reg   [0:0] icmp_ln164_reg_661_pp0_iter24_reg;
reg   [0:0] icmp_ln164_reg_661_pp0_iter25_reg;
reg   [0:0] icmp_ln164_reg_661_pp0_iter26_reg;
reg   [0:0] icmp_ln164_reg_661_pp0_iter27_reg;
reg   [0:0] icmp_ln164_reg_661_pp0_iter28_reg;
reg   [0:0] icmp_ln164_reg_661_pp0_iter29_reg;
reg   [0:0] icmp_ln164_reg_661_pp0_iter30_reg;
reg   [0:0] icmp_ln164_reg_661_pp0_iter31_reg;
reg   [0:0] icmp_ln164_reg_661_pp0_iter32_reg;
reg   [0:0] icmp_ln164_reg_661_pp0_iter33_reg;
reg   [0:0] icmp_ln164_reg_661_pp0_iter34_reg;
reg   [0:0] icmp_ln164_reg_661_pp0_iter35_reg;
reg   [0:0] icmp_ln164_reg_661_pp0_iter36_reg;
wire   [0:0] icmp_ln167_fu_347_p2;
reg   [0:0] icmp_ln167_reg_668_pp0_iter1_reg;
reg   [0:0] icmp_ln167_reg_668_pp0_iter2_reg;
reg   [0:0] icmp_ln167_reg_668_pp0_iter3_reg;
reg   [0:0] icmp_ln167_reg_668_pp0_iter4_reg;
reg   [0:0] icmp_ln167_reg_668_pp0_iter5_reg;
reg   [0:0] icmp_ln167_reg_668_pp0_iter6_reg;
reg   [0:0] icmp_ln167_reg_668_pp0_iter7_reg;
reg   [0:0] icmp_ln167_reg_668_pp0_iter8_reg;
reg   [0:0] icmp_ln167_reg_668_pp0_iter9_reg;
reg   [0:0] icmp_ln167_reg_668_pp0_iter10_reg;
reg   [0:0] icmp_ln167_reg_668_pp0_iter11_reg;
reg   [0:0] icmp_ln167_reg_668_pp0_iter12_reg;
reg   [0:0] icmp_ln167_reg_668_pp0_iter13_reg;
reg   [0:0] icmp_ln167_reg_668_pp0_iter14_reg;
reg   [0:0] icmp_ln167_reg_668_pp0_iter15_reg;
reg   [0:0] icmp_ln167_reg_668_pp0_iter16_reg;
reg   [0:0] icmp_ln167_reg_668_pp0_iter17_reg;
reg   [0:0] icmp_ln167_reg_668_pp0_iter18_reg;
reg   [0:0] icmp_ln167_reg_668_pp0_iter19_reg;
reg   [0:0] icmp_ln167_reg_668_pp0_iter20_reg;
reg   [0:0] icmp_ln167_reg_668_pp0_iter21_reg;
reg   [0:0] icmp_ln167_reg_668_pp0_iter22_reg;
reg   [0:0] icmp_ln167_reg_668_pp0_iter23_reg;
reg   [0:0] icmp_ln167_reg_668_pp0_iter24_reg;
reg   [0:0] icmp_ln167_reg_668_pp0_iter25_reg;
reg   [0:0] icmp_ln167_reg_668_pp0_iter26_reg;
reg   [0:0] icmp_ln167_reg_668_pp0_iter27_reg;
reg   [0:0] icmp_ln167_reg_668_pp0_iter28_reg;
reg   [0:0] icmp_ln167_reg_668_pp0_iter29_reg;
reg   [0:0] icmp_ln167_reg_668_pp0_iter30_reg;
reg   [0:0] icmp_ln167_reg_668_pp0_iter31_reg;
reg   [0:0] icmp_ln167_reg_668_pp0_iter32_reg;
reg   [0:0] icmp_ln167_reg_668_pp0_iter33_reg;
reg   [0:0] icmp_ln167_reg_668_pp0_iter34_reg;
wire   [58:0] add_ln167_1_fu_353_p2;
reg   [58:0] add_ln167_1_reg_672;
wire   [58:0] add_ln168_fu_358_p2;
reg   [58:0] add_ln168_reg_677;
wire   [0:0] icmp_ln170_1_fu_363_p2;
reg   [0:0] icmp_ln170_1_reg_682_pp0_iter1_reg;
reg   [0:0] icmp_ln170_1_reg_682_pp0_iter2_reg;
reg   [0:0] icmp_ln170_1_reg_682_pp0_iter3_reg;
reg   [0:0] icmp_ln170_1_reg_682_pp0_iter4_reg;
reg   [0:0] icmp_ln170_1_reg_682_pp0_iter5_reg;
reg   [0:0] icmp_ln170_1_reg_682_pp0_iter6_reg;
reg   [0:0] icmp_ln170_1_reg_682_pp0_iter7_reg;
reg   [0:0] icmp_ln170_1_reg_682_pp0_iter8_reg;
reg   [0:0] icmp_ln170_1_reg_682_pp0_iter9_reg;
reg   [0:0] icmp_ln170_1_reg_682_pp0_iter10_reg;
reg   [0:0] icmp_ln170_1_reg_682_pp0_iter11_reg;
reg   [0:0] icmp_ln170_1_reg_682_pp0_iter12_reg;
reg   [0:0] icmp_ln170_1_reg_682_pp0_iter13_reg;
reg   [0:0] icmp_ln170_1_reg_682_pp0_iter14_reg;
reg   [0:0] icmp_ln170_1_reg_682_pp0_iter15_reg;
reg   [0:0] icmp_ln170_1_reg_682_pp0_iter16_reg;
reg   [0:0] icmp_ln170_1_reg_682_pp0_iter17_reg;
reg   [0:0] icmp_ln170_1_reg_682_pp0_iter18_reg;
reg   [0:0] icmp_ln170_1_reg_682_pp0_iter19_reg;
reg   [0:0] icmp_ln170_1_reg_682_pp0_iter20_reg;
reg   [0:0] icmp_ln170_1_reg_682_pp0_iter21_reg;
reg   [0:0] icmp_ln170_1_reg_682_pp0_iter22_reg;
reg   [0:0] icmp_ln170_1_reg_682_pp0_iter23_reg;
reg   [0:0] icmp_ln170_1_reg_682_pp0_iter24_reg;
reg   [0:0] icmp_ln170_1_reg_682_pp0_iter25_reg;
reg   [0:0] icmp_ln170_1_reg_682_pp0_iter26_reg;
reg   [0:0] icmp_ln170_1_reg_682_pp0_iter27_reg;
reg   [0:0] icmp_ln170_1_reg_682_pp0_iter28_reg;
reg   [0:0] icmp_ln170_1_reg_682_pp0_iter29_reg;
reg   [0:0] icmp_ln170_1_reg_682_pp0_iter30_reg;
reg   [0:0] icmp_ln170_1_reg_682_pp0_iter31_reg;
reg   [0:0] icmp_ln170_1_reg_682_pp0_iter32_reg;
reg   [0:0] icmp_ln170_1_reg_682_pp0_iter33_reg;
reg   [0:0] icmp_ln170_1_reg_682_pp0_iter34_reg;
reg   [0:0] icmp_ln170_1_reg_682_pp0_iter35_reg;
reg   [0:0] icmp_ln170_1_reg_682_pp0_iter36_reg;
reg   [511:0] gmem_addr_32_read_reg_699;
wire  signed [496:0] select_ln157_3_fu_433_p3;
reg  signed [496:0] select_ln157_3_reg_704;
wire   [511:0] zext_ln164_fu_440_p1;
wire   [511:0] zext_ln164_1_fu_444_p1;
reg   [511:0] gmem_addr_33_read_reg_720;
wire   [0:0] icmp_ln170_fu_530_p2;
reg   [0:0] icmp_ln170_reg_725;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage0_subdone;
reg   [511:0] ap_phi_mux_empty_phi_fu_183_p4;
reg   [511:0] ap_phi_reg_pp0_iter37_empty_reg_180;
wire   [511:0] ap_phi_reg_pp0_iter0_empty_reg_180;
reg   [511:0] ap_phi_reg_pp0_iter1_empty_reg_180;
reg   [511:0] ap_phi_reg_pp0_iter2_empty_reg_180;
reg   [511:0] ap_phi_reg_pp0_iter3_empty_reg_180;
reg   [511:0] ap_phi_reg_pp0_iter4_empty_reg_180;
reg   [511:0] ap_phi_reg_pp0_iter5_empty_reg_180;
reg   [511:0] ap_phi_reg_pp0_iter6_empty_reg_180;
reg   [511:0] ap_phi_reg_pp0_iter7_empty_reg_180;
reg   [511:0] ap_phi_reg_pp0_iter8_empty_reg_180;
reg   [511:0] ap_phi_reg_pp0_iter9_empty_reg_180;
reg   [511:0] ap_phi_reg_pp0_iter10_empty_reg_180;
reg   [511:0] ap_phi_reg_pp0_iter11_empty_reg_180;
reg   [511:0] ap_phi_reg_pp0_iter12_empty_reg_180;
reg   [511:0] ap_phi_reg_pp0_iter13_empty_reg_180;
reg   [511:0] ap_phi_reg_pp0_iter14_empty_reg_180;
reg   [511:0] ap_phi_reg_pp0_iter15_empty_reg_180;
reg   [511:0] ap_phi_reg_pp0_iter16_empty_reg_180;
reg   [511:0] ap_phi_reg_pp0_iter17_empty_reg_180;
reg   [511:0] ap_phi_reg_pp0_iter18_empty_reg_180;
reg   [511:0] ap_phi_reg_pp0_iter19_empty_reg_180;
reg   [511:0] ap_phi_reg_pp0_iter20_empty_reg_180;
reg   [511:0] ap_phi_reg_pp0_iter21_empty_reg_180;
reg   [511:0] ap_phi_reg_pp0_iter22_empty_reg_180;
reg   [511:0] ap_phi_reg_pp0_iter23_empty_reg_180;
reg   [511:0] ap_phi_reg_pp0_iter24_empty_reg_180;
reg   [511:0] ap_phi_reg_pp0_iter25_empty_reg_180;
reg   [511:0] ap_phi_reg_pp0_iter26_empty_reg_180;
reg   [511:0] ap_phi_reg_pp0_iter27_empty_reg_180;
reg   [511:0] ap_phi_reg_pp0_iter28_empty_reg_180;
reg   [511:0] ap_phi_reg_pp0_iter29_empty_reg_180;
reg   [511:0] ap_phi_reg_pp0_iter30_empty_reg_180;
reg   [511:0] ap_phi_reg_pp0_iter31_empty_reg_180;
reg   [511:0] ap_phi_reg_pp0_iter32_empty_reg_180;
reg   [511:0] ap_phi_reg_pp0_iter33_empty_reg_180;
reg   [511:0] ap_phi_reg_pp0_iter34_empty_reg_180;
reg   [511:0] ap_phi_reg_pp0_iter35_empty_reg_180;
reg   [511:0] ap_phi_reg_pp0_iter36_empty_reg_180;
reg   [511:0] ap_phi_mux_empty_41_phi_fu_192_p4;
reg   [511:0] ap_phi_reg_pp0_iter37_empty_41_reg_189;
wire   [511:0] ap_phi_reg_pp0_iter0_empty_41_reg_189;
reg   [511:0] ap_phi_reg_pp0_iter1_empty_41_reg_189;
reg   [511:0] ap_phi_reg_pp0_iter2_empty_41_reg_189;
reg   [511:0] ap_phi_reg_pp0_iter3_empty_41_reg_189;
reg   [511:0] ap_phi_reg_pp0_iter4_empty_41_reg_189;
reg   [511:0] ap_phi_reg_pp0_iter5_empty_41_reg_189;
reg   [511:0] ap_phi_reg_pp0_iter6_empty_41_reg_189;
reg   [511:0] ap_phi_reg_pp0_iter7_empty_41_reg_189;
reg   [511:0] ap_phi_reg_pp0_iter8_empty_41_reg_189;
reg   [511:0] ap_phi_reg_pp0_iter9_empty_41_reg_189;
reg   [511:0] ap_phi_reg_pp0_iter10_empty_41_reg_189;
reg   [511:0] ap_phi_reg_pp0_iter11_empty_41_reg_189;
reg   [511:0] ap_phi_reg_pp0_iter12_empty_41_reg_189;
reg   [511:0] ap_phi_reg_pp0_iter13_empty_41_reg_189;
reg   [511:0] ap_phi_reg_pp0_iter14_empty_41_reg_189;
reg   [511:0] ap_phi_reg_pp0_iter15_empty_41_reg_189;
reg   [511:0] ap_phi_reg_pp0_iter16_empty_41_reg_189;
reg   [511:0] ap_phi_reg_pp0_iter17_empty_41_reg_189;
reg   [511:0] ap_phi_reg_pp0_iter18_empty_41_reg_189;
reg   [511:0] ap_phi_reg_pp0_iter19_empty_41_reg_189;
reg   [511:0] ap_phi_reg_pp0_iter20_empty_41_reg_189;
reg   [511:0] ap_phi_reg_pp0_iter21_empty_41_reg_189;
reg   [511:0] ap_phi_reg_pp0_iter22_empty_41_reg_189;
reg   [511:0] ap_phi_reg_pp0_iter23_empty_41_reg_189;
reg   [511:0] ap_phi_reg_pp0_iter24_empty_41_reg_189;
reg   [511:0] ap_phi_reg_pp0_iter25_empty_41_reg_189;
reg   [511:0] ap_phi_reg_pp0_iter26_empty_41_reg_189;
reg   [511:0] ap_phi_reg_pp0_iter27_empty_41_reg_189;
reg   [511:0] ap_phi_reg_pp0_iter28_empty_41_reg_189;
reg   [511:0] ap_phi_reg_pp0_iter29_empty_41_reg_189;
reg   [511:0] ap_phi_reg_pp0_iter30_empty_41_reg_189;
reg   [511:0] ap_phi_reg_pp0_iter31_empty_41_reg_189;
reg   [511:0] ap_phi_reg_pp0_iter32_empty_41_reg_189;
reg   [511:0] ap_phi_reg_pp0_iter33_empty_41_reg_189;
reg   [511:0] ap_phi_reg_pp0_iter34_empty_41_reg_189;
reg   [511:0] ap_phi_reg_pp0_iter35_empty_41_reg_189;
reg   [511:0] ap_phi_reg_pp0_iter36_empty_41_reg_189;
wire  signed [63:0] sext_ln167_fu_390_p1;
wire  signed [63:0] sext_ln168_fu_400_p1;
reg    ap_block_pp0_stage0_01001;
reg   [496:0] phi_ln170_fu_106;
wire   [496:0] select_ln170_fu_557_p3;
wire    ap_loop_init;
reg   [503:0] shiftreg49_fu_110;
reg   [503:0] shiftreg_fu_114;
reg   [9:0] j_fu_118;
wire   [9:0] add_ln164_fu_369_p2;
reg   [8:0] i_fu_122;
wire   [8:0] select_ln162_fu_281_p3;
reg   [18:0] indvar_flatten432_fu_126;
wire   [18:0] add_ln162_fu_249_p2;
wire   [8:0] add_ln162_1_fu_275_p2;
wire   [17:0] tmp_fu_289_p3;
wire   [15:0] tmp_3_fu_301_p3;
wire   [9:0] select_ln157_fu_267_p3;
wire   [18:0] p_shl_fu_297_p1;
wire   [18:0] p_shl12_fu_309_p1;
wire   [18:0] empty_42_fu_317_p2;
wire   [18:0] zext_ln164_2_fu_313_p1;
wire   [18:0] add_ln167_fu_323_p2;
wire   [12:0] lshr_ln_fu_333_p4;
wire   [5:0] trunc_ln167_fu_329_p1;
wire   [58:0] zext_ln167_fu_343_p1;
wire   [503:0] select_ln157_2_fu_426_p3;
wire   [503:0] select_ln157_1_fu_419_p3;
wire   [7:0] trunc_ln167_1_fu_448_p1;
wire   [0:0] abscond9_fu_468_p2;
wire   [7:0] neg8_fu_462_p2;
wire   [7:0] trunc_ln168_fu_482_p1;
wire   [0:0] abscond12_fu_502_p2;
wire   [7:0] neg11_fu_496_p2;
wire   [7:0] temp1_fu_474_p3;
wire   [7:0] temp2_fu_508_p3;
wire   [0:0] icmp_ln169_fu_516_p2;
wire   [7:0] temp3_fu_522_p3;
wire   [488:0] tmp_4_fu_536_p4;
wire  signed [495:0] sext_ln164_fu_545_p1;
wire   [496:0] tmp_s_fu_549_p3;
wire  signed [503:0] sext_ln162_2_fu_585_p1;
wire   [504:0] or_ln1_fu_588_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter37_stage0;
reg    ap_idle_pp0_0to36;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg    ap_loop_exit_ready_pp0_iter34_reg;
reg    ap_loop_exit_ready_pp0_iter35_reg;
reg    ap_loop_exit_ready_pp0_iter36_reg;
reg    ap_loop_exit_ready_pp0_iter37_reg;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_1to38;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
reg    ap_condition_1316;
reg    ap_condition_1320;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 phi_ln170_fu_106 = 497'd0;
#0 shiftreg49_fu_110 = 504'd0;
#0 shiftreg_fu_114 = 504'd0;
#0 j_fu_118 = 10'd0;
#0 i_fu_122 = 9'd0;
#0 indvar_flatten432_fu_126 = 19'd0;
#0 ap_done_reg = 1'b0;
end

edgedetect_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter37_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter38 == 1'b1))) begin
            ap_enable_reg_pp0_iter38 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter12_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter13_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter14_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter15_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter16_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter17_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter18_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter19_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter20_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter21_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter22_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter23_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter24_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter25_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter26_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter27_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter28_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter29_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter30_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter31_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter32_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter33_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter34_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter35_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter35_reg <= ap_loop_exit_ready_pp0_iter34_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter36_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter36_reg <= ap_loop_exit_ready_pp0_iter35_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter37_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter37_reg <= ap_loop_exit_ready_pp0_iter36_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln167_reg_668_pp0_iter36_reg == 1'd0) & (icmp_ln162_reg_657_pp0_iter36_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        ap_phi_reg_pp0_iter37_empty_41_reg_189 <= zext_ln164_fu_440_p1;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        ap_phi_reg_pp0_iter37_empty_41_reg_189 <= ap_phi_reg_pp0_iter36_empty_41_reg_189;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln167_reg_668_pp0_iter36_reg == 1'd0) & (icmp_ln162_reg_657_pp0_iter36_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        ap_phi_reg_pp0_iter37_empty_reg_180 <= zext_ln164_1_fu_444_p1;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        ap_phi_reg_pp0_iter37_empty_reg_180 <= ap_phi_reg_pp0_iter36_empty_reg_180;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_fu_122 <= 9'd0;
    end else if (((icmp_ln162_fu_243_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        i_fu_122 <= select_ln162_fu_281_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten432_fu_126 <= 19'd0;
    end else if (((icmp_ln162_fu_243_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        indvar_flatten432_fu_126 <= add_ln162_fu_249_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_fu_118 <= 10'd0;
    end else if (((icmp_ln162_fu_243_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        j_fu_118 <= add_ln164_fu_369_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        phi_ln170_fu_106 <= 497'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        phi_ln170_fu_106 <= select_ln170_fu_557_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        shiftreg49_fu_110 <= 504'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        shiftreg49_fu_110 <= {{ap_phi_mux_empty_41_phi_fu_192_p4[511:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        shiftreg_fu_114 <= 504'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        shiftreg_fu_114 <= {{ap_phi_mux_empty_phi_fu_183_p4[511:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln167_1_reg_672 <= add_ln167_1_fu_353_p2;
        add_ln168_reg_677 <= add_ln168_fu_358_p2;
        gmem_addr_32_read_reg_699 <= m_axi_gmem_RDATA;
        icmp_ln162_reg_657 <= icmp_ln162_fu_243_p2;
        icmp_ln162_reg_657_pp0_iter10_reg <= icmp_ln162_reg_657_pp0_iter9_reg;
        icmp_ln162_reg_657_pp0_iter11_reg <= icmp_ln162_reg_657_pp0_iter10_reg;
        icmp_ln162_reg_657_pp0_iter12_reg <= icmp_ln162_reg_657_pp0_iter11_reg;
        icmp_ln162_reg_657_pp0_iter13_reg <= icmp_ln162_reg_657_pp0_iter12_reg;
        icmp_ln162_reg_657_pp0_iter14_reg <= icmp_ln162_reg_657_pp0_iter13_reg;
        icmp_ln162_reg_657_pp0_iter15_reg <= icmp_ln162_reg_657_pp0_iter14_reg;
        icmp_ln162_reg_657_pp0_iter16_reg <= icmp_ln162_reg_657_pp0_iter15_reg;
        icmp_ln162_reg_657_pp0_iter17_reg <= icmp_ln162_reg_657_pp0_iter16_reg;
        icmp_ln162_reg_657_pp0_iter18_reg <= icmp_ln162_reg_657_pp0_iter17_reg;
        icmp_ln162_reg_657_pp0_iter19_reg <= icmp_ln162_reg_657_pp0_iter18_reg;
        icmp_ln162_reg_657_pp0_iter1_reg <= icmp_ln162_reg_657;
        icmp_ln162_reg_657_pp0_iter20_reg <= icmp_ln162_reg_657_pp0_iter19_reg;
        icmp_ln162_reg_657_pp0_iter21_reg <= icmp_ln162_reg_657_pp0_iter20_reg;
        icmp_ln162_reg_657_pp0_iter22_reg <= icmp_ln162_reg_657_pp0_iter21_reg;
        icmp_ln162_reg_657_pp0_iter23_reg <= icmp_ln162_reg_657_pp0_iter22_reg;
        icmp_ln162_reg_657_pp0_iter24_reg <= icmp_ln162_reg_657_pp0_iter23_reg;
        icmp_ln162_reg_657_pp0_iter25_reg <= icmp_ln162_reg_657_pp0_iter24_reg;
        icmp_ln162_reg_657_pp0_iter26_reg <= icmp_ln162_reg_657_pp0_iter25_reg;
        icmp_ln162_reg_657_pp0_iter27_reg <= icmp_ln162_reg_657_pp0_iter26_reg;
        icmp_ln162_reg_657_pp0_iter28_reg <= icmp_ln162_reg_657_pp0_iter27_reg;
        icmp_ln162_reg_657_pp0_iter29_reg <= icmp_ln162_reg_657_pp0_iter28_reg;
        icmp_ln162_reg_657_pp0_iter2_reg <= icmp_ln162_reg_657_pp0_iter1_reg;
        icmp_ln162_reg_657_pp0_iter30_reg <= icmp_ln162_reg_657_pp0_iter29_reg;
        icmp_ln162_reg_657_pp0_iter31_reg <= icmp_ln162_reg_657_pp0_iter30_reg;
        icmp_ln162_reg_657_pp0_iter32_reg <= icmp_ln162_reg_657_pp0_iter31_reg;
        icmp_ln162_reg_657_pp0_iter33_reg <= icmp_ln162_reg_657_pp0_iter32_reg;
        icmp_ln162_reg_657_pp0_iter34_reg <= icmp_ln162_reg_657_pp0_iter33_reg;
        icmp_ln162_reg_657_pp0_iter35_reg <= icmp_ln162_reg_657_pp0_iter34_reg;
        icmp_ln162_reg_657_pp0_iter36_reg <= icmp_ln162_reg_657_pp0_iter35_reg;
        icmp_ln162_reg_657_pp0_iter3_reg <= icmp_ln162_reg_657_pp0_iter2_reg;
        icmp_ln162_reg_657_pp0_iter4_reg <= icmp_ln162_reg_657_pp0_iter3_reg;
        icmp_ln162_reg_657_pp0_iter5_reg <= icmp_ln162_reg_657_pp0_iter4_reg;
        icmp_ln162_reg_657_pp0_iter6_reg <= icmp_ln162_reg_657_pp0_iter5_reg;
        icmp_ln162_reg_657_pp0_iter7_reg <= icmp_ln162_reg_657_pp0_iter6_reg;
        icmp_ln162_reg_657_pp0_iter8_reg <= icmp_ln162_reg_657_pp0_iter7_reg;
        icmp_ln162_reg_657_pp0_iter9_reg <= icmp_ln162_reg_657_pp0_iter8_reg;
        icmp_ln164_reg_661 <= icmp_ln164_fu_261_p2;
        icmp_ln164_reg_661_pp0_iter10_reg <= icmp_ln164_reg_661_pp0_iter9_reg;
        icmp_ln164_reg_661_pp0_iter11_reg <= icmp_ln164_reg_661_pp0_iter10_reg;
        icmp_ln164_reg_661_pp0_iter12_reg <= icmp_ln164_reg_661_pp0_iter11_reg;
        icmp_ln164_reg_661_pp0_iter13_reg <= icmp_ln164_reg_661_pp0_iter12_reg;
        icmp_ln164_reg_661_pp0_iter14_reg <= icmp_ln164_reg_661_pp0_iter13_reg;
        icmp_ln164_reg_661_pp0_iter15_reg <= icmp_ln164_reg_661_pp0_iter14_reg;
        icmp_ln164_reg_661_pp0_iter16_reg <= icmp_ln164_reg_661_pp0_iter15_reg;
        icmp_ln164_reg_661_pp0_iter17_reg <= icmp_ln164_reg_661_pp0_iter16_reg;
        icmp_ln164_reg_661_pp0_iter18_reg <= icmp_ln164_reg_661_pp0_iter17_reg;
        icmp_ln164_reg_661_pp0_iter19_reg <= icmp_ln164_reg_661_pp0_iter18_reg;
        icmp_ln164_reg_661_pp0_iter1_reg <= icmp_ln164_reg_661;
        icmp_ln164_reg_661_pp0_iter20_reg <= icmp_ln164_reg_661_pp0_iter19_reg;
        icmp_ln164_reg_661_pp0_iter21_reg <= icmp_ln164_reg_661_pp0_iter20_reg;
        icmp_ln164_reg_661_pp0_iter22_reg <= icmp_ln164_reg_661_pp0_iter21_reg;
        icmp_ln164_reg_661_pp0_iter23_reg <= icmp_ln164_reg_661_pp0_iter22_reg;
        icmp_ln164_reg_661_pp0_iter24_reg <= icmp_ln164_reg_661_pp0_iter23_reg;
        icmp_ln164_reg_661_pp0_iter25_reg <= icmp_ln164_reg_661_pp0_iter24_reg;
        icmp_ln164_reg_661_pp0_iter26_reg <= icmp_ln164_reg_661_pp0_iter25_reg;
        icmp_ln164_reg_661_pp0_iter27_reg <= icmp_ln164_reg_661_pp0_iter26_reg;
        icmp_ln164_reg_661_pp0_iter28_reg <= icmp_ln164_reg_661_pp0_iter27_reg;
        icmp_ln164_reg_661_pp0_iter29_reg <= icmp_ln164_reg_661_pp0_iter28_reg;
        icmp_ln164_reg_661_pp0_iter2_reg <= icmp_ln164_reg_661_pp0_iter1_reg;
        icmp_ln164_reg_661_pp0_iter30_reg <= icmp_ln164_reg_661_pp0_iter29_reg;
        icmp_ln164_reg_661_pp0_iter31_reg <= icmp_ln164_reg_661_pp0_iter30_reg;
        icmp_ln164_reg_661_pp0_iter32_reg <= icmp_ln164_reg_661_pp0_iter31_reg;
        icmp_ln164_reg_661_pp0_iter33_reg <= icmp_ln164_reg_661_pp0_iter32_reg;
        icmp_ln164_reg_661_pp0_iter34_reg <= icmp_ln164_reg_661_pp0_iter33_reg;
        icmp_ln164_reg_661_pp0_iter35_reg <= icmp_ln164_reg_661_pp0_iter34_reg;
        icmp_ln164_reg_661_pp0_iter36_reg <= icmp_ln164_reg_661_pp0_iter35_reg;
        icmp_ln164_reg_661_pp0_iter3_reg <= icmp_ln164_reg_661_pp0_iter2_reg;
        icmp_ln164_reg_661_pp0_iter4_reg <= icmp_ln164_reg_661_pp0_iter3_reg;
        icmp_ln164_reg_661_pp0_iter5_reg <= icmp_ln164_reg_661_pp0_iter4_reg;
        icmp_ln164_reg_661_pp0_iter6_reg <= icmp_ln164_reg_661_pp0_iter5_reg;
        icmp_ln164_reg_661_pp0_iter7_reg <= icmp_ln164_reg_661_pp0_iter6_reg;
        icmp_ln164_reg_661_pp0_iter8_reg <= icmp_ln164_reg_661_pp0_iter7_reg;
        icmp_ln164_reg_661_pp0_iter9_reg <= icmp_ln164_reg_661_pp0_iter8_reg;
        icmp_ln167_reg_668 <= icmp_ln167_fu_347_p2;
        icmp_ln167_reg_668_pp0_iter10_reg <= icmp_ln167_reg_668_pp0_iter9_reg;
        icmp_ln167_reg_668_pp0_iter11_reg <= icmp_ln167_reg_668_pp0_iter10_reg;
        icmp_ln167_reg_668_pp0_iter12_reg <= icmp_ln167_reg_668_pp0_iter11_reg;
        icmp_ln167_reg_668_pp0_iter13_reg <= icmp_ln167_reg_668_pp0_iter12_reg;
        icmp_ln167_reg_668_pp0_iter14_reg <= icmp_ln167_reg_668_pp0_iter13_reg;
        icmp_ln167_reg_668_pp0_iter15_reg <= icmp_ln167_reg_668_pp0_iter14_reg;
        icmp_ln167_reg_668_pp0_iter16_reg <= icmp_ln167_reg_668_pp0_iter15_reg;
        icmp_ln167_reg_668_pp0_iter17_reg <= icmp_ln167_reg_668_pp0_iter16_reg;
        icmp_ln167_reg_668_pp0_iter18_reg <= icmp_ln167_reg_668_pp0_iter17_reg;
        icmp_ln167_reg_668_pp0_iter19_reg <= icmp_ln167_reg_668_pp0_iter18_reg;
        icmp_ln167_reg_668_pp0_iter1_reg <= icmp_ln167_reg_668;
        icmp_ln167_reg_668_pp0_iter20_reg <= icmp_ln167_reg_668_pp0_iter19_reg;
        icmp_ln167_reg_668_pp0_iter21_reg <= icmp_ln167_reg_668_pp0_iter20_reg;
        icmp_ln167_reg_668_pp0_iter22_reg <= icmp_ln167_reg_668_pp0_iter21_reg;
        icmp_ln167_reg_668_pp0_iter23_reg <= icmp_ln167_reg_668_pp0_iter22_reg;
        icmp_ln167_reg_668_pp0_iter24_reg <= icmp_ln167_reg_668_pp0_iter23_reg;
        icmp_ln167_reg_668_pp0_iter25_reg <= icmp_ln167_reg_668_pp0_iter24_reg;
        icmp_ln167_reg_668_pp0_iter26_reg <= icmp_ln167_reg_668_pp0_iter25_reg;
        icmp_ln167_reg_668_pp0_iter27_reg <= icmp_ln167_reg_668_pp0_iter26_reg;
        icmp_ln167_reg_668_pp0_iter28_reg <= icmp_ln167_reg_668_pp0_iter27_reg;
        icmp_ln167_reg_668_pp0_iter29_reg <= icmp_ln167_reg_668_pp0_iter28_reg;
        icmp_ln167_reg_668_pp0_iter2_reg <= icmp_ln167_reg_668_pp0_iter1_reg;
        icmp_ln167_reg_668_pp0_iter30_reg <= icmp_ln167_reg_668_pp0_iter29_reg;
        icmp_ln167_reg_668_pp0_iter31_reg <= icmp_ln167_reg_668_pp0_iter30_reg;
        icmp_ln167_reg_668_pp0_iter32_reg <= icmp_ln167_reg_668_pp0_iter31_reg;
        icmp_ln167_reg_668_pp0_iter33_reg <= icmp_ln167_reg_668_pp0_iter32_reg;
        icmp_ln167_reg_668_pp0_iter34_reg <= icmp_ln167_reg_668_pp0_iter33_reg;
        icmp_ln167_reg_668_pp0_iter35_reg <= icmp_ln167_reg_668_pp0_iter34_reg;
        icmp_ln167_reg_668_pp0_iter36_reg <= icmp_ln167_reg_668_pp0_iter35_reg;
        icmp_ln167_reg_668_pp0_iter3_reg <= icmp_ln167_reg_668_pp0_iter2_reg;
        icmp_ln167_reg_668_pp0_iter4_reg <= icmp_ln167_reg_668_pp0_iter3_reg;
        icmp_ln167_reg_668_pp0_iter5_reg <= icmp_ln167_reg_668_pp0_iter4_reg;
        icmp_ln167_reg_668_pp0_iter6_reg <= icmp_ln167_reg_668_pp0_iter5_reg;
        icmp_ln167_reg_668_pp0_iter7_reg <= icmp_ln167_reg_668_pp0_iter6_reg;
        icmp_ln167_reg_668_pp0_iter8_reg <= icmp_ln167_reg_668_pp0_iter7_reg;
        icmp_ln167_reg_668_pp0_iter9_reg <= icmp_ln167_reg_668_pp0_iter8_reg;
        icmp_ln170_1_reg_682 <= icmp_ln170_1_fu_363_p2;
        icmp_ln170_1_reg_682_pp0_iter10_reg <= icmp_ln170_1_reg_682_pp0_iter9_reg;
        icmp_ln170_1_reg_682_pp0_iter11_reg <= icmp_ln170_1_reg_682_pp0_iter10_reg;
        icmp_ln170_1_reg_682_pp0_iter12_reg <= icmp_ln170_1_reg_682_pp0_iter11_reg;
        icmp_ln170_1_reg_682_pp0_iter13_reg <= icmp_ln170_1_reg_682_pp0_iter12_reg;
        icmp_ln170_1_reg_682_pp0_iter14_reg <= icmp_ln170_1_reg_682_pp0_iter13_reg;
        icmp_ln170_1_reg_682_pp0_iter15_reg <= icmp_ln170_1_reg_682_pp0_iter14_reg;
        icmp_ln170_1_reg_682_pp0_iter16_reg <= icmp_ln170_1_reg_682_pp0_iter15_reg;
        icmp_ln170_1_reg_682_pp0_iter17_reg <= icmp_ln170_1_reg_682_pp0_iter16_reg;
        icmp_ln170_1_reg_682_pp0_iter18_reg <= icmp_ln170_1_reg_682_pp0_iter17_reg;
        icmp_ln170_1_reg_682_pp0_iter19_reg <= icmp_ln170_1_reg_682_pp0_iter18_reg;
        icmp_ln170_1_reg_682_pp0_iter1_reg <= icmp_ln170_1_reg_682;
        icmp_ln170_1_reg_682_pp0_iter20_reg <= icmp_ln170_1_reg_682_pp0_iter19_reg;
        icmp_ln170_1_reg_682_pp0_iter21_reg <= icmp_ln170_1_reg_682_pp0_iter20_reg;
        icmp_ln170_1_reg_682_pp0_iter22_reg <= icmp_ln170_1_reg_682_pp0_iter21_reg;
        icmp_ln170_1_reg_682_pp0_iter23_reg <= icmp_ln170_1_reg_682_pp0_iter22_reg;
        icmp_ln170_1_reg_682_pp0_iter24_reg <= icmp_ln170_1_reg_682_pp0_iter23_reg;
        icmp_ln170_1_reg_682_pp0_iter25_reg <= icmp_ln170_1_reg_682_pp0_iter24_reg;
        icmp_ln170_1_reg_682_pp0_iter26_reg <= icmp_ln170_1_reg_682_pp0_iter25_reg;
        icmp_ln170_1_reg_682_pp0_iter27_reg <= icmp_ln170_1_reg_682_pp0_iter26_reg;
        icmp_ln170_1_reg_682_pp0_iter28_reg <= icmp_ln170_1_reg_682_pp0_iter27_reg;
        icmp_ln170_1_reg_682_pp0_iter29_reg <= icmp_ln170_1_reg_682_pp0_iter28_reg;
        icmp_ln170_1_reg_682_pp0_iter2_reg <= icmp_ln170_1_reg_682_pp0_iter1_reg;
        icmp_ln170_1_reg_682_pp0_iter30_reg <= icmp_ln170_1_reg_682_pp0_iter29_reg;
        icmp_ln170_1_reg_682_pp0_iter31_reg <= icmp_ln170_1_reg_682_pp0_iter30_reg;
        icmp_ln170_1_reg_682_pp0_iter32_reg <= icmp_ln170_1_reg_682_pp0_iter31_reg;
        icmp_ln170_1_reg_682_pp0_iter33_reg <= icmp_ln170_1_reg_682_pp0_iter32_reg;
        icmp_ln170_1_reg_682_pp0_iter34_reg <= icmp_ln170_1_reg_682_pp0_iter33_reg;
        icmp_ln170_1_reg_682_pp0_iter35_reg <= icmp_ln170_1_reg_682_pp0_iter34_reg;
        icmp_ln170_1_reg_682_pp0_iter36_reg <= icmp_ln170_1_reg_682_pp0_iter35_reg;
        icmp_ln170_1_reg_682_pp0_iter37_reg <= icmp_ln170_1_reg_682_pp0_iter36_reg;
        icmp_ln170_1_reg_682_pp0_iter3_reg <= icmp_ln170_1_reg_682_pp0_iter2_reg;
        icmp_ln170_1_reg_682_pp0_iter4_reg <= icmp_ln170_1_reg_682_pp0_iter3_reg;
        icmp_ln170_1_reg_682_pp0_iter5_reg <= icmp_ln170_1_reg_682_pp0_iter4_reg;
        icmp_ln170_1_reg_682_pp0_iter6_reg <= icmp_ln170_1_reg_682_pp0_iter5_reg;
        icmp_ln170_1_reg_682_pp0_iter7_reg <= icmp_ln170_1_reg_682_pp0_iter6_reg;
        icmp_ln170_1_reg_682_pp0_iter8_reg <= icmp_ln170_1_reg_682_pp0_iter7_reg;
        icmp_ln170_1_reg_682_pp0_iter9_reg <= icmp_ln170_1_reg_682_pp0_iter8_reg;
        icmp_ln170_reg_725 <= icmp_ln170_fu_530_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter10_empty_41_reg_189 <= ap_phi_reg_pp0_iter9_empty_41_reg_189;
        ap_phi_reg_pp0_iter10_empty_reg_180 <= ap_phi_reg_pp0_iter9_empty_reg_180;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter11_empty_41_reg_189 <= ap_phi_reg_pp0_iter10_empty_41_reg_189;
        ap_phi_reg_pp0_iter11_empty_reg_180 <= ap_phi_reg_pp0_iter10_empty_reg_180;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter12_empty_41_reg_189 <= ap_phi_reg_pp0_iter11_empty_41_reg_189;
        ap_phi_reg_pp0_iter12_empty_reg_180 <= ap_phi_reg_pp0_iter11_empty_reg_180;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter13_empty_41_reg_189 <= ap_phi_reg_pp0_iter12_empty_41_reg_189;
        ap_phi_reg_pp0_iter13_empty_reg_180 <= ap_phi_reg_pp0_iter12_empty_reg_180;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter14_empty_41_reg_189 <= ap_phi_reg_pp0_iter13_empty_41_reg_189;
        ap_phi_reg_pp0_iter14_empty_reg_180 <= ap_phi_reg_pp0_iter13_empty_reg_180;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter15_empty_41_reg_189 <= ap_phi_reg_pp0_iter14_empty_41_reg_189;
        ap_phi_reg_pp0_iter15_empty_reg_180 <= ap_phi_reg_pp0_iter14_empty_reg_180;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter16_empty_41_reg_189 <= ap_phi_reg_pp0_iter15_empty_41_reg_189;
        ap_phi_reg_pp0_iter16_empty_reg_180 <= ap_phi_reg_pp0_iter15_empty_reg_180;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter17_empty_41_reg_189 <= ap_phi_reg_pp0_iter16_empty_41_reg_189;
        ap_phi_reg_pp0_iter17_empty_reg_180 <= ap_phi_reg_pp0_iter16_empty_reg_180;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter18_empty_41_reg_189 <= ap_phi_reg_pp0_iter17_empty_41_reg_189;
        ap_phi_reg_pp0_iter18_empty_reg_180 <= ap_phi_reg_pp0_iter17_empty_reg_180;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter19_empty_41_reg_189 <= ap_phi_reg_pp0_iter18_empty_41_reg_189;
        ap_phi_reg_pp0_iter19_empty_reg_180 <= ap_phi_reg_pp0_iter18_empty_reg_180;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter1_empty_41_reg_189 <= ap_phi_reg_pp0_iter0_empty_41_reg_189;
        ap_phi_reg_pp0_iter1_empty_reg_180 <= ap_phi_reg_pp0_iter0_empty_reg_180;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter20_empty_41_reg_189 <= ap_phi_reg_pp0_iter19_empty_41_reg_189;
        ap_phi_reg_pp0_iter20_empty_reg_180 <= ap_phi_reg_pp0_iter19_empty_reg_180;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter21_empty_41_reg_189 <= ap_phi_reg_pp0_iter20_empty_41_reg_189;
        ap_phi_reg_pp0_iter21_empty_reg_180 <= ap_phi_reg_pp0_iter20_empty_reg_180;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter22_empty_41_reg_189 <= ap_phi_reg_pp0_iter21_empty_41_reg_189;
        ap_phi_reg_pp0_iter22_empty_reg_180 <= ap_phi_reg_pp0_iter21_empty_reg_180;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter23_empty_41_reg_189 <= ap_phi_reg_pp0_iter22_empty_41_reg_189;
        ap_phi_reg_pp0_iter23_empty_reg_180 <= ap_phi_reg_pp0_iter22_empty_reg_180;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter24_empty_41_reg_189 <= ap_phi_reg_pp0_iter23_empty_41_reg_189;
        ap_phi_reg_pp0_iter24_empty_reg_180 <= ap_phi_reg_pp0_iter23_empty_reg_180;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter25_empty_41_reg_189 <= ap_phi_reg_pp0_iter24_empty_41_reg_189;
        ap_phi_reg_pp0_iter25_empty_reg_180 <= ap_phi_reg_pp0_iter24_empty_reg_180;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter26_empty_41_reg_189 <= ap_phi_reg_pp0_iter25_empty_41_reg_189;
        ap_phi_reg_pp0_iter26_empty_reg_180 <= ap_phi_reg_pp0_iter25_empty_reg_180;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter27_empty_41_reg_189 <= ap_phi_reg_pp0_iter26_empty_41_reg_189;
        ap_phi_reg_pp0_iter27_empty_reg_180 <= ap_phi_reg_pp0_iter26_empty_reg_180;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        ap_phi_reg_pp0_iter28_empty_41_reg_189 <= ap_phi_reg_pp0_iter27_empty_41_reg_189;
        ap_phi_reg_pp0_iter28_empty_reg_180 <= ap_phi_reg_pp0_iter27_empty_reg_180;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        ap_phi_reg_pp0_iter29_empty_41_reg_189 <= ap_phi_reg_pp0_iter28_empty_41_reg_189;
        ap_phi_reg_pp0_iter29_empty_reg_180 <= ap_phi_reg_pp0_iter28_empty_reg_180;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter2_empty_41_reg_189 <= ap_phi_reg_pp0_iter1_empty_41_reg_189;
        ap_phi_reg_pp0_iter2_empty_reg_180 <= ap_phi_reg_pp0_iter1_empty_reg_180;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter29 == 1'b1))) begin
        ap_phi_reg_pp0_iter30_empty_41_reg_189 <= ap_phi_reg_pp0_iter29_empty_41_reg_189;
        ap_phi_reg_pp0_iter30_empty_reg_180 <= ap_phi_reg_pp0_iter29_empty_reg_180;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter30 == 1'b1))) begin
        ap_phi_reg_pp0_iter31_empty_41_reg_189 <= ap_phi_reg_pp0_iter30_empty_41_reg_189;
        ap_phi_reg_pp0_iter31_empty_reg_180 <= ap_phi_reg_pp0_iter30_empty_reg_180;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter31 == 1'b1))) begin
        ap_phi_reg_pp0_iter32_empty_41_reg_189 <= ap_phi_reg_pp0_iter31_empty_41_reg_189;
        ap_phi_reg_pp0_iter32_empty_reg_180 <= ap_phi_reg_pp0_iter31_empty_reg_180;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        ap_phi_reg_pp0_iter33_empty_41_reg_189 <= ap_phi_reg_pp0_iter32_empty_41_reg_189;
        ap_phi_reg_pp0_iter33_empty_reg_180 <= ap_phi_reg_pp0_iter32_empty_reg_180;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter33 == 1'b1))) begin
        ap_phi_reg_pp0_iter34_empty_41_reg_189 <= ap_phi_reg_pp0_iter33_empty_41_reg_189;
        ap_phi_reg_pp0_iter34_empty_reg_180 <= ap_phi_reg_pp0_iter33_empty_reg_180;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter34 == 1'b1))) begin
        ap_phi_reg_pp0_iter35_empty_41_reg_189 <= ap_phi_reg_pp0_iter34_empty_41_reg_189;
        ap_phi_reg_pp0_iter35_empty_reg_180 <= ap_phi_reg_pp0_iter34_empty_reg_180;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter35 == 1'b1))) begin
        ap_phi_reg_pp0_iter36_empty_41_reg_189 <= ap_phi_reg_pp0_iter35_empty_41_reg_189;
        ap_phi_reg_pp0_iter36_empty_reg_180 <= ap_phi_reg_pp0_iter35_empty_reg_180;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter3_empty_41_reg_189 <= ap_phi_reg_pp0_iter2_empty_41_reg_189;
        ap_phi_reg_pp0_iter3_empty_reg_180 <= ap_phi_reg_pp0_iter2_empty_reg_180;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter4_empty_41_reg_189 <= ap_phi_reg_pp0_iter3_empty_41_reg_189;
        ap_phi_reg_pp0_iter4_empty_reg_180 <= ap_phi_reg_pp0_iter3_empty_reg_180;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter5_empty_41_reg_189 <= ap_phi_reg_pp0_iter4_empty_41_reg_189;
        ap_phi_reg_pp0_iter5_empty_reg_180 <= ap_phi_reg_pp0_iter4_empty_reg_180;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter6_empty_41_reg_189 <= ap_phi_reg_pp0_iter5_empty_41_reg_189;
        ap_phi_reg_pp0_iter6_empty_reg_180 <= ap_phi_reg_pp0_iter5_empty_reg_180;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter7_empty_41_reg_189 <= ap_phi_reg_pp0_iter6_empty_41_reg_189;
        ap_phi_reg_pp0_iter7_empty_reg_180 <= ap_phi_reg_pp0_iter6_empty_reg_180;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter8_empty_41_reg_189 <= ap_phi_reg_pp0_iter7_empty_41_reg_189;
        ap_phi_reg_pp0_iter8_empty_reg_180 <= ap_phi_reg_pp0_iter7_empty_reg_180;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter9_empty_41_reg_189 <= ap_phi_reg_pp0_iter8_empty_41_reg_189;
        ap_phi_reg_pp0_iter9_empty_reg_180 <= ap_phi_reg_pp0_iter8_empty_reg_180;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gmem_addr_33_read_reg_720 <= m_axi_gmem_RDATA;
        select_ln157_3_reg_704 <= select_ln157_3_fu_433_p3;
        sext_ln10_1_cast_reg_647 <= sext_ln10_1_cast_fu_202_p1;
        sext_ln162_cast_reg_642 <= sext_ln162_cast_fu_198_p1;
    end
end

always @ (*) begin
    if (((icmp_ln162_fu_243_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln162_reg_657_pp0_iter36_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        ap_condition_exit_pp0_iter37_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter37_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter37_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) 
    & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) 
    & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0_0to36 = 1'b1;
    end else begin
        ap_idle_pp0_0to36 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) 
    & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0_1to38 = 1'b1;
    end else begin
        ap_idle_pp0_1to38 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln167_reg_668_pp0_iter36_reg == 1'd1) & (icmp_ln162_reg_657_pp0_iter36_reg == 1'd0))) begin
        ap_phi_mux_empty_41_phi_fu_192_p4 = gmem_addr_33_read_reg_720;
    end else begin
        ap_phi_mux_empty_41_phi_fu_192_p4 = ap_phi_reg_pp0_iter37_empty_41_reg_189;
    end
end

always @ (*) begin
    if (((icmp_ln167_reg_668_pp0_iter36_reg == 1'd1) & (icmp_ln162_reg_657_pp0_iter36_reg == 1'd0))) begin
        ap_phi_mux_empty_phi_fu_183_p4 = gmem_addr_32_read_reg_699;
    end else begin
        ap_phi_mux_empty_phi_fu_183_p4 = ap_phi_reg_pp0_iter37_empty_reg_180;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (ap_predicate_op135_readreq_state4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln167_reg_668 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln162_reg_657 == 1'd0)))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln167_reg_668_pp0_iter36_reg == 1'd1) & (icmp_ln162_reg_657_pp0_iter36_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter37 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1) & (ap_predicate_op274_read_state74 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1)))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln170_1_reg_682_pp0_iter37_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter38 == 1'b1))) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if ((1'b1 == ap_condition_1320)) begin
            m_axi_gmem_ARADDR = sext_ln168_fu_400_p1;
        end else if ((1'b1 == ap_condition_1316)) begin
            m_axi_gmem_ARADDR = sext_ln167_fu_390_p1;
        end else begin
            m_axi_gmem_ARADDR = 'bx;
        end
    end else begin
        m_axi_gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op131_readreq_state3 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_predicate_op135_readreq_state4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        m_axi_gmem_ARVALID = 1'b1;
    end else begin
        m_axi_gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_predicate_op274_read_state74 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1)) | ((ap_predicate_op285_read_state75 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter37 == 1'b1)))) begin
        m_axi_gmem_RREADY = 1'b1;
    end else begin
        m_axi_gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln170_1_reg_682_pp0_iter37_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter38 == 1'b1))) begin
        m_axi_gmem_WVALID = 1'b1;
    end else begin
        m_axi_gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((1'b1 == ap_condition_exit_pp0_iter37_stage0) & (ap_idle_pp0_0to36 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to38 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign abscond12_fu_502_p2 = ((trunc_ln168_fu_482_p1 != 8'd0) ? 1'b1 : 1'b0);

assign abscond9_fu_468_p2 = ((trunc_ln167_1_fu_448_p1 != 8'd0) ? 1'b1 : 1'b0);

assign add_ln162_1_fu_275_p2 = (i_fu_122 + 9'd1);

assign add_ln162_fu_249_p2 = (indvar_flatten432_fu_126 + 19'd1);

assign add_ln164_fu_369_p2 = (select_ln157_fu_267_p3 + 10'd1);

assign add_ln167_1_fu_353_p2 = ($signed(zext_ln167_fu_343_p1) + $signed(sext_ln10_1_cast_reg_647));

assign add_ln167_fu_323_p2 = (empty_42_fu_317_p2 + zext_ln164_2_fu_313_p1);

assign add_ln168_fu_358_p2 = ($signed(zext_ln167_fu_343_p1) + $signed(sext_ln162_cast_reg_642));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((1'b1 == ap_block_state75_pp0_stage0_iter37) & (ap_enable_reg_pp0_iter37 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((1'b1 == ap_block_state77_io) & (ap_enable_reg_pp0_iter38 == 1'b1)) | ((1'b1 == ap_block_state75_pp0_stage0_iter37) & (ap_enable_reg_pp0_iter37 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state3_io)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((1'b1 == ap_block_state77_io) & (ap_enable_reg_pp0_iter38 == 1'b1)) | ((1'b1 == ap_block_state75_pp0_stage0_iter37) & (ap_enable_reg_pp0_iter37 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state3_io)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((1'b1 == ap_block_state74_pp0_stage1_iter36) & (ap_enable_reg_pp0_iter36 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state4_io)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((1'b1 == ap_block_state74_pp0_stage1_iter36) & (ap_enable_reg_pp0_iter36 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state4_io)));
end

always @ (*) begin
    ap_block_state3_io = ((ap_predicate_op131_readreq_state3 == 1'b1) & (m_axi_gmem_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state4_io = ((ap_predicate_op135_readreq_state4 == 1'b1) & (m_axi_gmem_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state74_pp0_stage1_iter36 = ((ap_predicate_op274_read_state74 == 1'b1) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state75_pp0_stage0_iter37 = ((ap_predicate_op285_read_state75 == 1'b1) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state77_io = ((icmp_ln170_1_reg_682_pp0_iter37_reg == 1'd1) & (m_axi_gmem_WREADY == 1'b0));
end

always @ (*) begin
    ap_condition_1316 = ((ap_predicate_op131_readreq_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_1320 = ((1'b0 == ap_block_pp0_stage1_11001) & (ap_predicate_op135_readreq_state4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign ap_phi_reg_pp0_iter0_empty_41_reg_189 = 'bx;

assign ap_phi_reg_pp0_iter0_empty_reg_180 = 'bx;

always @ (*) begin
    ap_predicate_op131_readreq_state3 = ((icmp_ln167_reg_668 == 1'd1) & (icmp_ln162_reg_657 == 1'd0));
end

always @ (*) begin
    ap_predicate_op135_readreq_state4 = ((icmp_ln167_reg_668 == 1'd1) & (icmp_ln162_reg_657 == 1'd0));
end

always @ (*) begin
    ap_predicate_op274_read_state74 = ((icmp_ln167_reg_668_pp0_iter35_reg == 1'd1) & (icmp_ln162_reg_657_pp0_iter35_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op285_read_state75 = ((icmp_ln167_reg_668_pp0_iter36_reg == 1'd1) & (icmp_ln162_reg_657_pp0_iter36_reg == 1'd0));
end

assign ap_ready = ap_ready_sig;

assign empty_42_fu_317_p2 = (p_shl_fu_297_p1 + p_shl12_fu_309_p1);

assign icmp_ln162_fu_243_p2 = ((indvar_flatten432_fu_126 == 19'd307200) ? 1'b1 : 1'b0);

assign icmp_ln164_fu_261_p2 = ((j_fu_118 == 10'd640) ? 1'b1 : 1'b0);

assign icmp_ln167_fu_347_p2 = ((trunc_ln167_fu_329_p1 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln169_fu_516_p2 = ((temp1_fu_474_p3 > temp2_fu_508_p3) ? 1'b1 : 1'b0);

assign icmp_ln170_1_fu_363_p2 = ((trunc_ln167_fu_329_p1 == 6'd63) ? 1'b1 : 1'b0);

assign icmp_ln170_fu_530_p2 = ((temp3_fu_522_p3 > 8'd150) ? 1'b1 : 1'b0);

assign lshr_ln_fu_333_p4 = {{add_ln167_fu_323_p2[18:6]}};

assign m_axi_gmem_ARBURST = 2'd0;

assign m_axi_gmem_ARCACHE = 4'd0;

assign m_axi_gmem_ARID = 1'd0;

assign m_axi_gmem_ARLEN = 64'd1;

assign m_axi_gmem_ARLOCK = 2'd0;

assign m_axi_gmem_ARPROT = 3'd0;

assign m_axi_gmem_ARQOS = 4'd0;

assign m_axi_gmem_ARREGION = 4'd0;

assign m_axi_gmem_ARSIZE = 3'd0;

assign m_axi_gmem_ARUSER = 1'd0;

assign m_axi_gmem_AWADDR = 64'd0;

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLEN = 32'd0;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_AWVALID = 1'b0;

assign m_axi_gmem_BREADY = 1'b0;

assign m_axi_gmem_WDATA = $signed(or_ln1_fu_588_p3);

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WSTRB = 64'd18446744073709551615;

assign m_axi_gmem_WUSER = 1'd0;

assign neg11_fu_496_p2 = (8'd0 - trunc_ln168_fu_482_p1);

assign neg8_fu_462_p2 = (8'd0 - trunc_ln167_1_fu_448_p1);

assign or_ln1_fu_588_p3 = {{icmp_ln170_reg_725}, {sext_ln162_2_fu_585_p1}};

assign p_shl12_fu_309_p1 = tmp_3_fu_301_p3;

assign p_shl_fu_297_p1 = tmp_fu_289_p3;

assign select_ln157_1_fu_419_p3 = ((icmp_ln164_reg_661_pp0_iter36_reg[0:0] == 1'b1) ? 504'd0 : shiftreg_fu_114);

assign select_ln157_2_fu_426_p3 = ((icmp_ln164_reg_661_pp0_iter36_reg[0:0] == 1'b1) ? 504'd0 : shiftreg49_fu_110);

assign select_ln157_3_fu_433_p3 = ((icmp_ln164_reg_661_pp0_iter36_reg[0:0] == 1'b1) ? 497'd0 : phi_ln170_fu_106);

assign select_ln157_fu_267_p3 = ((icmp_ln164_fu_261_p2[0:0] == 1'b1) ? 10'd0 : j_fu_118);

assign select_ln162_fu_281_p3 = ((icmp_ln164_fu_261_p2[0:0] == 1'b1) ? add_ln162_1_fu_275_p2 : i_fu_122);

assign select_ln170_fu_557_p3 = ((icmp_ln170_1_reg_682_pp0_iter36_reg[0:0] == 1'b1) ? 497'd0 : tmp_s_fu_549_p3);

assign sext_ln10_1_cast_fu_202_p1 = $signed(sext_ln10_1);

assign sext_ln162_2_fu_585_p1 = select_ln157_3_reg_704;

assign sext_ln162_cast_fu_198_p1 = $signed(sext_ln162);

assign sext_ln164_fu_545_p1 = $signed(tmp_4_fu_536_p4);

assign sext_ln167_fu_390_p1 = $signed(add_ln167_1_reg_672);

assign sext_ln168_fu_400_p1 = $signed(add_ln168_reg_677);

assign temp1_fu_474_p3 = ((abscond9_fu_468_p2[0:0] == 1'b1) ? trunc_ln167_1_fu_448_p1 : neg8_fu_462_p2);

assign temp2_fu_508_p3 = ((abscond12_fu_502_p2[0:0] == 1'b1) ? trunc_ln168_fu_482_p1 : neg11_fu_496_p2);

assign temp3_fu_522_p3 = ((icmp_ln169_fu_516_p2[0:0] == 1'b1) ? temp1_fu_474_p3 : temp2_fu_508_p3);

assign tmp_3_fu_301_p3 = {{select_ln162_fu_281_p3}, {7'd0}};

assign tmp_4_fu_536_p4 = {{select_ln157_3_reg_704[496:8]}};

assign tmp_fu_289_p3 = {{select_ln162_fu_281_p3}, {9'd0}};

assign tmp_s_fu_549_p3 = {{icmp_ln170_fu_530_p2}, {sext_ln164_fu_545_p1}};

assign trunc_ln167_1_fu_448_p1 = ap_phi_mux_empty_phi_fu_183_p4[7:0];

assign trunc_ln167_fu_329_p1 = add_ln167_fu_323_p2[5:0];

assign trunc_ln168_fu_482_p1 = ap_phi_mux_empty_41_phi_fu_192_p4[7:0];

assign zext_ln164_1_fu_444_p1 = select_ln157_1_fu_419_p3;

assign zext_ln164_2_fu_313_p1 = select_ln157_fu_267_p3;

assign zext_ln164_fu_440_p1 = select_ln157_2_fu_426_p3;

assign zext_ln167_fu_343_p1 = lshr_ln_fu_333_p4;

endmodule //edgedetect_edgedetect_Pipeline_VITIS_LOOP_162_1_VITIS_LOOP_164_2
