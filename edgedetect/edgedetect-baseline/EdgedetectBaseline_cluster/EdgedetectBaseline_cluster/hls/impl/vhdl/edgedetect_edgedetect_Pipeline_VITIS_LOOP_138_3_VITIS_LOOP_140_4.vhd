-- ==============================================================
-- Generated by Vitis HLS v2024.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity edgedetect_edgedetect_Pipeline_VITIS_LOOP_138_3_VITIS_LOOP_140_4 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    sext_ln26 : IN STD_LOGIC_VECTOR (57 downto 0);
    p_cast_cast : IN STD_LOGIC_VECTOR (57 downto 0);
    p_cast45_cast : IN STD_LOGIC_VECTOR (57 downto 0);
    p_cast47_cast : IN STD_LOGIC_VECTOR (57 downto 0);
    p_cast49_cast : IN STD_LOGIC_VECTOR (57 downto 0);
    p_cast51_cast : IN STD_LOGIC_VECTOR (57 downto 0);
    p_cast53_cast : IN STD_LOGIC_VECTOR (57 downto 0);
    p_cast55_cast : IN STD_LOGIC_VECTOR (57 downto 0);
    p_cast57_cast : IN STD_LOGIC_VECTOR (57 downto 0);
    output_r : IN STD_LOGIC_VECTOR (63 downto 0);
    p_cast77 : IN STD_LOGIC_VECTOR (8 downto 0);
    p_cast78 : IN STD_LOGIC_VECTOR (8 downto 0);
    p_cast79 : IN STD_LOGIC_VECTOR (8 downto 0);
    p_cast80 : IN STD_LOGIC_VECTOR (8 downto 0);
    p_cast81 : IN STD_LOGIC_VECTOR (8 downto 0);
    p_cast82 : IN STD_LOGIC_VECTOR (8 downto 0);
    p_cast83 : IN STD_LOGIC_VECTOR (8 downto 0);
    p_cast84 : IN STD_LOGIC_VECTOR (8 downto 0);
    zext_ln52 : IN STD_LOGIC_VECTOR (8 downto 0);
    normal_factor_8_reload : IN STD_LOGIC_VECTOR (11 downto 0);
    icmp_ln135 : IN STD_LOGIC_VECTOR (0 downto 0);
    temp_buf : IN STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of edgedetect_edgedetect_Pipeline_VITIS_LOOP_138_3_VITIS_LOOP_140_4 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (17 downto 0) := "000000000001000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (17 downto 0) := "000000000010000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (17 downto 0) := "000000000100000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (17 downto 0) := "000000001000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (17 downto 0) := "000000010000000000";
    constant ap_ST_fsm_pp0_stage11 : STD_LOGIC_VECTOR (17 downto 0) := "000000100000000000";
    constant ap_ST_fsm_pp0_stage12 : STD_LOGIC_VECTOR (17 downto 0) := "000001000000000000";
    constant ap_ST_fsm_pp0_stage13 : STD_LOGIC_VECTOR (17 downto 0) := "000010000000000000";
    constant ap_ST_fsm_pp0_stage14 : STD_LOGIC_VECTOR (17 downto 0) := "000100000000000000";
    constant ap_ST_fsm_pp0_stage15 : STD_LOGIC_VECTOR (17 downto 0) := "001000000000000000";
    constant ap_ST_fsm_pp0_stage16 : STD_LOGIC_VECTOR (17 downto 0) := "010000000000000000";
    constant ap_ST_fsm_pp0_stage17 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv19_4A744 : STD_LOGIC_VECTOR (18 downto 0) := "1001010011101000100";
    constant ap_const_lv19_1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    constant ap_const_lv10_27E : STD_LOGIC_VECTOR (9 downto 0) := "1001111110";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv19_280 : STD_LOGIC_VECTOR (18 downto 0) := "0000000001010000000";
    constant ap_const_lv19_500 : STD_LOGIC_VECTOR (18 downto 0) := "0000000010100000000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv11_281 : STD_LOGIC_VECTOR (10 downto 0) := "01010000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage17 : signal is "none";
    signal icmp_ln138_reg_1720 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state18_io : BOOLEAN;
    signal ap_block_state90_pp0_stage17_iter4 : BOOLEAN;
    signal ap_block_pp0_stage17_subdone : BOOLEAN;
    signal ap_condition_exit_pp0_iter0_stage17 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal gmem_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal gmem_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_block_pp0_stage9 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_block_pp0_stage8 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage11 : signal is "none";
    signal ap_block_pp0_stage11 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage10 : signal is "none";
    signal ap_block_pp0_stage10 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage13 : signal is "none";
    signal ap_block_pp0_stage13 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage12 : signal is "none";
    signal ap_block_pp0_stage12 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage15 : signal is "none";
    signal ap_block_pp0_stage15 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage14 : signal is "none";
    signal ap_block_pp0_stage14 : BOOLEAN;
    signal ap_block_pp0_stage17 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage16 : signal is "none";
    signal ap_block_pp0_stage16 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal gmem_blk_n_AW : STD_LOGIC;
    signal gmem_blk_n_W : STD_LOGIC;
    signal gmem_blk_n_B : STD_LOGIC;
    signal ap_block_state19_io : BOOLEAN;
    signal ap_block_state91_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal zext_ln52_cast_fu_517_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal zext_ln52_cast_reg_1630 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_cast84_cast_fu_521_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_cast84_cast_reg_1635 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_cast83_cast_fu_525_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_cast83_cast_reg_1640 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_cast82_cast_fu_529_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_cast82_cast_reg_1645 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_cast81_cast_fu_533_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_cast81_cast_reg_1650 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_cast80_cast_fu_537_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_cast80_cast_reg_1655 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_cast79_cast_fu_541_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_cast79_cast_reg_1660 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_cast78_cast_fu_545_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_cast78_cast_reg_1665 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_cast77_cast_fu_549_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_cast77_cast_reg_1670 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_cast57_cast_cast_fu_553_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast57_cast_cast_reg_1675 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast55_cast_cast_fu_557_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast55_cast_cast_reg_1680 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast53_cast_cast_fu_561_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast53_cast_cast_reg_1685 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast51_cast_cast_fu_565_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast51_cast_cast_reg_1690 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast49_cast_cast_fu_569_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast49_cast_cast_reg_1695 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast47_cast_cast_fu_573_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast47_cast_cast_reg_1700 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast45_cast_cast_fu_577_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast45_cast_cast_reg_1705 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast_cast_cast_fu_581_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast_cast_cast_reg_1710 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln26_cast_fu_585_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln26_cast_reg_1715 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln138_fu_607_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state74_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal icmp_ln138_reg_1720_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln138_reg_1720_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln138_reg_1720_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln138_reg_1720_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln138_reg_1720_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln138_reg_1720_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln138_reg_1720_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln138_reg_1720_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln138_reg_1720_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln117_fu_631_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln117_reg_1724 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln117_reg_1724_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln117_reg_1724_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln117_reg_1724_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln117_reg_1724_pp0_iter4_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln117_reg_1724_pp0_iter5_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_fu_677_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal empty_reg_1729 : STD_LOGIC_VECTOR (18 downto 0);
    signal empty_reg_1729_pp0_iter1_reg : STD_LOGIC_VECTOR (18 downto 0);
    signal empty_reg_1729_pp0_iter2_reg : STD_LOGIC_VECTOR (18 downto 0);
    signal empty_reg_1729_pp0_iter3_reg : STD_LOGIC_VECTOR (18 downto 0);
    signal empty_reg_1729_pp0_iter4_reg : STD_LOGIC_VECTOR (18 downto 0);
    signal empty_reg_1729_pp0_iter5_reg : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln143_fu_687_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln143_reg_1734 : STD_LOGIC_VECTOR (18 downto 0);
    signal empty_43_fu_697_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_43_reg_1740 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln147_s_reg_1746 : STD_LOGIC_VECTOR (57 downto 0);
    signal trunc_ln147_fu_712_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln147_reg_1751 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln147_reg_1751_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln147_reg_1751_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln147_reg_1751_pp0_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln147_reg_1751_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_state3_io : BOOLEAN;
    signal ap_block_state75_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_block_state4_io : BOOLEAN;
    signal ap_block_state76_pp0_stage3_iter4 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal trunc_ln147_3_reg_1768 : STD_LOGIC_VECTOR (57 downto 0);
    signal trunc_ln147_4_fu_768_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln147_4_reg_1773 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln147_4_reg_1773_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln147_4_reg_1773_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln147_4_reg_1773_pp0_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln147_4_reg_1773_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_state5_io : BOOLEAN;
    signal ap_block_state77_pp0_stage4_iter4 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal ap_block_state6_io : BOOLEAN;
    signal ap_block_state78_pp0_stage5_iter4 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal trunc_ln147_6_reg_1790 : STD_LOGIC_VECTOR (57 downto 0);
    signal trunc_ln147_8_fu_803_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln147_8_reg_1795 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln147_8_reg_1795_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln147_8_reg_1795_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln147_8_reg_1795_pp0_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln147_8_reg_1795_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_state7_io : BOOLEAN;
    signal ap_block_state79_pp0_stage6_iter4 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal ap_block_state8_io : BOOLEAN;
    signal ap_block_state80_pp0_stage7_iter4 : BOOLEAN;
    signal ap_block_state188_pp0_stage7_iter10 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal empty_44_fu_832_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_44_reg_1812 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln147_9_reg_1818 : STD_LOGIC_VECTOR (57 downto 0);
    signal trunc_ln147_13_fu_847_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln147_13_reg_1823 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln147_13_reg_1823_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln147_13_reg_1823_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln147_13_reg_1823_pp0_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln147_13_reg_1823_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_state9_io : BOOLEAN;
    signal ap_block_state81_pp0_stage8_iter4 : BOOLEAN;
    signal ap_block_pp0_stage8_11001 : BOOLEAN;
    signal ap_block_state10_io : BOOLEAN;
    signal ap_block_state82_pp0_stage9_iter4 : BOOLEAN;
    signal ap_block_pp0_stage9_11001 : BOOLEAN;
    signal trunc_ln147_12_reg_1840 : STD_LOGIC_VECTOR (57 downto 0);
    signal trunc_ln147_17_fu_882_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln147_17_reg_1845 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln147_17_reg_1845_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln147_17_reg_1845_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln147_17_reg_1845_pp0_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln147_17_reg_1845_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_state11_io : BOOLEAN;
    signal ap_block_state83_pp0_stage10_iter4 : BOOLEAN;
    signal ap_block_pp0_stage10_11001 : BOOLEAN;
    signal ap_block_state12_io : BOOLEAN;
    signal ap_block_state84_pp0_stage11_iter4 : BOOLEAN;
    signal ap_block_pp0_stage11_11001 : BOOLEAN;
    signal trunc_ln147_15_reg_1862 : STD_LOGIC_VECTOR (57 downto 0);
    signal trunc_ln147_22_fu_917_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln147_22_reg_1867 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln147_22_reg_1867_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln147_22_reg_1867_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln147_22_reg_1867_pp0_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln147_22_reg_1867_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_state13_io : BOOLEAN;
    signal ap_block_state85_pp0_stage12_iter4 : BOOLEAN;
    signal ap_block_pp0_stage12_11001 : BOOLEAN;
    signal ap_block_state14_io : BOOLEAN;
    signal ap_block_state86_pp0_stage13_iter4 : BOOLEAN;
    signal ap_block_pp0_stage13_11001 : BOOLEAN;
    signal empty_45_fu_946_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_45_reg_1884 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln147_18_reg_1890 : STD_LOGIC_VECTOR (57 downto 0);
    signal trunc_ln147_26_fu_961_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln147_26_reg_1895 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln147_26_reg_1895_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln147_26_reg_1895_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln147_26_reg_1895_pp0_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln147_26_reg_1895_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_state15_io : BOOLEAN;
    signal ap_block_state87_pp0_stage14_iter4 : BOOLEAN;
    signal ap_block_pp0_stage14_11001 : BOOLEAN;
    signal ap_block_state16_io : BOOLEAN;
    signal ap_block_state88_pp0_stage15_iter4 : BOOLEAN;
    signal ap_block_pp0_stage15_11001 : BOOLEAN;
    signal trunc_ln147_21_reg_1912 : STD_LOGIC_VECTOR (57 downto 0);
    signal trunc_ln147_29_fu_996_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln147_29_reg_1917 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln147_29_reg_1917_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln147_29_reg_1917_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln147_29_reg_1917_pp0_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln147_29_reg_1917_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_state17_io : BOOLEAN;
    signal ap_block_state89_pp0_stage16_iter4 : BOOLEAN;
    signal ap_block_pp0_stage16_11001 : BOOLEAN;
    signal ap_block_pp0_stage17_11001 : BOOLEAN;
    signal trunc_ln147_24_reg_1934 : STD_LOGIC_VECTOR (57 downto 0);
    signal trunc_ln147_32_fu_1031_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln147_32_reg_1939 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln147_32_reg_1939_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln147_32_reg_1939_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln147_32_reg_1939_pp0_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln147_32_reg_1939_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal gmem_addr_37_read_reg_1956 : STD_LOGIC_VECTOR (511 downto 0);
    signal trunc_ln147_1_fu_1067_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln147_1_reg_1961 : STD_LOGIC_VECTOR (7 downto 0);
    signal gmem_addr_read_reg_1966 : STD_LOGIC_VECTOR (511 downto 0);
    signal gmem_addr_38_read_reg_1981 : STD_LOGIC_VECTOR (511 downto 0);
    signal trunc_ln147_5_fu_1102_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln147_5_reg_1986 : STD_LOGIC_VECTOR (7 downto 0);
    signal gmem_addr_34_read_reg_1991 : STD_LOGIC_VECTOR (511 downto 0);
    signal gmem_addr_39_read_reg_1996 : STD_LOGIC_VECTOR (511 downto 0);
    signal trunc_ln147_10_fu_1147_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln147_10_reg_2006 : STD_LOGIC_VECTOR (7 downto 0);
    signal gmem_addr_35_read_reg_2011 : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_fu_1544_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln147_6_reg_2016 : STD_LOGIC_VECTOR (16 downto 0);
    signal gmem_addr_40_read_reg_2021 : STD_LOGIC_VECTOR (511 downto 0);
    signal mul_ln147_2_fu_1166_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln147_2_reg_2026 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln147_14_fu_1188_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln147_14_reg_2031 : STD_LOGIC_VECTOR (7 downto 0);
    signal gmem_addr_36_read_reg_2036 : STD_LOGIC_VECTOR (511 downto 0);
    signal gmem_addr_41_read_reg_2051 : STD_LOGIC_VECTOR (511 downto 0);
    signal trunc_ln147_19_fu_1223_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln147_19_reg_2056 : STD_LOGIC_VECTOR (7 downto 0);
    signal gmem_addr_47_read_reg_2061 : STD_LOGIC_VECTOR (511 downto 0);
    signal gmem_addr_42_read_reg_2066 : STD_LOGIC_VECTOR (511 downto 0);
    signal mul_ln147_6_fu_1245_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln147_6_reg_2076 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln147_23_fu_1267_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln147_23_reg_2081 : STD_LOGIC_VECTOR (7 downto 0);
    signal gmem_addr_48_read_reg_2086 : STD_LOGIC_VECTOR (511 downto 0);
    signal add_ln147_8_fu_1277_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln147_8_reg_2091 : STD_LOGIC_VECTOR (17 downto 0);
    signal gmem_addr_43_read_reg_2106 : STD_LOGIC_VECTOR (511 downto 0);
    signal trunc_ln147_27_fu_1314_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln147_27_reg_2111 : STD_LOGIC_VECTOR (7 downto 0);
    signal gmem_addr_49_read_reg_2116 : STD_LOGIC_VECTOR (511 downto 0);
    signal trunc_ln147_28_fu_1322_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln147_28_reg_2121 : STD_LOGIC_VECTOR (7 downto 0);
    signal gmem_addr_44_read_reg_2126 : STD_LOGIC_VECTOR (511 downto 0);
    signal trunc_ln147_30_fu_1345_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln147_30_reg_2136 : STD_LOGIC_VECTOR (7 downto 0);
    signal gmem_addr_50_read_reg_2141 : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_fu_1561_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln147_9_reg_2146 : STD_LOGIC_VECTOR (16 downto 0);
    signal gmem_addr_45_read_reg_2151 : STD_LOGIC_VECTOR (511 downto 0);
    signal mul_ln147_fu_1364_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln147_reg_2156 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln147_33_fu_1386_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln147_33_reg_2161 : STD_LOGIC_VECTOR (7 downto 0);
    signal gmem_addr_51_read_reg_2166 : STD_LOGIC_VECTOR (511 downto 0);
    signal trunc_ln150_1_fu_1485_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln150_1_reg_2211 : STD_LOGIC_VECTOR (5 downto 0);
    signal shl_ln150_fu_1493_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln150_reg_2216 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln150_2_reg_2221 : STD_LOGIC_VECTOR (57 downto 0);
    signal shl_ln150_2_fu_1528_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal shl_ln150_2_reg_2226 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal sext_ln147_fu_737_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln147_1_fu_772_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln147_2_fu_807_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln147_3_fu_851_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln147_4_fu_886_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln147_5_fu_921_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln147_6_fu_965_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln147_7_fu_1000_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln147_8_fu_1035_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln150_fu_1534_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage11_01001 : BOOLEAN;
    signal c_fu_142 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal add_ln150_fu_716_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal r_fu_146 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    signal select_ln138_fu_645_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal indvar_flatten425_fu_150 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    signal add_ln138_fu_613_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal icmp_ln140_fu_625_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvars_iv_next25_i85_dup455_fu_639_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_fu_653_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_5_fu_665_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_shl_fu_661_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_shl83_fu_673_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln140_2_fu_683_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln143_cast_fu_693_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln147_fu_753_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln147_1_fu_788_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp33_fu_823_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp33_cast_fu_828_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln147_2_fu_867_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln147_3_fu_902_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp34_fu_937_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp34_cast_fu_942_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln147_4_fu_981_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln147_5_fu_1016_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln6_fu_1051_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln147_fu_1058_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal lshr_ln147_fu_1062_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal lshr_ln147_1_fu_1074_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal trunc_ln147_2_fu_1078_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln147_1_fu_1086_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln147_3_fu_1093_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal lshr_ln147_2_fu_1097_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal lshr_ln147_3_fu_1109_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal trunc_ln147_7_fu_1113_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln147_3_fu_1121_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln147_3_fu_1121_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln147_3_fu_1121_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln147_2_fu_1131_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln147_6_fu_1138_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal lshr_ln147_4_fu_1142_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal lshr_ln147_5_fu_1154_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal trunc_ln147_11_fu_1158_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln147_2_fu_1166_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln147_2_fu_1166_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln147_3_fu_1172_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln147_8_fu_1179_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal lshr_ln147_6_fu_1183_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal lshr_ln147_7_fu_1195_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal trunc_ln147_16_fu_1199_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln147_4_fu_1207_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln147_11_fu_1214_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal lshr_ln147_8_fu_1218_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal lshr_ln147_9_fu_1230_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal trunc_ln147_20_fu_1234_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln147_6_fu_1245_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln147_6_fu_1245_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln147_5_fu_1251_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln147_14_fu_1258_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal lshr_ln147_10_fu_1262_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_fu_1552_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln147_35_fu_1274_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln147_34_fu_1271_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal lshr_ln147_11_fu_1286_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal trunc_ln147_25_fu_1290_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln147_6_fu_1298_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln147_16_fu_1305_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal lshr_ln147_12_fu_1309_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal lshr_ln147_13_fu_1318_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal shl_ln147_7_fu_1329_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln147_19_fu_1336_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal lshr_ln147_14_fu_1340_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal lshr_ln147_15_fu_1352_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal trunc_ln147_31_fu_1356_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln147_fu_1364_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln147_fu_1364_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln147_8_fu_1370_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln147_22_fu_1377_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal lshr_ln147_16_fu_1381_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal lshr_ln147_17_fu_1393_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal trunc_ln147_34_fu_1397_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1569_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_1578_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln147_39_fu_1423_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln147_37_fu_1420_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln147_12_fu_1426_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln147_40_fu_1432_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal zext_ln147_36_fu_1417_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln150_fu_1442_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1452_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1452_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln140_fu_1458_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln140_1_fu_1461_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln150_3_fu_1469_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln150_2_fu_1475_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln150_2_fu_1464_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln150_1_fu_1479_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln150_1_fu_1489_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1452_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln150_fu_1509_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln150_1_fu_1517_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln150_fu_1513_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal zext_ln150_4_fu_1524_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_fu_1544_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1544_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1544_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1552_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1552_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1552_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1561_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1561_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1561_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1569_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1569_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1569_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1578_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1578_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1578_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_1452_ce : STD_LOGIC;
    signal grp_fu_1544_ce : STD_LOGIC;
    signal grp_fu_1552_ce : STD_LOGIC;
    signal grp_fu_1561_ce : STD_LOGIC;
    signal grp_fu_1569_ce : STD_LOGIC;
    signal grp_fu_1578_ce : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_condition_exit_pp0_iter9_stage7 : STD_LOGIC;
    signal ap_idle_pp0_0to8 : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to10 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal ap_block_pp0_stage9_subdone : BOOLEAN;
    signal ap_block_pp0_stage10_subdone : BOOLEAN;
    signal ap_block_pp0_stage11_subdone : BOOLEAN;
    signal ap_block_pp0_stage12_subdone : BOOLEAN;
    signal ap_block_pp0_stage13_subdone : BOOLEAN;
    signal ap_block_pp0_stage14_subdone : BOOLEAN;
    signal ap_block_pp0_stage15_subdone : BOOLEAN;
    signal ap_block_pp0_stage16_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ready_sig : STD_LOGIC;
    signal ap_done_sig : STD_LOGIC;
    signal grp_fu_1452_p10 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1544_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1544_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1544_p20 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_1552_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1552_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1552_p20 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_1561_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1561_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1561_p20 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_1569_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1569_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1569_p20 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_1578_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1578_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1578_p20 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln147_2_fu_1166_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln147_2_fu_1166_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln147_3_fu_1121_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln147_3_fu_1121_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln147_6_fu_1245_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln147_6_fu_1245_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln147_fu_1364_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln147_fu_1364_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component edgedetect_mul_8ns_8ns_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component edgedetect_udiv_20ns_12ns_8_24_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (19 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component edgedetect_mac_muladd_8ns_8ns_16ns_17_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component edgedetect_mac_muladd_8ns_8ns_17ns_18_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (16 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component edgedetect_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mul_8ns_8ns_16_1_1_U96 : component edgedetect_mul_8ns_8ns_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        din0 => mul_ln147_3_fu_1121_p0,
        din1 => mul_ln147_3_fu_1121_p1,
        dout => mul_ln147_3_fu_1121_p2);

    mul_8ns_8ns_16_1_1_U97 : component edgedetect_mul_8ns_8ns_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        din0 => mul_ln147_2_fu_1166_p0,
        din1 => mul_ln147_2_fu_1166_p1,
        dout => mul_ln147_2_fu_1166_p2);

    mul_8ns_8ns_16_1_1_U98 : component edgedetect_mul_8ns_8ns_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        din0 => mul_ln147_6_fu_1245_p0,
        din1 => mul_ln147_6_fu_1245_p1,
        dout => mul_ln147_6_fu_1245_p2);

    mul_8ns_8ns_16_1_1_U99 : component edgedetect_mul_8ns_8ns_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        din0 => mul_ln147_fu_1364_p0,
        din1 => mul_ln147_fu_1364_p1,
        dout => mul_ln147_fu_1364_p2);

    udiv_20ns_12ns_8_24_1_U100 : component edgedetect_udiv_20ns_12ns_8_24_1
    generic map (
        ID => 1,
        NUM_STAGE => 24,
        din0_WIDTH => 20,
        din1_WIDTH => 12,
        dout_WIDTH => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1452_p0,
        din1 => grp_fu_1452_p1,
        ce => grp_fu_1452_ce,
        dout => grp_fu_1452_p2);

    mac_muladd_8ns_8ns_16ns_17_4_1_U101 : component edgedetect_mac_muladd_8ns_8ns_16ns_17_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 17)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1544_p0,
        din1 => grp_fu_1544_p1,
        din2 => grp_fu_1544_p2,
        ce => grp_fu_1544_ce,
        dout => grp_fu_1544_p3);

    mac_muladd_8ns_8ns_16ns_17_4_1_U102 : component edgedetect_mac_muladd_8ns_8ns_16ns_17_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 17)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1552_p0,
        din1 => grp_fu_1552_p1,
        din2 => grp_fu_1552_p2,
        ce => grp_fu_1552_ce,
        dout => grp_fu_1552_p3);

    mac_muladd_8ns_8ns_16ns_17_4_1_U103 : component edgedetect_mac_muladd_8ns_8ns_16ns_17_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 17)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1561_p0,
        din1 => grp_fu_1561_p1,
        din2 => grp_fu_1561_p2,
        ce => grp_fu_1561_ce,
        dout => grp_fu_1561_p3);

    mac_muladd_8ns_8ns_16ns_17_4_1_U104 : component edgedetect_mac_muladd_8ns_8ns_16ns_17_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 17)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1569_p0,
        din1 => grp_fu_1569_p1,
        din2 => grp_fu_1569_p2,
        ce => grp_fu_1569_ce,
        dout => grp_fu_1569_p3);

    mac_muladd_8ns_8ns_17ns_18_4_1_U105 : component edgedetect_mac_muladd_8ns_8ns_17ns_18_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 17,
        dout_WIDTH => 18)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1578_p0,
        din1 => grp_fu_1578_p1,
        din2 => grp_fu_1578_p2,
        ce => grp_fu_1578_ce,
        dout => grp_fu_1578_p3);

    flow_control_loop_pipe_sequential_init_U : component edgedetect_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready_sig,
        ap_done => ap_done_sig,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage17,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_loop_exit_ready_pp0_iter9_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage17)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_subdone))) then 
                    ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_subdone))) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_subdone))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_subdone))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_subdone))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_subdone))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_subdone))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_subdone))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_subdone))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_subdone))) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter9_stage7) and (ap_idle_pp0_0to8 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter2_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter9_stage7) and (ap_idle_pp0_0to8 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter3_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter9_stage7) and (ap_idle_pp0_0to8 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter4_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter9_stage7) and (ap_idle_pp0_0to8 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter5_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter9_stage7) and (ap_idle_pp0_0to8 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter6_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter9_stage7) and (ap_idle_pp0_0to8 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter7_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter9_stage7) and (ap_idle_pp0_0to8 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter8_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter9_stage7) and (ap_idle_pp0_0to8 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter8_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001))) then 
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter9_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter9_stage7) and (ap_idle_pp0_0to8 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter9_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001))) then 
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
            end if; 
        end if;
    end process;

    c_fu_142_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1))) then 
                c_fu_142 <= ap_const_lv10_0;
            elsif (((icmp_ln138_fu_607_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                c_fu_142 <= add_ln150_fu_716_p2;
            end if; 
        end if;
    end process;

    indvar_flatten425_fu_150_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1))) then 
                indvar_flatten425_fu_150 <= ap_const_lv19_0;
            elsif (((icmp_ln138_fu_607_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                indvar_flatten425_fu_150 <= add_ln138_fu_613_p2;
            end if; 
        end if;
    end process;

    r_fu_146_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1))) then 
                r_fu_146 <= ap_const_lv9_0;
            elsif (((icmp_ln138_fu_607_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                r_fu_146 <= select_ln138_fu_645_p3;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                add_ln143_reg_1734 <= add_ln143_fu_687_p2;
                empty_43_reg_1740 <= empty_43_fu_697_p2;
                    empty_reg_1729(18 downto 7) <= empty_fu_677_p2(18 downto 7);
                    empty_reg_1729_pp0_iter1_reg(18 downto 7) <= empty_reg_1729(18 downto 7);
                    empty_reg_1729_pp0_iter2_reg(18 downto 7) <= empty_reg_1729_pp0_iter1_reg(18 downto 7);
                    empty_reg_1729_pp0_iter3_reg(18 downto 7) <= empty_reg_1729_pp0_iter2_reg(18 downto 7);
                    empty_reg_1729_pp0_iter4_reg(18 downto 7) <= empty_reg_1729_pp0_iter3_reg(18 downto 7);
                    empty_reg_1729_pp0_iter5_reg(18 downto 7) <= empty_reg_1729_pp0_iter4_reg(18 downto 7);
                gmem_addr_37_read_reg_1956 <= m_axi_gmem_RDATA;
                icmp_ln138_reg_1720 <= icmp_ln138_fu_607_p2;
                icmp_ln138_reg_1720_pp0_iter1_reg <= icmp_ln138_reg_1720;
                icmp_ln138_reg_1720_pp0_iter2_reg <= icmp_ln138_reg_1720_pp0_iter1_reg;
                icmp_ln138_reg_1720_pp0_iter3_reg <= icmp_ln138_reg_1720_pp0_iter2_reg;
                icmp_ln138_reg_1720_pp0_iter4_reg <= icmp_ln138_reg_1720_pp0_iter3_reg;
                icmp_ln138_reg_1720_pp0_iter5_reg <= icmp_ln138_reg_1720_pp0_iter4_reg;
                icmp_ln138_reg_1720_pp0_iter6_reg <= icmp_ln138_reg_1720_pp0_iter5_reg;
                icmp_ln138_reg_1720_pp0_iter7_reg <= icmp_ln138_reg_1720_pp0_iter6_reg;
                icmp_ln138_reg_1720_pp0_iter8_reg <= icmp_ln138_reg_1720_pp0_iter7_reg;
                icmp_ln138_reg_1720_pp0_iter9_reg <= icmp_ln138_reg_1720_pp0_iter8_reg;
                select_ln117_reg_1724 <= select_ln117_fu_631_p3;
                select_ln117_reg_1724_pp0_iter1_reg <= select_ln117_reg_1724;
                select_ln117_reg_1724_pp0_iter2_reg <= select_ln117_reg_1724_pp0_iter1_reg;
                select_ln117_reg_1724_pp0_iter3_reg <= select_ln117_reg_1724_pp0_iter2_reg;
                select_ln117_reg_1724_pp0_iter4_reg <= select_ln117_reg_1724_pp0_iter3_reg;
                select_ln117_reg_1724_pp0_iter5_reg <= select_ln117_reg_1724_pp0_iter4_reg;
                shl_ln150_reg_2216 <= shl_ln150_fu_1493_p2;
                trunc_ln147_reg_1751 <= trunc_ln147_fu_712_p1;
                trunc_ln147_reg_1751_pp0_iter1_reg <= trunc_ln147_reg_1751;
                trunc_ln147_reg_1751_pp0_iter2_reg <= trunc_ln147_reg_1751_pp0_iter1_reg;
                trunc_ln147_reg_1751_pp0_iter3_reg <= trunc_ln147_reg_1751_pp0_iter2_reg;
                trunc_ln147_reg_1751_pp0_iter4_reg <= trunc_ln147_reg_1751_pp0_iter3_reg;
                trunc_ln147_s_reg_1746 <= empty_43_fu_697_p2(63 downto 6);
                trunc_ln150_1_reg_2211 <= trunc_ln150_1_fu_1485_p1;
                trunc_ln150_2_reg_2221 <= add_ln150_1_fu_1479_p2(63 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001))) then
                add_ln147_6_reg_2016 <= grp_fu_1544_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001))) then
                add_ln147_8_reg_2091 <= add_ln147_8_fu_1277_p2;
                gmem_addr_48_read_reg_2086 <= m_axi_gmem_RDATA;
                trunc_ln147_23_reg_2081 <= trunc_ln147_23_fu_1267_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001))) then
                add_ln147_9_reg_2146 <= grp_fu_1561_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001))) then
                empty_44_reg_1812 <= empty_44_fu_832_p2;
                gmem_addr_40_read_reg_2021 <= m_axi_gmem_RDATA;
                mul_ln147_2_reg_2026 <= mul_ln147_2_fu_1166_p2;
                trunc_ln147_13_reg_1823 <= trunc_ln147_13_fu_847_p1;
                trunc_ln147_13_reg_1823_pp0_iter1_reg <= trunc_ln147_13_reg_1823;
                trunc_ln147_13_reg_1823_pp0_iter2_reg <= trunc_ln147_13_reg_1823_pp0_iter1_reg;
                trunc_ln147_13_reg_1823_pp0_iter3_reg <= trunc_ln147_13_reg_1823_pp0_iter2_reg;
                trunc_ln147_13_reg_1823_pp0_iter4_reg <= trunc_ln147_13_reg_1823_pp0_iter3_reg;
                trunc_ln147_9_reg_1818 <= empty_44_fu_832_p2(63 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001))) then
                empty_45_reg_1884 <= empty_45_fu_946_p2;
                gmem_addr_43_read_reg_2106 <= m_axi_gmem_RDATA;
                trunc_ln147_18_reg_1890 <= empty_45_fu_946_p2(63 downto 6);
                trunc_ln147_26_reg_1895 <= trunc_ln147_26_fu_961_p1;
                trunc_ln147_26_reg_1895_pp0_iter1_reg <= trunc_ln147_26_reg_1895;
                trunc_ln147_26_reg_1895_pp0_iter2_reg <= trunc_ln147_26_reg_1895_pp0_iter1_reg;
                trunc_ln147_26_reg_1895_pp0_iter3_reg <= trunc_ln147_26_reg_1895_pp0_iter2_reg;
                trunc_ln147_26_reg_1895_pp0_iter4_reg <= trunc_ln147_26_reg_1895_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                gmem_addr_34_read_reg_1991 <= m_axi_gmem_RDATA;
                trunc_ln147_5_reg_1986 <= trunc_ln147_5_fu_1102_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001))) then
                gmem_addr_35_read_reg_2011 <= m_axi_gmem_RDATA;
                trunc_ln147_10_reg_2006 <= trunc_ln147_10_fu_1147_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001))) then
                gmem_addr_36_read_reg_2036 <= m_axi_gmem_RDATA;
                trunc_ln147_14_reg_2031 <= trunc_ln147_14_fu_1188_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                gmem_addr_38_read_reg_1981 <= m_axi_gmem_RDATA;
                trunc_ln147_3_reg_1768 <= add_ln147_fu_753_p2(63 downto 6);
                trunc_ln147_4_reg_1773 <= trunc_ln147_4_fu_768_p1;
                trunc_ln147_4_reg_1773_pp0_iter1_reg <= trunc_ln147_4_reg_1773;
                trunc_ln147_4_reg_1773_pp0_iter2_reg <= trunc_ln147_4_reg_1773_pp0_iter1_reg;
                trunc_ln147_4_reg_1773_pp0_iter3_reg <= trunc_ln147_4_reg_1773_pp0_iter2_reg;
                trunc_ln147_4_reg_1773_pp0_iter4_reg <= trunc_ln147_4_reg_1773_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001))) then
                gmem_addr_39_read_reg_1996 <= m_axi_gmem_RDATA;
                trunc_ln147_6_reg_1790 <= add_ln147_1_fu_788_p2(63 downto 6);
                trunc_ln147_8_reg_1795 <= trunc_ln147_8_fu_803_p1;
                trunc_ln147_8_reg_1795_pp0_iter1_reg <= trunc_ln147_8_reg_1795;
                trunc_ln147_8_reg_1795_pp0_iter2_reg <= trunc_ln147_8_reg_1795_pp0_iter1_reg;
                trunc_ln147_8_reg_1795_pp0_iter3_reg <= trunc_ln147_8_reg_1795_pp0_iter2_reg;
                trunc_ln147_8_reg_1795_pp0_iter4_reg <= trunc_ln147_8_reg_1795_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001))) then
                gmem_addr_41_read_reg_2051 <= m_axi_gmem_RDATA;
                trunc_ln147_12_reg_1840 <= add_ln147_2_fu_867_p2(63 downto 6);
                trunc_ln147_17_reg_1845 <= trunc_ln147_17_fu_882_p1;
                trunc_ln147_17_reg_1845_pp0_iter1_reg <= trunc_ln147_17_reg_1845;
                trunc_ln147_17_reg_1845_pp0_iter2_reg <= trunc_ln147_17_reg_1845_pp0_iter1_reg;
                trunc_ln147_17_reg_1845_pp0_iter3_reg <= trunc_ln147_17_reg_1845_pp0_iter2_reg;
                trunc_ln147_17_reg_1845_pp0_iter4_reg <= trunc_ln147_17_reg_1845_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001))) then
                gmem_addr_42_read_reg_2066 <= m_axi_gmem_RDATA;
                mul_ln147_6_reg_2076 <= mul_ln147_6_fu_1245_p2;
                trunc_ln147_15_reg_1862 <= add_ln147_3_fu_902_p2(63 downto 6);
                trunc_ln147_22_reg_1867 <= trunc_ln147_22_fu_917_p1;
                trunc_ln147_22_reg_1867_pp0_iter1_reg <= trunc_ln147_22_reg_1867;
                trunc_ln147_22_reg_1867_pp0_iter2_reg <= trunc_ln147_22_reg_1867_pp0_iter1_reg;
                trunc_ln147_22_reg_1867_pp0_iter3_reg <= trunc_ln147_22_reg_1867_pp0_iter2_reg;
                trunc_ln147_22_reg_1867_pp0_iter4_reg <= trunc_ln147_22_reg_1867_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001))) then
                gmem_addr_44_read_reg_2126 <= m_axi_gmem_RDATA;
                trunc_ln147_21_reg_1912 <= add_ln147_4_fu_981_p2(63 downto 6);
                trunc_ln147_28_reg_2121 <= trunc_ln147_28_fu_1322_p1;
                trunc_ln147_29_reg_1917 <= trunc_ln147_29_fu_996_p1;
                trunc_ln147_29_reg_1917_pp0_iter1_reg <= trunc_ln147_29_reg_1917;
                trunc_ln147_29_reg_1917_pp0_iter2_reg <= trunc_ln147_29_reg_1917_pp0_iter1_reg;
                trunc_ln147_29_reg_1917_pp0_iter3_reg <= trunc_ln147_29_reg_1917_pp0_iter2_reg;
                trunc_ln147_29_reg_1917_pp0_iter4_reg <= trunc_ln147_29_reg_1917_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001))) then
                gmem_addr_45_read_reg_2151 <= m_axi_gmem_RDATA;
                mul_ln147_reg_2156 <= mul_ln147_fu_1364_p2;
                trunc_ln147_24_reg_1934 <= add_ln147_5_fu_1016_p2(63 downto 6);
                trunc_ln147_32_reg_1939 <= trunc_ln147_32_fu_1031_p1;
                trunc_ln147_32_reg_1939_pp0_iter1_reg <= trunc_ln147_32_reg_1939;
                trunc_ln147_32_reg_1939_pp0_iter2_reg <= trunc_ln147_32_reg_1939_pp0_iter1_reg;
                trunc_ln147_32_reg_1939_pp0_iter3_reg <= trunc_ln147_32_reg_1939_pp0_iter2_reg;
                trunc_ln147_32_reg_1939_pp0_iter4_reg <= trunc_ln147_32_reg_1939_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001))) then
                gmem_addr_47_read_reg_2061 <= m_axi_gmem_RDATA;
                shl_ln150_2_reg_2226 <= shl_ln150_2_fu_1528_p2;
                trunc_ln147_19_reg_2056 <= trunc_ln147_19_fu_1223_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001))) then
                gmem_addr_49_read_reg_2116 <= m_axi_gmem_RDATA;
                trunc_ln147_27_reg_2111 <= trunc_ln147_27_fu_1314_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001))) then
                gmem_addr_50_read_reg_2141 <= m_axi_gmem_RDATA;
                trunc_ln147_30_reg_2136 <= trunc_ln147_30_fu_1345_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                gmem_addr_51_read_reg_2166 <= m_axi_gmem_RDATA;
                p_cast45_cast_cast_reg_1705 <= p_cast45_cast_cast_fu_577_p1;
                p_cast47_cast_cast_reg_1700 <= p_cast47_cast_cast_fu_573_p1;
                p_cast49_cast_cast_reg_1695 <= p_cast49_cast_cast_fu_569_p1;
                p_cast51_cast_cast_reg_1690 <= p_cast51_cast_cast_fu_565_p1;
                p_cast53_cast_cast_reg_1685 <= p_cast53_cast_cast_fu_561_p1;
                p_cast55_cast_cast_reg_1680 <= p_cast55_cast_cast_fu_557_p1;
                p_cast57_cast_cast_reg_1675 <= p_cast57_cast_cast_fu_553_p1;
                    p_cast77_cast_reg_1670(8 downto 0) <= p_cast77_cast_fu_549_p1(8 downto 0);
                    p_cast78_cast_reg_1665(8 downto 0) <= p_cast78_cast_fu_545_p1(8 downto 0);
                    p_cast79_cast_reg_1660(8 downto 0) <= p_cast79_cast_fu_541_p1(8 downto 0);
                    p_cast80_cast_reg_1655(8 downto 0) <= p_cast80_cast_fu_537_p1(8 downto 0);
                    p_cast81_cast_reg_1650(8 downto 0) <= p_cast81_cast_fu_533_p1(8 downto 0);
                    p_cast82_cast_reg_1645(8 downto 0) <= p_cast82_cast_fu_529_p1(8 downto 0);
                    p_cast83_cast_reg_1640(8 downto 0) <= p_cast83_cast_fu_525_p1(8 downto 0);
                    p_cast84_cast_reg_1635(8 downto 0) <= p_cast84_cast_fu_521_p1(8 downto 0);
                p_cast_cast_cast_reg_1710 <= p_cast_cast_cast_fu_581_p1;
                sext_ln26_cast_reg_1715 <= sext_ln26_cast_fu_585_p1;
                trunc_ln147_33_reg_2161 <= trunc_ln147_33_fu_1386_p1;
                    zext_ln52_cast_reg_1630(8 downto 0) <= zext_ln52_cast_fu_517_p1(8 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                gmem_addr_read_reg_1966 <= m_axi_gmem_RDATA;
                trunc_ln147_1_reg_1961 <= trunc_ln147_1_fu_1067_p1;
            end if;
        end if;
    end process;
    zext_ln52_cast_reg_1630(511 downto
    p_cast84_cast_reg_1635(511 downto
    p_cast83_cast_reg_1640(511 downto
    p_cast82_cast_reg_1645(511 downto
    p_cast81_cast_reg_1650(511 downto
    p_cast80_cast_reg_1655(511 downto 9) <= "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    p_cast79_cast_reg_1660(511 downto
    p_cast78_cast_reg_1665(511 downto 9) <= "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    p_cast77_cast_reg_1670(511 downto 9) <= "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    empty_reg_1729(6 downto 0) <= "0000000";
    empty_reg_1729_pp0_iter1_reg(6 downto 0) <= "0000000";
    empty_reg_1729_pp0_iter2_reg(6 downto 0) <= "0000000";
    empty_reg_1729_pp0_iter3_reg(6 downto 0) <= "0000000";
    empty_reg_1729_pp0_iter4_reg(6 downto 0) <= "0000000";
    empty_reg_1729_pp0_iter5_reg(6 downto 0) <= "0000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage17_subdone, ap_block_pp0_stage7_subdone, ap_condition_exit_pp0_iter9_stage7, ap_idle_pp0_0to8, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to10, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_block_pp0_stage8_subdone, ap_block_pp0_stage9_subdone, ap_block_pp0_stage10_subdone, ap_block_pp0_stage11_subdone, ap_block_pp0_stage12_subdone, ap_block_pp0_stage13_subdone, ap_block_pp0_stage14_subdone, ap_block_pp0_stage15_subdone, ap_block_pp0_stage16_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to10 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if (((ap_const_logic_1 = ap_condition_exit_pp0_iter9_stage7) and (ap_idle_pp0_0to8 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when ap_ST_fsm_pp0_stage9 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage9_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                end if;
            when ap_ST_fsm_pp0_stage10 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage10_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                end if;
            when ap_ST_fsm_pp0_stage11 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage11_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                end if;
            when ap_ST_fsm_pp0_stage12 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage12_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                end if;
            when ap_ST_fsm_pp0_stage13 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage13_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                end if;
            when ap_ST_fsm_pp0_stage14 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage14_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                end if;
            when ap_ST_fsm_pp0_stage15 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage15_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                end if;
            when ap_ST_fsm_pp0_stage16 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage16_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage17;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                end if;
            when ap_ST_fsm_pp0_stage17 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage17_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage17;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln138_fu_613_p2 <= std_logic_vector(unsigned(indvar_flatten425_fu_150) + unsigned(ap_const_lv19_1));
    add_ln143_cast_fu_693_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln143_fu_687_p2),64));
    add_ln143_fu_687_p2 <= std_logic_vector(unsigned(zext_ln140_2_fu_683_p1) + unsigned(empty_fu_677_p2));
    add_ln147_12_fu_1426_p2 <= std_logic_vector(unsigned(zext_ln147_39_fu_1423_p1) + unsigned(zext_ln147_37_fu_1420_p1));
    add_ln147_1_fu_788_p2 <= std_logic_vector(unsigned(empty_43_reg_1740) + unsigned(ap_const_lv64_2));
    add_ln147_2_fu_867_p2 <= std_logic_vector(unsigned(empty_44_reg_1812) + unsigned(ap_const_lv64_1));
    add_ln147_3_fu_902_p2 <= std_logic_vector(unsigned(empty_44_reg_1812) + unsigned(ap_const_lv64_2));
    add_ln147_4_fu_981_p2 <= std_logic_vector(unsigned(empty_45_reg_1884) + unsigned(ap_const_lv64_1));
    add_ln147_5_fu_1016_p2 <= std_logic_vector(unsigned(empty_45_reg_1884) + unsigned(ap_const_lv64_2));
    add_ln147_8_fu_1277_p2 <= std_logic_vector(unsigned(zext_ln147_35_fu_1274_p1) + unsigned(zext_ln147_34_fu_1271_p1));
    add_ln147_fu_753_p2 <= std_logic_vector(unsigned(empty_43_reg_1740) + unsigned(ap_const_lv64_1));
    add_ln150_1_fu_1479_p2 <= std_logic_vector(unsigned(zext_ln150_2_fu_1475_p1) + unsigned(add_ln150_2_fu_1464_p2));
    add_ln150_2_fu_1464_p2 <= std_logic_vector(unsigned(zext_ln140_fu_1458_p1) + unsigned(temp_buf));
    add_ln150_3_fu_1469_p2 <= std_logic_vector(unsigned(zext_ln140_1_fu_1461_p1) + unsigned(ap_const_lv11_281));
    add_ln150_fu_716_p2 <= std_logic_vector(unsigned(select_ln117_fu_631_p3) + unsigned(ap_const_lv10_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage10 <= ap_CS_fsm(10);
    ap_CS_fsm_pp0_stage11 <= ap_CS_fsm(11);
    ap_CS_fsm_pp0_stage12 <= ap_CS_fsm(12);
    ap_CS_fsm_pp0_stage13 <= ap_CS_fsm(13);
    ap_CS_fsm_pp0_stage14 <= ap_CS_fsm(14);
    ap_CS_fsm_pp0_stage15 <= ap_CS_fsm(15);
    ap_CS_fsm_pp0_stage16 <= ap_CS_fsm(16);
    ap_CS_fsm_pp0_stage17 <= ap_CS_fsm(17);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(9);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, ap_block_state19_io, ap_block_state91_pp0_stage0_iter5)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state91_pp0_stage0_iter5)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state19_io)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, ap_block_state19_io, ap_block_state91_pp0_stage0_iter5)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state91_pp0_stage0_iter5)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state19_io)));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage10_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter6, m_axi_gmem_AWREADY, ap_block_state11_io, ap_block_state83_pp0_stage10_iter4)
    begin
                ap_block_pp0_stage10_11001 <= (((m_axi_gmem_AWREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state83_pp0_stage10_iter4)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state11_io)));
    end process;


    ap_block_pp0_stage10_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter6, m_axi_gmem_AWREADY, ap_block_state11_io, ap_block_state83_pp0_stage10_iter4)
    begin
                ap_block_pp0_stage10_subdone <= (((m_axi_gmem_AWREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state83_pp0_stage10_iter4)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state11_io)));
    end process;

        ap_block_pp0_stage11 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage11_01001_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_state84_pp0_stage11_iter4)
    begin
                ap_block_pp0_stage11_01001 <= ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state84_pp0_stage11_iter4));
    end process;


    ap_block_pp0_stage11_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter6, m_axi_gmem_WREADY, ap_block_state12_io, ap_block_state84_pp0_stage11_iter4)
    begin
                ap_block_pp0_stage11_11001 <= (((m_axi_gmem_WREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state84_pp0_stage11_iter4)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state12_io)));
    end process;


    ap_block_pp0_stage11_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter6, m_axi_gmem_WREADY, ap_block_state12_io, ap_block_state84_pp0_stage11_iter4)
    begin
                ap_block_pp0_stage11_subdone <= (((m_axi_gmem_WREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state84_pp0_stage11_iter4)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state12_io)));
    end process;

        ap_block_pp0_stage12 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage12_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, ap_block_state13_io, ap_block_state85_pp0_stage12_iter4)
    begin
                ap_block_pp0_stage12_11001 <= (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state85_pp0_stage12_iter4)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state13_io)));
    end process;


    ap_block_pp0_stage12_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, ap_block_state13_io, ap_block_state85_pp0_stage12_iter4)
    begin
                ap_block_pp0_stage12_subdone <= (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state85_pp0_stage12_iter4)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state13_io)));
    end process;

        ap_block_pp0_stage13 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage13_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, ap_block_state14_io, ap_block_state86_pp0_stage13_iter4)
    begin
                ap_block_pp0_stage13_11001 <= (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state86_pp0_stage13_iter4)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state14_io)));
    end process;


    ap_block_pp0_stage13_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, ap_block_state14_io, ap_block_state86_pp0_stage13_iter4)
    begin
                ap_block_pp0_stage13_subdone <= (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state86_pp0_stage13_iter4)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state14_io)));
    end process;

        ap_block_pp0_stage14 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage14_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, ap_block_state15_io, ap_block_state87_pp0_stage14_iter4)
    begin
                ap_block_pp0_stage14_11001 <= (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state87_pp0_stage14_iter4)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state15_io)));
    end process;


    ap_block_pp0_stage14_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, ap_block_state15_io, ap_block_state87_pp0_stage14_iter4)
    begin
                ap_block_pp0_stage14_subdone <= (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state87_pp0_stage14_iter4)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state15_io)));
    end process;

        ap_block_pp0_stage15 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage15_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, ap_block_state16_io, ap_block_state88_pp0_stage15_iter4)
    begin
                ap_block_pp0_stage15_11001 <= (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state88_pp0_stage15_iter4)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state16_io)));
    end process;


    ap_block_pp0_stage15_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, ap_block_state16_io, ap_block_state88_pp0_stage15_iter4)
    begin
                ap_block_pp0_stage15_subdone <= (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state88_pp0_stage15_iter4)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state16_io)));
    end process;

        ap_block_pp0_stage16 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage16_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, ap_block_state17_io, ap_block_state89_pp0_stage16_iter4)
    begin
                ap_block_pp0_stage16_11001 <= (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state89_pp0_stage16_iter4)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state17_io)));
    end process;


    ap_block_pp0_stage16_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, ap_block_state17_io, ap_block_state89_pp0_stage16_iter4)
    begin
                ap_block_pp0_stage16_subdone <= (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state89_pp0_stage16_iter4)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state17_io)));
    end process;

        ap_block_pp0_stage17 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage17_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, ap_block_state18_io, ap_block_state90_pp0_stage17_iter4)
    begin
                ap_block_pp0_stage17_11001 <= (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state90_pp0_stage17_iter4)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state18_io)));
    end process;


    ap_block_pp0_stage17_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, ap_block_state18_io, ap_block_state90_pp0_stage17_iter4)
    begin
                ap_block_pp0_stage17_subdone <= (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state90_pp0_stage17_iter4)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state18_io)));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, m_axi_gmem_ARREADY, ap_block_state74_pp0_stage1_iter4)
    begin
                ap_block_pp0_stage1_11001 <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (m_axi_gmem_ARREADY = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state74_pp0_stage1_iter4)));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, m_axi_gmem_ARREADY, ap_block_state74_pp0_stage1_iter4)
    begin
                ap_block_pp0_stage1_subdone <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (m_axi_gmem_ARREADY = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state74_pp0_stage1_iter4)));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, ap_block_state3_io, ap_block_state75_pp0_stage2_iter4)
    begin
                ap_block_pp0_stage2_11001 <= (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state75_pp0_stage2_iter4)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_io)));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, ap_block_state3_io, ap_block_state75_pp0_stage2_iter4)
    begin
                ap_block_pp0_stage2_subdone <= (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state75_pp0_stage2_iter4)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_io)));
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, ap_block_state4_io, ap_block_state76_pp0_stage3_iter4)
    begin
                ap_block_pp0_stage3_11001 <= (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state76_pp0_stage3_iter4)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state4_io)));
    end process;


    ap_block_pp0_stage3_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, ap_block_state4_io, ap_block_state76_pp0_stage3_iter4)
    begin
                ap_block_pp0_stage3_subdone <= (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state76_pp0_stage3_iter4)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state4_io)));
    end process;

        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage4_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, ap_block_state5_io, ap_block_state77_pp0_stage4_iter4)
    begin
                ap_block_pp0_stage4_11001 <= (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state77_pp0_stage4_iter4)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state5_io)));
    end process;


    ap_block_pp0_stage4_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, ap_block_state5_io, ap_block_state77_pp0_stage4_iter4)
    begin
                ap_block_pp0_stage4_subdone <= (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state77_pp0_stage4_iter4)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state5_io)));
    end process;

        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage5_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, ap_block_state6_io, ap_block_state78_pp0_stage5_iter4)
    begin
                ap_block_pp0_stage5_11001 <= (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state78_pp0_stage5_iter4)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state6_io)));
    end process;


    ap_block_pp0_stage5_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, ap_block_state6_io, ap_block_state78_pp0_stage5_iter4)
    begin
                ap_block_pp0_stage5_subdone <= (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state78_pp0_stage5_iter4)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state6_io)));
    end process;

        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage6_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, ap_block_state7_io, ap_block_state79_pp0_stage6_iter4)
    begin
                ap_block_pp0_stage6_11001 <= (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state79_pp0_stage6_iter4)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state7_io)));
    end process;


    ap_block_pp0_stage6_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, ap_block_state7_io, ap_block_state79_pp0_stage6_iter4)
    begin
                ap_block_pp0_stage6_subdone <= (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state79_pp0_stage6_iter4)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state7_io)));
    end process;

        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage7_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter10, ap_block_state8_io, ap_block_state80_pp0_stage7_iter4, ap_block_state188_pp0_stage7_iter10)
    begin
                ap_block_pp0_stage7_11001 <= (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state188_pp0_stage7_iter10)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state80_pp0_stage7_iter4)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state8_io)));
    end process;


    ap_block_pp0_stage7_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter10, ap_block_state8_io, ap_block_state80_pp0_stage7_iter4, ap_block_state188_pp0_stage7_iter10)
    begin
                ap_block_pp0_stage7_subdone <= (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state188_pp0_stage7_iter10)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state80_pp0_stage7_iter4)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state8_io)));
    end process;

        ap_block_pp0_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage8_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, ap_block_state9_io, ap_block_state81_pp0_stage8_iter4)
    begin
                ap_block_pp0_stage8_11001 <= (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state81_pp0_stage8_iter4)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state9_io)));
    end process;


    ap_block_pp0_stage8_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, ap_block_state9_io, ap_block_state81_pp0_stage8_iter4)
    begin
                ap_block_pp0_stage8_subdone <= (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state81_pp0_stage8_iter4)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state9_io)));
    end process;

        ap_block_pp0_stage9 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage9_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, ap_block_state10_io, ap_block_state82_pp0_stage9_iter4)
    begin
                ap_block_pp0_stage9_11001 <= (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state82_pp0_stage9_iter4)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state10_io)));
    end process;


    ap_block_pp0_stage9_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, ap_block_state10_io, ap_block_state82_pp0_stage9_iter4)
    begin
                ap_block_pp0_stage9_subdone <= (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state82_pp0_stage9_iter4)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state10_io)));
    end process;


    ap_block_state10_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln138_reg_1720)
    begin
                ap_block_state10_io <= ((icmp_ln138_reg_1720 = ap_const_lv1_0) and (m_axi_gmem_ARREADY = ap_const_logic_0));
    end process;


    ap_block_state11_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln138_reg_1720)
    begin
                ap_block_state11_io <= ((icmp_ln138_reg_1720 = ap_const_lv1_0) and (m_axi_gmem_ARREADY = ap_const_logic_0));
    end process;


    ap_block_state12_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln138_reg_1720)
    begin
                ap_block_state12_io <= ((icmp_ln138_reg_1720 = ap_const_lv1_0) and (m_axi_gmem_ARREADY = ap_const_logic_0));
    end process;


    ap_block_state13_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln138_reg_1720)
    begin
                ap_block_state13_io <= ((icmp_ln138_reg_1720 = ap_const_lv1_0) and (m_axi_gmem_ARREADY = ap_const_logic_0));
    end process;


    ap_block_state14_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln138_reg_1720)
    begin
                ap_block_state14_io <= ((icmp_ln138_reg_1720 = ap_const_lv1_0) and (m_axi_gmem_ARREADY = ap_const_logic_0));
    end process;


    ap_block_state15_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln138_reg_1720)
    begin
                ap_block_state15_io <= ((icmp_ln138_reg_1720 = ap_const_lv1_0) and (m_axi_gmem_ARREADY = ap_const_logic_0));
    end process;


    ap_block_state16_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln138_reg_1720)
    begin
                ap_block_state16_io <= ((icmp_ln138_reg_1720 = ap_const_lv1_0) and (m_axi_gmem_ARREADY = ap_const_logic_0));
    end process;


    ap_block_state17_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln138_reg_1720)
    begin
                ap_block_state17_io <= ((icmp_ln138_reg_1720 = ap_const_lv1_0) and (m_axi_gmem_ARREADY = ap_const_logic_0));
    end process;


    ap_block_state188_pp0_stage7_iter10_assign_proc : process(m_axi_gmem_BVALID)
    begin
                ap_block_state188_pp0_stage7_iter10 <= (m_axi_gmem_BVALID = ap_const_logic_0);
    end process;


    ap_block_state18_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln138_reg_1720)
    begin
                ap_block_state18_io <= ((icmp_ln138_reg_1720 = ap_const_lv1_0) and (m_axi_gmem_ARREADY = ap_const_logic_0));
    end process;


    ap_block_state19_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln138_reg_1720)
    begin
                ap_block_state19_io <= ((icmp_ln138_reg_1720 = ap_const_lv1_0) and (m_axi_gmem_ARREADY = ap_const_logic_0));
    end process;


    ap_block_state3_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln138_reg_1720)
    begin
                ap_block_state3_io <= ((icmp_ln138_reg_1720 = ap_const_lv1_0) and (m_axi_gmem_ARREADY = ap_const_logic_0));
    end process;


    ap_block_state4_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln138_reg_1720)
    begin
                ap_block_state4_io <= ((icmp_ln138_reg_1720 = ap_const_lv1_0) and (m_axi_gmem_ARREADY = ap_const_logic_0));
    end process;


    ap_block_state5_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln138_reg_1720)
    begin
                ap_block_state5_io <= ((icmp_ln138_reg_1720 = ap_const_lv1_0) and (m_axi_gmem_ARREADY = ap_const_logic_0));
    end process;


    ap_block_state6_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln138_reg_1720)
    begin
                ap_block_state6_io <= ((icmp_ln138_reg_1720 = ap_const_lv1_0) and (m_axi_gmem_ARREADY = ap_const_logic_0));
    end process;


    ap_block_state74_pp0_stage1_iter4_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state74_pp0_stage1_iter4 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state75_pp0_stage2_iter4_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state75_pp0_stage2_iter4 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state76_pp0_stage3_iter4_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state76_pp0_stage3_iter4 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state77_pp0_stage4_iter4_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state77_pp0_stage4_iter4 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state78_pp0_stage5_iter4_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state78_pp0_stage5_iter4 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state79_pp0_stage6_iter4_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state79_pp0_stage6_iter4 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state7_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln138_reg_1720)
    begin
                ap_block_state7_io <= ((icmp_ln138_reg_1720 = ap_const_lv1_0) and (m_axi_gmem_ARREADY = ap_const_logic_0));
    end process;


    ap_block_state80_pp0_stage7_iter4_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state80_pp0_stage7_iter4 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state81_pp0_stage8_iter4_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state81_pp0_stage8_iter4 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state82_pp0_stage9_iter4_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state82_pp0_stage9_iter4 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state83_pp0_stage10_iter4_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state83_pp0_stage10_iter4 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state84_pp0_stage11_iter4_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state84_pp0_stage11_iter4 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state85_pp0_stage12_iter4_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state85_pp0_stage12_iter4 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state86_pp0_stage13_iter4_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state86_pp0_stage13_iter4 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state87_pp0_stage14_iter4_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state87_pp0_stage14_iter4 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state88_pp0_stage15_iter4_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state88_pp0_stage15_iter4 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state89_pp0_stage16_iter4_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state89_pp0_stage16_iter4 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state8_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln138_reg_1720)
    begin
                ap_block_state8_io <= ((icmp_ln138_reg_1720 = ap_const_lv1_0) and (m_axi_gmem_ARREADY = ap_const_logic_0));
    end process;


    ap_block_state90_pp0_stage17_iter4_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state90_pp0_stage17_iter4 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state91_pp0_stage0_iter5_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state91_pp0_stage0_iter5 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state9_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln138_reg_1720)
    begin
                ap_block_state9_io <= ((icmp_ln138_reg_1720 = ap_const_lv1_0) and (m_axi_gmem_ARREADY = ap_const_logic_0));
    end process;


    ap_condition_exit_pp0_iter0_stage17_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage17, icmp_ln138_reg_1720, ap_block_pp0_stage17_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_subdone) and (icmp_ln138_reg_1720 = ap_const_lv1_1))) then 
            ap_condition_exit_pp0_iter0_stage17 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage17 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter9_stage7_assign_proc : process(ap_enable_reg_pp0_iter9, ap_CS_fsm_pp0_stage7, icmp_ln138_reg_1720_pp0_iter9_reg, ap_block_pp0_stage7_subdone)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (icmp_ln138_reg_1720_pp0_iter9_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_subdone))) then 
            ap_condition_exit_pp0_iter9_stage7 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter9_stage7 <= ap_const_logic_0;
        end if; 
    end process;

    ap_done <= ap_done_sig;

    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter9_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_loop_exit_ready_pp0_iter9_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_start_int = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to8_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to8 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to10_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to10 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to10 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage17;
    ap_ready <= ap_ready_sig;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_subdone))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;

    empty_43_fu_697_p2 <= std_logic_vector(unsigned(add_ln143_cast_fu_693_p1) + unsigned(output_r));
    empty_44_fu_832_p2 <= std_logic_vector(unsigned(tmp33_cast_fu_828_p1) + unsigned(output_r));
    empty_45_fu_946_p2 <= std_logic_vector(unsigned(tmp34_cast_fu_942_p1) + unsigned(output_r));
    empty_fu_677_p2 <= std_logic_vector(unsigned(p_shl_fu_661_p1) + unsigned(p_shl83_fu_673_p1));

    gmem_blk_n_AR_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage17, m_axi_gmem_ARREADY, icmp_ln138_reg_1720, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14, ap_block_pp0_stage17, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln138_reg_1720 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17) and (icmp_ln138_reg_1720 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16) and (icmp_ln138_reg_1720 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14) and (icmp_ln138_reg_1720 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15) 
    and (icmp_ln138_reg_1720 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12) and (icmp_ln138_reg_1720 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13) and (icmp_ln138_reg_1720 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10) and (icmp_ln138_reg_1720 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11) and (icmp_ln138_reg_1720 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8) and (icmp_ln138_reg_1720 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) 
    and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9) and (icmp_ln138_reg_1720 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6) and (icmp_ln138_reg_1720 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (icmp_ln138_reg_1720 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4) and (icmp_ln138_reg_1720 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5) and (icmp_ln138_reg_1720 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2) and 
    (icmp_ln138_reg_1720 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (icmp_ln138_reg_1720 = ap_const_lv1_0)))) then 
            gmem_blk_n_AR <= m_axi_gmem_ARREADY;
        else 
            gmem_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_AW_assign_proc : process(ap_enable_reg_pp0_iter6, m_axi_gmem_AWREADY, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10))) then 
            gmem_blk_n_AW <= m_axi_gmem_AWREADY;
        else 
            gmem_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_B_assign_proc : process(ap_enable_reg_pp0_iter10, m_axi_gmem_BVALID, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7)
    begin
        if (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7))) then 
            gmem_blk_n_B <= m_axi_gmem_BVALID;
        else 
            gmem_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_R_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage17, m_axi_gmem_RVALID, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14, ap_block_pp0_stage17, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if ((((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12)) or ((ap_enable_reg_pp0_iter4 
    = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) 
    and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)))) then 
            gmem_blk_n_R <= m_axi_gmem_RVALID;
        else 
            gmem_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_W_assign_proc : process(ap_enable_reg_pp0_iter6, m_axi_gmem_WREADY, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11))) then 
            gmem_blk_n_W <= m_axi_gmem_WREADY;
        else 
            gmem_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_1452_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001, ap_block_pp0_stage12_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage14_11001, ap_block_pp0_stage15_11001, ap_block_pp0_stage16_11001, ap_block_pp0_stage17_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001)) or ((ap_const_logic_1 
    = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)))) then 
            grp_fu_1452_ce <= ap_const_logic_1;
        else 
            grp_fu_1452_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1452_p0 <= std_logic_vector(unsigned(zext_ln147_40_fu_1432_p1) + unsigned(zext_ln147_36_fu_1417_p1));
    grp_fu_1452_p1 <= grp_fu_1452_p10(12 - 1 downto 0);
    grp_fu_1452_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln150_fu_1442_p3),20));

    grp_fu_1544_ce_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)))) then 
            grp_fu_1544_ce <= ap_const_logic_1;
        else 
            grp_fu_1544_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1544_p0 <= grp_fu_1544_p00(8 - 1 downto 0);
    grp_fu_1544_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln147_2_fu_1078_p1),16));
    grp_fu_1544_p1 <= grp_fu_1544_p10(8 - 1 downto 0);
    grp_fu_1544_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln147_1_reg_1961),16));
    grp_fu_1544_p2 <= grp_fu_1544_p20(16 - 1 downto 0);
    grp_fu_1544_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln147_3_fu_1121_p2),17));

    grp_fu_1552_ce_assign_proc : process(ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage9_11001, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001, ap_block_pp0_stage12_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)))) then 
            grp_fu_1552_ce <= ap_const_logic_1;
        else 
            grp_fu_1552_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1552_p0 <= grp_fu_1552_p00(8 - 1 downto 0);
    grp_fu_1552_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln147_16_fu_1199_p1),16));
    grp_fu_1552_p1 <= grp_fu_1552_p10(8 - 1 downto 0);
    grp_fu_1552_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln147_14_reg_2031),16));
    grp_fu_1552_p2 <= grp_fu_1552_p20(16 - 1 downto 0);
    grp_fu_1552_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln147_2_reg_2026),17));

    grp_fu_1561_ce_assign_proc : process(ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage13_11001, ap_block_pp0_stage14_11001, ap_block_pp0_stage15_11001, ap_block_pp0_stage16_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001)))) then 
            grp_fu_1561_ce <= ap_const_logic_1;
        else 
            grp_fu_1561_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1561_p0 <= grp_fu_1561_p00(8 - 1 downto 0);
    grp_fu_1561_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln147_25_fu_1290_p1),16));
    grp_fu_1561_p1 <= grp_fu_1561_p10(8 - 1 downto 0);
    grp_fu_1561_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln147_23_reg_2081),16));
    grp_fu_1561_p2 <= grp_fu_1561_p20(16 - 1 downto 0);
    grp_fu_1561_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln147_6_reg_2076),17));

    grp_fu_1569_ce_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)))) then 
            grp_fu_1569_ce <= ap_const_logic_1;
        else 
            grp_fu_1569_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1569_p0 <= grp_fu_1569_p00(8 - 1 downto 0);
    grp_fu_1569_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln147_34_fu_1397_p1),16));
    grp_fu_1569_p1 <= grp_fu_1569_p10(8 - 1 downto 0);
    grp_fu_1569_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln147_33_reg_2161),16));
    grp_fu_1569_p2 <= grp_fu_1569_p20(16 - 1 downto 0);
    grp_fu_1569_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln147_reg_2156),17));

    grp_fu_1578_ce_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)))) then 
            grp_fu_1578_ce <= ap_const_logic_1;
        else 
            grp_fu_1578_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1578_p0 <= grp_fu_1578_p00(8 - 1 downto 0);
    grp_fu_1578_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln147_28_reg_2121),16));
    grp_fu_1578_p1 <= grp_fu_1578_p10(8 - 1 downto 0);
    grp_fu_1578_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln147_27_reg_2111),16));
    grp_fu_1578_p2 <= grp_fu_1578_p20(17 - 1 downto 0);
    grp_fu_1578_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1569_p3),18));
    icmp_ln138_fu_607_p2 <= "1" when (indvar_flatten425_fu_150 = ap_const_lv19_4A744) else "0";
    icmp_ln140_fu_625_p2 <= "1" when (c_fu_142 = ap_const_lv10_27E) else "0";
    indvars_iv_next25_i85_dup455_fu_639_p2 <= std_logic_vector(unsigned(r_fu_146) + unsigned(ap_const_lv9_1));
    lshr_ln147_10_fu_1262_p2 <= std_logic_vector(shift_right(unsigned(gmem_addr_42_read_reg_2066),to_integer(unsigned('0' & zext_ln147_14_fu_1258_p1(31-1 downto 0)))));
    lshr_ln147_11_fu_1286_p2 <= std_logic_vector(shift_right(unsigned(gmem_addr_48_read_reg_2086),to_integer(unsigned('0' & p_cast82_cast_reg_1645(31-1 downto 0)))));
    lshr_ln147_12_fu_1309_p2 <= std_logic_vector(shift_right(unsigned(gmem_addr_43_read_reg_2106),to_integer(unsigned('0' & zext_ln147_16_fu_1305_p1(31-1 downto 0)))));
    lshr_ln147_13_fu_1318_p2 <= std_logic_vector(shift_right(unsigned(gmem_addr_49_read_reg_2116),to_integer(unsigned('0' & p_cast83_cast_reg_1640(31-1 downto 0)))));
    lshr_ln147_14_fu_1340_p2 <= std_logic_vector(shift_right(unsigned(gmem_addr_44_read_reg_2126),to_integer(unsigned('0' & zext_ln147_19_fu_1336_p1(31-1 downto 0)))));
    lshr_ln147_15_fu_1352_p2 <= std_logic_vector(shift_right(unsigned(gmem_addr_50_read_reg_2141),to_integer(unsigned('0' & p_cast84_cast_reg_1635(31-1 downto 0)))));
    lshr_ln147_16_fu_1381_p2 <= std_logic_vector(shift_right(unsigned(gmem_addr_45_read_reg_2151),to_integer(unsigned('0' & zext_ln147_22_fu_1377_p1(31-1 downto 0)))));
    lshr_ln147_17_fu_1393_p2 <= std_logic_vector(shift_right(unsigned(gmem_addr_51_read_reg_2166),to_integer(unsigned('0' & zext_ln52_cast_reg_1630(31-1 downto 0)))));
    lshr_ln147_1_fu_1074_p2 <= std_logic_vector(shift_right(unsigned(gmem_addr_read_reg_1966),to_integer(unsigned('0' & p_cast77_cast_reg_1670(31-1 downto 0)))));
    lshr_ln147_2_fu_1097_p2 <= std_logic_vector(shift_right(unsigned(gmem_addr_38_read_reg_1981),to_integer(unsigned('0' & zext_ln147_3_fu_1093_p1(31-1 downto 0)))));
    lshr_ln147_3_fu_1109_p2 <= std_logic_vector(shift_right(unsigned(gmem_addr_34_read_reg_1991),to_integer(unsigned('0' & p_cast78_cast_reg_1665(31-1 downto 0)))));
    lshr_ln147_4_fu_1142_p2 <= std_logic_vector(shift_right(unsigned(gmem_addr_39_read_reg_1996),to_integer(unsigned('0' & zext_ln147_6_fu_1138_p1(31-1 downto 0)))));
    lshr_ln147_5_fu_1154_p2 <= std_logic_vector(shift_right(unsigned(gmem_addr_35_read_reg_2011),to_integer(unsigned('0' & p_cast79_cast_reg_1660(31-1 downto 0)))));
    lshr_ln147_6_fu_1183_p2 <= std_logic_vector(shift_right(unsigned(gmem_addr_40_read_reg_2021),to_integer(unsigned('0' & zext_ln147_8_fu_1179_p1(31-1 downto 0)))));
    lshr_ln147_7_fu_1195_p2 <= std_logic_vector(shift_right(unsigned(gmem_addr_36_read_reg_2036),to_integer(unsigned('0' & p_cast80_cast_reg_1655(31-1 downto 0)))));
    lshr_ln147_8_fu_1218_p2 <= std_logic_vector(shift_right(unsigned(gmem_addr_41_read_reg_2051),to_integer(unsigned('0' & zext_ln147_11_fu_1214_p1(31-1 downto 0)))));
    lshr_ln147_9_fu_1230_p2 <= std_logic_vector(shift_right(unsigned(gmem_addr_47_read_reg_2061),to_integer(unsigned('0' & p_cast81_cast_reg_1650(31-1 downto 0)))));
    lshr_ln147_fu_1062_p2 <= std_logic_vector(shift_right(unsigned(gmem_addr_37_read_reg_1956),to_integer(unsigned('0' & zext_ln147_fu_1058_p1(31-1 downto 0)))));

    m_axi_gmem_ARADDR_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage17, icmp_ln138_reg_1720, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, p_cast57_cast_cast_reg_1675, p_cast55_cast_cast_reg_1680, p_cast53_cast_cast_reg_1685, p_cast51_cast_cast_reg_1690, p_cast49_cast_cast_reg_1695, p_cast47_cast_cast_reg_1700, p_cast45_cast_cast_reg_1705, p_cast_cast_cast_reg_1710, sext_ln26_cast_reg_1715, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001, ap_block_pp0_stage12_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage14_11001, ap_block_pp0_stage15_11001, ap_block_pp0_stage16_11001, ap_block_pp0_stage17_11001, sext_ln147_fu_737_p1, sext_ln147_1_fu_772_p1, sext_ln147_2_fu_807_p1, sext_ln147_3_fu_851_p1, sext_ln147_4_fu_886_p1, sext_ln147_5_fu_921_p1, sext_ln147_6_fu_965_p1, sext_ln147_7_fu_1000_p1, sext_ln147_8_fu_1035_p1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            m_axi_gmem_ARADDR <= p_cast57_cast_cast_reg_1675;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln138_reg_1720 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= sext_ln147_8_fu_1035_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (icmp_ln138_reg_1720 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= p_cast55_cast_cast_reg_1680;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (icmp_ln138_reg_1720 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= sext_ln147_7_fu_1000_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (icmp_ln138_reg_1720 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= p_cast53_cast_cast_reg_1685;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (icmp_ln138_reg_1720 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= sext_ln147_6_fu_965_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (icmp_ln138_reg_1720 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= p_cast51_cast_cast_reg_1690;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (icmp_ln138_reg_1720 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= sext_ln147_5_fu_921_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (icmp_ln138_reg_1720 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= p_cast49_cast_cast_reg_1695;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (icmp_ln138_reg_1720 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= sext_ln147_4_fu_886_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (icmp_ln138_reg_1720 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= p_cast47_cast_cast_reg_1700;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (icmp_ln138_reg_1720 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= sext_ln147_3_fu_851_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln138_reg_1720 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= p_cast45_cast_cast_reg_1705;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln138_reg_1720 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= sext_ln147_2_fu_807_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln138_reg_1720 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= p_cast_cast_cast_reg_1710;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln138_reg_1720 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= sext_ln147_1_fu_772_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln138_reg_1720 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= sext_ln26_cast_reg_1715;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln138_reg_1720 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= sext_ln147_fu_737_p1;
        else 
            m_axi_gmem_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_gmem_ARBURST <= ap_const_lv2_0;
    m_axi_gmem_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem_ARID <= ap_const_lv1_0;
    m_axi_gmem_ARLEN <= ap_const_lv64_1(32 - 1 downto 0);
    m_axi_gmem_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem_ARPROT <= ap_const_lv3_0;
    m_axi_gmem_ARQOS <= ap_const_lv4_0;
    m_axi_gmem_ARREGION <= ap_const_lv4_0;
    m_axi_gmem_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem_ARUSER <= ap_const_lv1_0;

    m_axi_gmem_ARVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage17, icmp_ln138_reg_1720, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001, ap_block_pp0_stage12_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage14_11001, ap_block_pp0_stage15_11001, ap_block_pp0_stage16_11001, ap_block_pp0_stage17_11001)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln138_reg_1720 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (icmp_ln138_reg_1720 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (icmp_ln138_reg_1720 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (icmp_ln138_reg_1720 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 
    = ap_block_pp0_stage15_11001) and (icmp_ln138_reg_1720 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (icmp_ln138_reg_1720 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (icmp_ln138_reg_1720 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (icmp_ln138_reg_1720 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (icmp_ln138_reg_1720 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (icmp_ln138_reg_1720 = 
    ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (icmp_ln138_reg_1720 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln138_reg_1720 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln138_reg_1720 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln138_reg_1720 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln138_reg_1720 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) 
    and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln138_reg_1720 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln138_reg_1720 = ap_const_lv1_0)))) then 
            m_axi_gmem_ARVALID <= ap_const_logic_1;
        else 
            m_axi_gmem_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_AWADDR <= sext_ln150_fu_1534_p1;
    m_axi_gmem_AWBURST <= ap_const_lv2_0;
    m_axi_gmem_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem_AWID <= ap_const_lv1_0;
    m_axi_gmem_AWLEN <= ap_const_lv64_1(32 - 1 downto 0);
    m_axi_gmem_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem_AWPROT <= ap_const_lv3_0;
    m_axi_gmem_AWQOS <= ap_const_lv4_0;
    m_axi_gmem_AWREGION <= ap_const_lv4_0;
    m_axi_gmem_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem_AWUSER <= ap_const_lv1_0;

    m_axi_gmem_AWVALID_assign_proc : process(ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001))) then 
            m_axi_gmem_AWVALID <= ap_const_logic_1;
        else 
            m_axi_gmem_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem_BREADY_assign_proc : process(ap_enable_reg_pp0_iter10, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001)
    begin
        if (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001))) then 
            m_axi_gmem_BREADY <= ap_const_logic_1;
        else 
            m_axi_gmem_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem_RREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001, ap_block_pp0_stage12_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage14_11001, ap_block_pp0_stage15_11001, ap_block_pp0_stage16_11001, ap_block_pp0_stage17_11001)
    begin
        if ((((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001)) 
    or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) 
    or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)))) then 
            m_axi_gmem_RREADY <= ap_const_logic_1;
        else 
            m_axi_gmem_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_WDATA <= shl_ln150_2_reg_2226;
    m_axi_gmem_WID <= ap_const_lv1_0;
    m_axi_gmem_WLAST <= ap_const_logic_0;
    m_axi_gmem_WSTRB <= shl_ln150_reg_2216;
    m_axi_gmem_WUSER <= ap_const_lv1_0;

    m_axi_gmem_WVALID_assign_proc : process(ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_11001)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001))) then 
            m_axi_gmem_WVALID <= ap_const_logic_1;
        else 
            m_axi_gmem_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    mul_ln147_2_fu_1166_p0 <= mul_ln147_2_fu_1166_p00(8 - 1 downto 0);
    mul_ln147_2_fu_1166_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln147_11_fu_1158_p1),16));
    mul_ln147_2_fu_1166_p1 <= mul_ln147_2_fu_1166_p10(8 - 1 downto 0);
    mul_ln147_2_fu_1166_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln147_10_reg_2006),16));
    mul_ln147_3_fu_1121_p0 <= mul_ln147_3_fu_1121_p00(8 - 1 downto 0);
    mul_ln147_3_fu_1121_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln147_7_fu_1113_p1),16));
    mul_ln147_3_fu_1121_p1 <= mul_ln147_3_fu_1121_p10(8 - 1 downto 0);
    mul_ln147_3_fu_1121_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln147_5_reg_1986),16));
    mul_ln147_6_fu_1245_p0 <= mul_ln147_6_fu_1245_p00(8 - 1 downto 0);
    mul_ln147_6_fu_1245_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln147_20_fu_1234_p1),16));
    mul_ln147_6_fu_1245_p1 <= mul_ln147_6_fu_1245_p10(8 - 1 downto 0);
    mul_ln147_6_fu_1245_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln147_19_reg_2056),16));
    mul_ln147_fu_1364_p0 <= mul_ln147_fu_1364_p00(8 - 1 downto 0);
    mul_ln147_fu_1364_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln147_31_fu_1356_p1),16));
    mul_ln147_fu_1364_p1 <= mul_ln147_fu_1364_p10(8 - 1 downto 0);
    mul_ln147_fu_1364_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln147_30_reg_2136),16));
        p_cast45_cast_cast_fu_577_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_cast45_cast),64));

        p_cast47_cast_cast_fu_573_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_cast47_cast),64));

        p_cast49_cast_cast_fu_569_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_cast49_cast),64));

        p_cast51_cast_cast_fu_565_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_cast51_cast),64));

        p_cast53_cast_cast_fu_561_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_cast53_cast),64));

        p_cast55_cast_cast_fu_557_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_cast55_cast),64));

        p_cast57_cast_cast_fu_553_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_cast57_cast),64));

    p_cast77_cast_fu_549_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_cast77),512));
    p_cast78_cast_fu_545_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_cast78),512));
    p_cast79_cast_fu_541_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_cast79),512));
    p_cast80_cast_fu_537_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_cast80),512));
    p_cast81_cast_fu_533_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_cast81),512));
    p_cast82_cast_fu_529_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_cast82),512));
    p_cast83_cast_fu_525_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_cast83),512));
    p_cast84_cast_fu_521_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_cast84),512));
        p_cast_cast_cast_fu_581_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_cast_cast),64));

    p_shl83_fu_673_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_665_p3),19));
    p_shl_fu_661_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_653_p3),19));
    select_ln117_fu_631_p3 <= 
        ap_const_lv10_0 when (icmp_ln140_fu_625_p2(0) = '1') else 
        c_fu_142;
    select_ln138_fu_645_p3 <= 
        indvars_iv_next25_i85_dup455_fu_639_p2 when (icmp_ln140_fu_625_p2(0) = '1') else 
        r_fu_146;
    select_ln150_fu_1442_p3 <= 
        ap_const_lv12_1 when (icmp_ln135(0) = '1') else 
        normal_factor_8_reload;
        sext_ln147_1_fu_772_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln147_3_reg_1768),64));

        sext_ln147_2_fu_807_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln147_6_reg_1790),64));

        sext_ln147_3_fu_851_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln147_9_reg_1818),64));

        sext_ln147_4_fu_886_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln147_12_reg_1840),64));

        sext_ln147_5_fu_921_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln147_15_reg_1862),64));

        sext_ln147_6_fu_965_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln147_18_reg_1890),64));

        sext_ln147_7_fu_1000_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln147_21_reg_1912),64));

        sext_ln147_8_fu_1035_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln147_24_reg_1934),64));

        sext_ln147_fu_737_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln147_s_reg_1746),64));

        sext_ln150_fu_1534_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln150_2_reg_2221),64));

        sext_ln26_cast_fu_585_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln26),64));

    shl_ln147_1_fu_1086_p3 <= (trunc_ln147_4_reg_1773_pp0_iter4_reg & ap_const_lv3_0);
    shl_ln147_2_fu_1131_p3 <= (trunc_ln147_8_reg_1795_pp0_iter4_reg & ap_const_lv3_0);
    shl_ln147_3_fu_1172_p3 <= (trunc_ln147_13_reg_1823_pp0_iter4_reg & ap_const_lv3_0);
    shl_ln147_4_fu_1207_p3 <= (trunc_ln147_17_reg_1845_pp0_iter4_reg & ap_const_lv3_0);
    shl_ln147_5_fu_1251_p3 <= (trunc_ln147_22_reg_1867_pp0_iter4_reg & ap_const_lv3_0);
    shl_ln147_6_fu_1298_p3 <= (trunc_ln147_26_reg_1895_pp0_iter4_reg & ap_const_lv3_0);
    shl_ln147_7_fu_1329_p3 <= (trunc_ln147_29_reg_1917_pp0_iter4_reg & ap_const_lv3_0);
    shl_ln147_8_fu_1370_p3 <= (trunc_ln147_32_reg_1939_pp0_iter4_reg & ap_const_lv3_0);
    shl_ln150_1_fu_1517_p3 <= (trunc_ln150_1_reg_2211 & ap_const_lv3_0);
    shl_ln150_2_fu_1528_p2 <= std_logic_vector(shift_left(unsigned(zext_ln150_fu_1513_p1),to_integer(unsigned('0' & zext_ln150_4_fu_1524_p1(31-1 downto 0)))));
    shl_ln150_fu_1493_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv64_1),to_integer(unsigned('0' & zext_ln150_1_fu_1489_p1(31-1 downto 0)))));
    shl_ln6_fu_1051_p3 <= (trunc_ln147_reg_1751_pp0_iter4_reg & ap_const_lv3_0);
    tmp33_cast_fu_828_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp33_fu_823_p2),64));
    tmp33_fu_823_p2 <= std_logic_vector(unsigned(add_ln143_reg_1734) + unsigned(ap_const_lv19_280));
    tmp34_cast_fu_942_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp34_fu_937_p2),64));
    tmp34_fu_937_p2 <= std_logic_vector(unsigned(add_ln143_reg_1734) + unsigned(ap_const_lv19_500));
    tmp_5_fu_665_p3 <= (select_ln138_fu_645_p3 & ap_const_lv7_0);
    tmp_fu_653_p3 <= (select_ln138_fu_645_p3 & ap_const_lv9_0);
    trunc_ln147_10_fu_1147_p1 <= lshr_ln147_4_fu_1142_p2(8 - 1 downto 0);
    trunc_ln147_11_fu_1158_p1 <= lshr_ln147_5_fu_1154_p2(8 - 1 downto 0);
    trunc_ln147_13_fu_847_p1 <= empty_44_fu_832_p2(6 - 1 downto 0);
    trunc_ln147_14_fu_1188_p1 <= lshr_ln147_6_fu_1183_p2(8 - 1 downto 0);
    trunc_ln147_16_fu_1199_p1 <= lshr_ln147_7_fu_1195_p2(8 - 1 downto 0);
    trunc_ln147_17_fu_882_p1 <= add_ln147_2_fu_867_p2(6 - 1 downto 0);
    trunc_ln147_19_fu_1223_p1 <= lshr_ln147_8_fu_1218_p2(8 - 1 downto 0);
    trunc_ln147_1_fu_1067_p1 <= lshr_ln147_fu_1062_p2(8 - 1 downto 0);
    trunc_ln147_20_fu_1234_p1 <= lshr_ln147_9_fu_1230_p2(8 - 1 downto 0);
    trunc_ln147_22_fu_917_p1 <= add_ln147_3_fu_902_p2(6 - 1 downto 0);
    trunc_ln147_23_fu_1267_p1 <= lshr_ln147_10_fu_1262_p2(8 - 1 downto 0);
    trunc_ln147_25_fu_1290_p1 <= lshr_ln147_11_fu_1286_p2(8 - 1 downto 0);
    trunc_ln147_26_fu_961_p1 <= empty_45_fu_946_p2(6 - 1 downto 0);
    trunc_ln147_27_fu_1314_p1 <= lshr_ln147_12_fu_1309_p2(8 - 1 downto 0);
    trunc_ln147_28_fu_1322_p1 <= lshr_ln147_13_fu_1318_p2(8 - 1 downto 0);
    trunc_ln147_29_fu_996_p1 <= add_ln147_4_fu_981_p2(6 - 1 downto 0);
    trunc_ln147_2_fu_1078_p1 <= lshr_ln147_1_fu_1074_p2(8 - 1 downto 0);
    trunc_ln147_30_fu_1345_p1 <= lshr_ln147_14_fu_1340_p2(8 - 1 downto 0);
    trunc_ln147_31_fu_1356_p1 <= lshr_ln147_15_fu_1352_p2(8 - 1 downto 0);
    trunc_ln147_32_fu_1031_p1 <= add_ln147_5_fu_1016_p2(6 - 1 downto 0);
    trunc_ln147_33_fu_1386_p1 <= lshr_ln147_16_fu_1381_p2(8 - 1 downto 0);
    trunc_ln147_34_fu_1397_p1 <= lshr_ln147_17_fu_1393_p2(8 - 1 downto 0);
    trunc_ln147_4_fu_768_p1 <= add_ln147_fu_753_p2(6 - 1 downto 0);
    trunc_ln147_5_fu_1102_p1 <= lshr_ln147_2_fu_1097_p2(8 - 1 downto 0);
    trunc_ln147_7_fu_1113_p1 <= lshr_ln147_3_fu_1109_p2(8 - 1 downto 0);
    trunc_ln147_8_fu_803_p1 <= add_ln147_1_fu_788_p2(6 - 1 downto 0);
    trunc_ln147_fu_712_p1 <= empty_43_fu_697_p2(6 - 1 downto 0);
    trunc_ln150_1_fu_1485_p1 <= add_ln150_1_fu_1479_p2(6 - 1 downto 0);
    trunc_ln150_fu_1509_p1 <= grp_fu_1452_p2(8 - 1 downto 0);
    zext_ln140_1_fu_1461_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln117_reg_1724_pp0_iter5_reg),11));
    zext_ln140_2_fu_683_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln117_fu_631_p3),19));
    zext_ln140_fu_1458_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_reg_1729_pp0_iter5_reg),64));
    zext_ln147_11_fu_1214_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln147_4_fu_1207_p3),512));
    zext_ln147_14_fu_1258_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln147_5_fu_1251_p3),512));
    zext_ln147_16_fu_1305_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln147_6_fu_1298_p3),512));
    zext_ln147_19_fu_1336_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln147_7_fu_1329_p3),512));
    zext_ln147_22_fu_1377_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln147_8_fu_1370_p3),512));
    zext_ln147_34_fu_1271_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln147_6_reg_2016),18));
    zext_ln147_35_fu_1274_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1552_p3),18));
    zext_ln147_36_fu_1417_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln147_8_reg_2091),20));
    zext_ln147_37_fu_1420_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln147_9_reg_2146),19));
    zext_ln147_39_fu_1423_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1578_p3),19));
    zext_ln147_3_fu_1093_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln147_1_fu_1086_p3),512));
    zext_ln147_40_fu_1432_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln147_12_fu_1426_p2),20));
    zext_ln147_6_fu_1138_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln147_2_fu_1131_p3),512));
    zext_ln147_8_fu_1179_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln147_3_fu_1172_p3),512));
    zext_ln147_fu_1058_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln6_fu_1051_p3),512));
    zext_ln150_1_fu_1489_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln150_1_fu_1485_p1),64));
    zext_ln150_2_fu_1475_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln150_3_fu_1469_p2),64));
    zext_ln150_4_fu_1524_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln150_1_fu_1517_p3),512));
    zext_ln150_fu_1513_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln150_fu_1509_p1),512));
    zext_ln52_cast_fu_517_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln52),512));
end behav;
