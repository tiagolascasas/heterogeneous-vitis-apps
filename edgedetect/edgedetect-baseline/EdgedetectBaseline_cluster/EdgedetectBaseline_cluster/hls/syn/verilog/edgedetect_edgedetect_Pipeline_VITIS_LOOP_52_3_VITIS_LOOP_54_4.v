// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module edgedetect_edgedetect_Pipeline_VITIS_LOOP_52_3_VITIS_LOOP_54_4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        sext_ln26,
        p_cast_cast,
        p_cast45_cast,
        p_cast47_cast,
        p_cast49_cast,
        p_cast51_cast,
        p_cast53_cast,
        p_cast55_cast,
        p_cast57_cast,
        image_gray,
        p_cast80,
        p_cast81,
        p_cast82,
        p_cast83,
        p_cast84,
        p_cast85,
        p_cast86,
        p_cast87,
        zext_ln52,
        normal_factor_2_reload,
        icmp_ln49,
        output_r
);

parameter    ap_ST_fsm_pp0_stage0 = 18'd1;
parameter    ap_ST_fsm_pp0_stage1 = 18'd2;
parameter    ap_ST_fsm_pp0_stage2 = 18'd4;
parameter    ap_ST_fsm_pp0_stage3 = 18'd8;
parameter    ap_ST_fsm_pp0_stage4 = 18'd16;
parameter    ap_ST_fsm_pp0_stage5 = 18'd32;
parameter    ap_ST_fsm_pp0_stage6 = 18'd64;
parameter    ap_ST_fsm_pp0_stage7 = 18'd128;
parameter    ap_ST_fsm_pp0_stage8 = 18'd256;
parameter    ap_ST_fsm_pp0_stage9 = 18'd512;
parameter    ap_ST_fsm_pp0_stage10 = 18'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 18'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 18'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 18'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 18'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 18'd32768;
parameter    ap_ST_fsm_pp0_stage16 = 18'd65536;
parameter    ap_ST_fsm_pp0_stage17 = 18'd131072;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [511:0] m_axi_gmem_WDATA;
output  [63:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [511:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [8:0] m_axi_gmem_RFIFONUM;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
input  [57:0] sext_ln26;
input  [57:0] p_cast_cast;
input  [57:0] p_cast45_cast;
input  [57:0] p_cast47_cast;
input  [57:0] p_cast49_cast;
input  [57:0] p_cast51_cast;
input  [57:0] p_cast53_cast;
input  [57:0] p_cast55_cast;
input  [57:0] p_cast57_cast;
input  [63:0] image_gray;
input  [8:0] p_cast80;
input  [8:0] p_cast81;
input  [8:0] p_cast82;
input  [8:0] p_cast83;
input  [8:0] p_cast84;
input  [8:0] p_cast85;
input  [8:0] p_cast86;
input  [8:0] p_cast87;
input  [8:0] zext_ln52;
input  [11:0] normal_factor_2_reload;
input  [0:0] icmp_ln49;
input  [63:0] output_r;

reg ap_idle;
reg m_axi_gmem_AWVALID;
reg m_axi_gmem_WVALID;
reg m_axi_gmem_ARVALID;
reg[63:0] m_axi_gmem_ARADDR;
reg m_axi_gmem_RREADY;
reg m_axi_gmem_BREADY;

(* fsm_encoding = "none" *) reg   [17:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage17;
reg   [0:0] icmp_ln52_reg_1755;
reg    ap_block_state18_io;
reg    ap_block_state90_pp0_stage17_iter4;
reg    ap_block_pp0_stage17_subdone;
reg    ap_condition_exit_pp0_iter0_stage17;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem_blk_n_AR;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
reg    gmem_blk_n_R;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_pp0_stage15;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14;
wire    ap_block_pp0_stage17;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_pp0_stage16;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage0;
reg    gmem_blk_n_AW;
reg    gmem_blk_n_W;
reg    gmem_blk_n_B;
reg    ap_block_state19_io;
reg    ap_block_state91_pp0_stage0_iter5;
reg    ap_block_pp0_stage0_11001;
wire   [511:0] zext_ln52_cast_fu_525_p1;
reg   [511:0] zext_ln52_cast_reg_1665;
wire   [511:0] p_cast87_cast_fu_529_p1;
reg   [511:0] p_cast87_cast_reg_1670;
wire   [511:0] p_cast86_cast_fu_533_p1;
reg   [511:0] p_cast86_cast_reg_1675;
wire   [511:0] p_cast85_cast_fu_537_p1;
reg   [511:0] p_cast85_cast_reg_1680;
wire   [511:0] p_cast84_cast_fu_541_p1;
reg   [511:0] p_cast84_cast_reg_1685;
wire   [511:0] p_cast83_cast_fu_545_p1;
reg   [511:0] p_cast83_cast_reg_1690;
wire   [511:0] p_cast82_cast_fu_549_p1;
reg   [511:0] p_cast82_cast_reg_1695;
wire   [511:0] p_cast81_cast_fu_553_p1;
reg   [511:0] p_cast81_cast_reg_1700;
wire   [511:0] p_cast80_cast_fu_557_p1;
reg   [511:0] p_cast80_cast_reg_1705;
wire  signed [63:0] p_cast57_cast_cast_fu_561_p1;
reg  signed [63:0] p_cast57_cast_cast_reg_1710;
wire  signed [63:0] p_cast55_cast_cast_fu_565_p1;
reg  signed [63:0] p_cast55_cast_cast_reg_1715;
wire  signed [63:0] p_cast53_cast_cast_fu_569_p1;
reg  signed [63:0] p_cast53_cast_cast_reg_1720;
wire  signed [63:0] p_cast51_cast_cast_fu_573_p1;
reg  signed [63:0] p_cast51_cast_cast_reg_1725;
wire  signed [63:0] p_cast49_cast_cast_fu_577_p1;
reg  signed [63:0] p_cast49_cast_cast_reg_1730;
wire  signed [63:0] p_cast47_cast_cast_fu_581_p1;
reg  signed [63:0] p_cast47_cast_cast_reg_1735;
wire  signed [63:0] p_cast45_cast_cast_fu_585_p1;
reg  signed [63:0] p_cast45_cast_cast_reg_1740;
wire  signed [63:0] p_cast_cast_cast_fu_589_p1;
reg  signed [63:0] p_cast_cast_cast_reg_1745;
wire  signed [63:0] sext_ln26_cast_fu_593_p1;
reg  signed [63:0] sext_ln26_cast_reg_1750;
wire   [0:0] icmp_ln52_fu_615_p2;
reg    ap_block_state74_pp0_stage1_iter4;
reg    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln52_reg_1755_pp0_iter1_reg;
reg   [0:0] icmp_ln52_reg_1755_pp0_iter2_reg;
reg   [0:0] icmp_ln52_reg_1755_pp0_iter3_reg;
reg   [0:0] icmp_ln52_reg_1755_pp0_iter4_reg;
reg   [0:0] icmp_ln52_reg_1755_pp0_iter5_reg;
reg   [0:0] icmp_ln52_reg_1755_pp0_iter6_reg;
reg   [0:0] icmp_ln52_reg_1755_pp0_iter7_reg;
reg   [0:0] icmp_ln52_reg_1755_pp0_iter8_reg;
reg   [0:0] icmp_ln52_reg_1755_pp0_iter9_reg;
wire   [9:0] select_ln31_fu_639_p3;
reg   [9:0] select_ln31_reg_1759;
reg   [9:0] select_ln31_reg_1759_pp0_iter1_reg;
reg   [9:0] select_ln31_reg_1759_pp0_iter2_reg;
reg   [9:0] select_ln31_reg_1759_pp0_iter3_reg;
reg   [9:0] select_ln31_reg_1759_pp0_iter4_reg;
reg   [9:0] select_ln31_reg_1759_pp0_iter5_reg;
wire   [18:0] empty_fu_685_p2;
reg   [18:0] empty_reg_1764;
reg   [18:0] empty_reg_1764_pp0_iter1_reg;
reg   [18:0] empty_reg_1764_pp0_iter2_reg;
reg   [18:0] empty_reg_1764_pp0_iter3_reg;
reg   [18:0] empty_reg_1764_pp0_iter4_reg;
reg   [18:0] empty_reg_1764_pp0_iter5_reg;
wire   [18:0] add_ln57_fu_695_p2;
reg   [18:0] add_ln57_reg_1769;
wire   [63:0] empty_36_fu_705_p2;
reg   [63:0] empty_36_reg_1775;
reg   [57:0] trunc_ln61_s_reg_1781;
wire   [5:0] trunc_ln61_fu_720_p1;
reg   [5:0] trunc_ln61_reg_1786;
reg   [5:0] trunc_ln61_reg_1786_pp0_iter1_reg;
reg   [5:0] trunc_ln61_reg_1786_pp0_iter2_reg;
reg   [5:0] trunc_ln61_reg_1786_pp0_iter3_reg;
reg   [5:0] trunc_ln61_reg_1786_pp0_iter4_reg;
reg    ap_block_state3_io;
reg    ap_block_state75_pp0_stage2_iter4;
reg    ap_block_pp0_stage2_11001;
reg    ap_block_state4_io;
reg    ap_block_state76_pp0_stage3_iter4;
reg    ap_block_pp0_stage3_11001;
reg   [57:0] trunc_ln61_3_reg_1803;
wire   [5:0] trunc_ln61_4_fu_776_p1;
reg   [5:0] trunc_ln61_4_reg_1808;
reg   [5:0] trunc_ln61_4_reg_1808_pp0_iter1_reg;
reg   [5:0] trunc_ln61_4_reg_1808_pp0_iter2_reg;
reg   [5:0] trunc_ln61_4_reg_1808_pp0_iter3_reg;
reg   [5:0] trunc_ln61_4_reg_1808_pp0_iter4_reg;
reg    ap_block_state5_io;
reg    ap_block_state77_pp0_stage4_iter4;
reg    ap_block_pp0_stage4_11001;
reg    ap_block_state6_io;
reg    ap_block_state78_pp0_stage5_iter4;
reg    ap_block_pp0_stage5_11001;
reg   [57:0] trunc_ln61_6_reg_1825;
wire   [5:0] trunc_ln61_8_fu_811_p1;
reg   [5:0] trunc_ln61_8_reg_1830;
reg   [5:0] trunc_ln61_8_reg_1830_pp0_iter1_reg;
reg   [5:0] trunc_ln61_8_reg_1830_pp0_iter2_reg;
reg   [5:0] trunc_ln61_8_reg_1830_pp0_iter3_reg;
reg   [5:0] trunc_ln61_8_reg_1830_pp0_iter4_reg;
reg    ap_block_state7_io;
reg    ap_block_state79_pp0_stage6_iter4;
reg    ap_block_pp0_stage6_11001;
reg    ap_block_state8_io;
reg    ap_block_state80_pp0_stage7_iter4;
reg    ap_block_state188_pp0_stage7_iter10;
reg    ap_block_pp0_stage7_11001;
wire   [63:0] empty_37_fu_840_p2;
reg   [63:0] empty_37_reg_1847;
reg   [57:0] trunc_ln61_9_reg_1853;
wire   [5:0] trunc_ln61_13_fu_855_p1;
reg   [5:0] trunc_ln61_13_reg_1858;
reg   [5:0] trunc_ln61_13_reg_1858_pp0_iter1_reg;
reg   [5:0] trunc_ln61_13_reg_1858_pp0_iter2_reg;
reg   [5:0] trunc_ln61_13_reg_1858_pp0_iter3_reg;
reg   [5:0] trunc_ln61_13_reg_1858_pp0_iter4_reg;
reg    ap_block_state9_io;
reg    ap_block_state81_pp0_stage8_iter4;
reg    ap_block_pp0_stage8_11001;
reg    ap_block_state10_io;
reg    ap_block_state82_pp0_stage9_iter4;
reg    ap_block_pp0_stage9_11001;
reg   [57:0] trunc_ln61_12_reg_1875;
wire   [5:0] trunc_ln61_17_fu_890_p1;
reg   [5:0] trunc_ln61_17_reg_1880;
reg   [5:0] trunc_ln61_17_reg_1880_pp0_iter1_reg;
reg   [5:0] trunc_ln61_17_reg_1880_pp0_iter2_reg;
reg   [5:0] trunc_ln61_17_reg_1880_pp0_iter3_reg;
reg   [5:0] trunc_ln61_17_reg_1880_pp0_iter4_reg;
reg    ap_block_state11_io;
reg    ap_block_state83_pp0_stage10_iter4;
reg    ap_block_pp0_stage10_11001;
reg    ap_block_state12_io;
reg    ap_block_state84_pp0_stage11_iter4;
reg    ap_block_pp0_stage11_11001;
reg   [57:0] trunc_ln61_15_reg_1897;
wire   [5:0] trunc_ln61_22_fu_925_p1;
reg   [5:0] trunc_ln61_22_reg_1902;
reg   [5:0] trunc_ln61_22_reg_1902_pp0_iter1_reg;
reg   [5:0] trunc_ln61_22_reg_1902_pp0_iter2_reg;
reg   [5:0] trunc_ln61_22_reg_1902_pp0_iter3_reg;
reg   [5:0] trunc_ln61_22_reg_1902_pp0_iter4_reg;
reg    ap_block_state13_io;
reg    ap_block_state85_pp0_stage12_iter4;
reg    ap_block_pp0_stage12_11001;
reg    ap_block_state14_io;
reg    ap_block_state86_pp0_stage13_iter4;
reg    ap_block_pp0_stage13_11001;
wire   [63:0] empty_38_fu_954_p2;
reg   [63:0] empty_38_reg_1919;
reg   [57:0] trunc_ln61_18_reg_1925;
wire   [5:0] trunc_ln61_26_fu_969_p1;
reg   [5:0] trunc_ln61_26_reg_1930;
reg   [5:0] trunc_ln61_26_reg_1930_pp0_iter1_reg;
reg   [5:0] trunc_ln61_26_reg_1930_pp0_iter2_reg;
reg   [5:0] trunc_ln61_26_reg_1930_pp0_iter3_reg;
reg   [5:0] trunc_ln61_26_reg_1930_pp0_iter4_reg;
reg    ap_block_state15_io;
reg    ap_block_state87_pp0_stage14_iter4;
reg    ap_block_pp0_stage14_11001;
reg    ap_block_state16_io;
reg    ap_block_state88_pp0_stage15_iter4;
reg    ap_block_pp0_stage15_11001;
reg   [57:0] trunc_ln61_21_reg_1947;
wire   [5:0] trunc_ln61_29_fu_1004_p1;
reg   [5:0] trunc_ln61_29_reg_1952;
reg   [5:0] trunc_ln61_29_reg_1952_pp0_iter1_reg;
reg   [5:0] trunc_ln61_29_reg_1952_pp0_iter2_reg;
reg   [5:0] trunc_ln61_29_reg_1952_pp0_iter3_reg;
reg   [5:0] trunc_ln61_29_reg_1952_pp0_iter4_reg;
reg    ap_block_state17_io;
reg    ap_block_state89_pp0_stage16_iter4;
reg    ap_block_pp0_stage16_11001;
reg    ap_block_pp0_stage17_11001;
reg   [57:0] trunc_ln61_24_reg_1969;
wire   [5:0] trunc_ln61_32_fu_1039_p1;
reg   [5:0] trunc_ln61_32_reg_1974;
reg   [5:0] trunc_ln61_32_reg_1974_pp0_iter1_reg;
reg   [5:0] trunc_ln61_32_reg_1974_pp0_iter2_reg;
reg   [5:0] trunc_ln61_32_reg_1974_pp0_iter3_reg;
reg   [5:0] trunc_ln61_32_reg_1974_pp0_iter4_reg;
reg   [511:0] gmem_addr_14_read_reg_1991;
wire   [7:0] trunc_ln61_1_fu_1075_p1;
reg   [7:0] trunc_ln61_1_reg_1996;
reg   [511:0] gmem_addr_read_reg_2001;
reg   [511:0] gmem_addr_15_read_reg_2016;
wire   [7:0] trunc_ln61_5_fu_1110_p1;
reg   [7:0] trunc_ln61_5_reg_2021;
reg   [511:0] gmem_addr_24_read_reg_2026;
reg   [511:0] gmem_addr_16_read_reg_2031;
wire   [7:0] trunc_ln61_10_fu_1155_p1;
reg   [7:0] trunc_ln61_10_reg_2041;
reg   [511:0] gmem_addr_25_read_reg_2046;
wire   [16:0] grp_fu_1579_p3;
reg   [16:0] add_ln61_6_reg_2051;
reg   [511:0] gmem_addr_17_read_reg_2056;
wire   [15:0] mul_ln61_2_fu_1174_p2;
reg   [15:0] mul_ln61_2_reg_2061;
wire   [7:0] trunc_ln61_14_fu_1196_p1;
reg   [7:0] trunc_ln61_14_reg_2066;
reg   [511:0] gmem_addr_26_read_reg_2071;
reg   [511:0] gmem_addr_18_read_reg_2086;
wire   [7:0] trunc_ln61_19_fu_1231_p1;
reg   [7:0] trunc_ln61_19_reg_2091;
reg   [511:0] gmem_addr_27_read_reg_2096;
reg   [511:0] gmem_addr_19_read_reg_2101;
wire   [15:0] mul_ln61_6_fu_1253_p2;
reg   [15:0] mul_ln61_6_reg_2111;
wire   [7:0] trunc_ln61_23_fu_1275_p1;
reg   [7:0] trunc_ln61_23_reg_2116;
reg   [511:0] gmem_addr_28_read_reg_2121;
wire   [17:0] add_ln61_8_fu_1285_p2;
reg   [17:0] add_ln61_8_reg_2126;
reg   [511:0] gmem_addr_20_read_reg_2141;
wire   [7:0] trunc_ln61_27_fu_1322_p1;
reg   [7:0] trunc_ln61_27_reg_2146;
reg   [511:0] gmem_addr_29_read_reg_2151;
wire   [7:0] trunc_ln61_28_fu_1330_p1;
reg   [7:0] trunc_ln61_28_reg_2156;
reg   [511:0] gmem_addr_21_read_reg_2161;
wire   [7:0] trunc_ln61_30_fu_1353_p1;
reg   [7:0] trunc_ln61_30_reg_2171;
reg   [511:0] gmem_addr_30_read_reg_2176;
wire   [16:0] grp_fu_1596_p3;
reg   [16:0] add_ln61_9_reg_2181;
reg   [511:0] gmem_addr_22_read_reg_2186;
wire   [15:0] mul_ln61_fu_1372_p2;
reg   [15:0] mul_ln61_reg_2191;
wire   [7:0] trunc_ln61_33_fu_1394_p1;
reg   [7:0] trunc_ln61_33_reg_2196;
reg   [511:0] gmem_addr_31_read_reg_2201;
wire   [19:0] sum_fu_1444_p2;
wire   [0:0] icmp_ln64_fu_1474_p2;
reg   [0:0] icmp_ln64_reg_2246;
reg   [0:0] icmp_ln64_reg_2246_pp0_iter6_reg;
wire   [5:0] trunc_ln65_fu_1507_p1;
reg   [5:0] trunc_ln65_reg_2251;
wire   [63:0] shl_ln65_fu_1515_p2;
reg   [63:0] shl_ln65_reg_2256;
reg   [57:0] trunc_ln65_1_reg_2261;
wire   [511:0] shl_ln65_2_fu_1563_p2;
reg   [511:0] shl_ln65_2_reg_2266;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage7_subdone;
wire  signed [63:0] sext_ln61_fu_745_p1;
wire  signed [63:0] sext_ln61_1_fu_780_p1;
wire  signed [63:0] sext_ln61_2_fu_815_p1;
wire  signed [63:0] sext_ln61_3_fu_859_p1;
wire  signed [63:0] sext_ln61_4_fu_894_p1;
wire  signed [63:0] sext_ln61_5_fu_929_p1;
wire  signed [63:0] sext_ln61_6_fu_973_p1;
wire  signed [63:0] sext_ln61_7_fu_1008_p1;
wire  signed [63:0] sext_ln61_8_fu_1043_p1;
wire  signed [63:0] sext_ln65_fu_1569_p1;
reg    ap_block_pp0_stage11_01001;
reg   [9:0] c_fu_150;
wire   [9:0] add_ln65_fu_724_p2;
wire    ap_loop_init;
reg   [8:0] r_fu_154;
wire   [8:0] select_ln52_fu_653_p3;
reg   [18:0] indvar_flatten397_fu_158;
wire   [18:0] add_ln52_fu_621_p2;
wire   [0:0] icmp_ln54_fu_633_p2;
wire   [8:0] indvars_iv_next25_i_dup443_fu_647_p2;
wire   [17:0] tmp_fu_661_p3;
wire   [15:0] tmp_2_fu_673_p3;
wire   [18:0] p_shl_fu_669_p1;
wire   [18:0] p_shl85_fu_681_p1;
wire   [18:0] zext_ln54_2_fu_691_p1;
wire   [63:0] add_ln57_cast_fu_701_p1;
wire   [63:0] add_ln61_fu_761_p2;
wire   [63:0] add_ln61_1_fu_796_p2;
wire   [18:0] tmp7_fu_831_p2;
wire   [63:0] tmp7_cast_fu_836_p1;
wire   [63:0] add_ln61_2_fu_875_p2;
wire   [63:0] add_ln61_3_fu_910_p2;
wire   [18:0] tmp8_fu_945_p2;
wire   [63:0] tmp8_cast_fu_950_p1;
wire   [63:0] add_ln61_4_fu_989_p2;
wire   [63:0] add_ln61_5_fu_1024_p2;
wire   [8:0] shl_ln2_fu_1059_p3;
wire   [511:0] zext_ln61_fu_1066_p1;
wire   [511:0] lshr_ln61_fu_1070_p2;
wire   [511:0] lshr_ln61_1_fu_1082_p2;
wire   [7:0] trunc_ln61_2_fu_1086_p1;
wire   [8:0] shl_ln61_1_fu_1094_p3;
wire   [511:0] zext_ln61_3_fu_1101_p1;
wire   [511:0] lshr_ln61_2_fu_1105_p2;
wire   [511:0] lshr_ln61_3_fu_1117_p2;
wire   [7:0] trunc_ln61_7_fu_1121_p1;
wire   [7:0] mul_ln61_3_fu_1129_p0;
wire   [7:0] mul_ln61_3_fu_1129_p1;
wire   [15:0] mul_ln61_3_fu_1129_p2;
wire   [8:0] shl_ln61_2_fu_1139_p3;
wire   [511:0] zext_ln61_6_fu_1146_p1;
wire   [511:0] lshr_ln61_4_fu_1150_p2;
wire   [511:0] lshr_ln61_5_fu_1162_p2;
wire   [7:0] trunc_ln61_11_fu_1166_p1;
wire   [7:0] mul_ln61_2_fu_1174_p0;
wire   [7:0] mul_ln61_2_fu_1174_p1;
wire   [8:0] shl_ln61_3_fu_1180_p3;
wire   [511:0] zext_ln61_8_fu_1187_p1;
wire   [511:0] lshr_ln61_6_fu_1191_p2;
wire   [511:0] lshr_ln61_7_fu_1203_p2;
wire   [7:0] trunc_ln61_16_fu_1207_p1;
wire   [8:0] shl_ln61_4_fu_1215_p3;
wire   [511:0] zext_ln61_11_fu_1222_p1;
wire   [511:0] lshr_ln61_8_fu_1226_p2;
wire   [511:0] lshr_ln61_9_fu_1238_p2;
wire   [7:0] trunc_ln61_20_fu_1242_p1;
wire   [7:0] mul_ln61_6_fu_1253_p0;
wire   [7:0] mul_ln61_6_fu_1253_p1;
wire   [8:0] shl_ln61_5_fu_1259_p3;
wire   [511:0] zext_ln61_14_fu_1266_p1;
wire   [511:0] lshr_ln61_10_fu_1270_p2;
wire   [16:0] grp_fu_1587_p3;
wire   [17:0] zext_ln61_35_fu_1282_p1;
wire   [17:0] zext_ln61_34_fu_1279_p1;
wire   [511:0] lshr_ln61_11_fu_1294_p2;
wire   [7:0] trunc_ln61_25_fu_1298_p1;
wire   [8:0] shl_ln61_6_fu_1306_p3;
wire   [511:0] zext_ln61_16_fu_1313_p1;
wire   [511:0] lshr_ln61_12_fu_1317_p2;
wire   [511:0] lshr_ln61_13_fu_1326_p2;
wire   [8:0] shl_ln61_7_fu_1337_p3;
wire   [511:0] zext_ln61_19_fu_1344_p1;
wire   [511:0] lshr_ln61_14_fu_1348_p2;
wire   [511:0] lshr_ln61_15_fu_1360_p2;
wire   [7:0] trunc_ln61_31_fu_1364_p1;
wire   [7:0] mul_ln61_fu_1372_p0;
wire   [7:0] mul_ln61_fu_1372_p1;
wire   [8:0] shl_ln61_8_fu_1378_p3;
wire   [511:0] zext_ln61_22_fu_1385_p1;
wire   [511:0] lshr_ln61_16_fu_1389_p2;
wire   [511:0] lshr_ln61_17_fu_1401_p2;
wire   [7:0] trunc_ln61_34_fu_1405_p1;
wire   [16:0] grp_fu_1604_p3;
wire   [17:0] grp_fu_1613_p3;
wire   [18:0] zext_ln61_39_fu_1431_p1;
wire   [18:0] zext_ln61_37_fu_1428_p1;
wire   [18:0] add_ln61_12_fu_1434_p2;
wire   [19:0] zext_ln61_40_fu_1440_p1;
wire   [19:0] zext_ln61_36_fu_1425_p1;
wire   [11:0] select_ln64_fu_1450_p3;
wire   [11:0] grp_fu_1460_p1;
wire   [19:0] p2y_fu_1466_p3;
wire   [63:0] zext_ln54_fu_1480_p1;
wire   [10:0] zext_ln54_1_fu_1483_p1;
wire   [10:0] add_ln65_3_fu_1491_p2;
wire   [63:0] zext_ln65_2_fu_1497_p1;
wire   [63:0] add_ln65_2_fu_1486_p2;
wire   [63:0] add_ln65_1_fu_1501_p2;
wire   [63:0] zext_ln65_1_fu_1511_p1;
wire   [7:0] grp_fu_1460_p2;
wire   [0:0] xor_ln64_fu_1531_p2;
wire   [7:0] trunc_ln64_fu_1536_p1;
wire   [7:0] pixel_fu_1540_p3;
wire   [8:0] shl_ln65_1_fu_1552_p3;
wire   [511:0] zext_ln65_fu_1548_p1;
wire   [511:0] zext_ln65_3_fu_1559_p1;
wire   [7:0] grp_fu_1579_p0;
wire   [7:0] grp_fu_1579_p1;
wire   [15:0] grp_fu_1579_p2;
wire   [7:0] grp_fu_1587_p0;
wire   [7:0] grp_fu_1587_p1;
wire   [15:0] grp_fu_1587_p2;
wire   [7:0] grp_fu_1596_p0;
wire   [7:0] grp_fu_1596_p1;
wire   [15:0] grp_fu_1596_p2;
wire   [7:0] grp_fu_1604_p0;
wire   [7:0] grp_fu_1604_p1;
wire   [15:0] grp_fu_1604_p2;
wire   [7:0] grp_fu_1613_p0;
wire   [7:0] grp_fu_1613_p1;
wire   [16:0] grp_fu_1613_p2;
reg    grp_fu_1460_ce;
reg    grp_fu_1579_ce;
reg    grp_fu_1587_ce;
reg    grp_fu_1596_ce;
reg    grp_fu_1604_ce;
reg    grp_fu_1613_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter9_stage7;
reg    ap_idle_pp0_0to8;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg   [17:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to10;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
reg    ap_block_pp0_stage8_subdone;
reg    ap_block_pp0_stage9_subdone;
reg    ap_block_pp0_stage10_subdone;
reg    ap_block_pp0_stage11_subdone;
reg    ap_block_pp0_stage12_subdone;
reg    ap_block_pp0_stage13_subdone;
reg    ap_block_pp0_stage14_subdone;
reg    ap_block_pp0_stage15_subdone;
reg    ap_block_pp0_stage16_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire   [19:0] grp_fu_1460_p10;
wire   [15:0] grp_fu_1579_p00;
wire   [15:0] grp_fu_1579_p10;
wire   [16:0] grp_fu_1579_p20;
wire   [15:0] grp_fu_1587_p00;
wire   [15:0] grp_fu_1587_p10;
wire   [16:0] grp_fu_1587_p20;
wire   [15:0] grp_fu_1596_p00;
wire   [15:0] grp_fu_1596_p10;
wire   [16:0] grp_fu_1596_p20;
wire   [15:0] grp_fu_1604_p00;
wire   [15:0] grp_fu_1604_p10;
wire   [16:0] grp_fu_1604_p20;
wire   [15:0] grp_fu_1613_p00;
wire   [15:0] grp_fu_1613_p10;
wire   [17:0] grp_fu_1613_p20;
wire   [15:0] mul_ln61_2_fu_1174_p00;
wire   [15:0] mul_ln61_2_fu_1174_p10;
wire   [15:0] mul_ln61_3_fu_1129_p00;
wire   [15:0] mul_ln61_3_fu_1129_p10;
wire   [15:0] mul_ln61_6_fu_1253_p00;
wire   [15:0] mul_ln61_6_fu_1253_p10;
wire   [15:0] mul_ln61_fu_1372_p00;
wire   [15:0] mul_ln61_fu_1372_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 18'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 c_fu_150 = 10'd0;
#0 r_fu_154 = 9'd0;
#0 indvar_flatten397_fu_158 = 19'd0;
#0 ap_done_reg = 1'b0;
end

edgedetect_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U20(
    .din0(mul_ln61_3_fu_1129_p0),
    .din1(mul_ln61_3_fu_1129_p1),
    .dout(mul_ln61_3_fu_1129_p2)
);

edgedetect_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U21(
    .din0(mul_ln61_2_fu_1174_p0),
    .din1(mul_ln61_2_fu_1174_p1),
    .dout(mul_ln61_2_fu_1174_p2)
);

edgedetect_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U22(
    .din0(mul_ln61_6_fu_1253_p0),
    .din1(mul_ln61_6_fu_1253_p1),
    .dout(mul_ln61_6_fu_1253_p2)
);

edgedetect_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U23(
    .din0(mul_ln61_fu_1372_p0),
    .din1(mul_ln61_fu_1372_p1),
    .dout(mul_ln61_fu_1372_p2)
);

edgedetect_udiv_20ns_12ns_8_24_1 #(
    .ID( 1 ),
    .NUM_STAGE( 24 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 8 ))
udiv_20ns_12ns_8_24_1_U24(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sum_fu_1444_p2),
    .din1(grp_fu_1460_p1),
    .ce(grp_fu_1460_ce),
    .dout(grp_fu_1460_p2)
);

edgedetect_mac_muladd_8ns_8ns_16ns_17_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
mac_muladd_8ns_8ns_16ns_17_4_1_U25(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1579_p0),
    .din1(grp_fu_1579_p1),
    .din2(grp_fu_1579_p2),
    .ce(grp_fu_1579_ce),
    .dout(grp_fu_1579_p3)
);

edgedetect_mac_muladd_8ns_8ns_16ns_17_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
mac_muladd_8ns_8ns_16ns_17_4_1_U26(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1587_p0),
    .din1(grp_fu_1587_p1),
    .din2(grp_fu_1587_p2),
    .ce(grp_fu_1587_ce),
    .dout(grp_fu_1587_p3)
);

edgedetect_mac_muladd_8ns_8ns_16ns_17_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
mac_muladd_8ns_8ns_16ns_17_4_1_U27(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1596_p0),
    .din1(grp_fu_1596_p1),
    .din2(grp_fu_1596_p2),
    .ce(grp_fu_1596_ce),
    .dout(grp_fu_1596_p3)
);

edgedetect_mac_muladd_8ns_8ns_16ns_17_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
mac_muladd_8ns_8ns_16ns_17_4_1_U28(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1604_p0),
    .din1(grp_fu_1604_p1),
    .din2(grp_fu_1604_p2),
    .ce(grp_fu_1604_ce),
    .dout(grp_fu_1604_p3)
);

edgedetect_mac_muladd_8ns_8ns_17ns_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 17 ),
    .dout_WIDTH( 18 ))
mac_muladd_8ns_8ns_17ns_18_4_1_U29(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1613_p0),
    .din1(grp_fu_1613_p1),
    .din2(grp_fu_1613_p2),
    .ce(grp_fu_1613_ce),
    .dout(grp_fu_1613_p3)
);

edgedetect_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage17),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_loop_exit_ready_pp0_iter9_reg == 1'b1) & (1'b0 == ap_block_pp0_stage7_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage17)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_subdone))) begin
            ap_enable_reg_pp0_iter10 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_subdone))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_subdone))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_subdone))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_subdone))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_subdone))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_subdone))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_subdone))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_subdone))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter9_stage7) & (ap_idle_pp0_0to8 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter9_stage7) & (ap_idle_pp0_0to8 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter9_stage7) & (ap_idle_pp0_0to8 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter9_stage7) & (ap_idle_pp0_0to8 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter9_stage7) & (ap_idle_pp0_0to8 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter9_stage7) & (ap_idle_pp0_0to8 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter9_stage7) & (ap_idle_pp0_0to8 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter9_stage7) & (ap_idle_pp0_0to8 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter9_stage7) & (ap_idle_pp0_0to8 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1))) begin
        c_fu_150 <= 10'd0;
    end else if (((icmp_ln52_fu_615_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        c_fu_150 <= add_ln65_fu_724_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1))) begin
        indvar_flatten397_fu_158 <= 19'd0;
    end else if (((icmp_ln52_fu_615_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        indvar_flatten397_fu_158 <= add_ln52_fu_621_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1))) begin
        r_fu_154 <= 9'd0;
    end else if (((icmp_ln52_fu_615_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        r_fu_154 <= select_ln52_fu_653_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln57_reg_1769 <= add_ln57_fu_695_p2;
        empty_36_reg_1775 <= empty_36_fu_705_p2;
        empty_reg_1764[18 : 7] <= empty_fu_685_p2[18 : 7];
        empty_reg_1764_pp0_iter1_reg[18 : 7] <= empty_reg_1764[18 : 7];
        empty_reg_1764_pp0_iter2_reg[18 : 7] <= empty_reg_1764_pp0_iter1_reg[18 : 7];
        empty_reg_1764_pp0_iter3_reg[18 : 7] <= empty_reg_1764_pp0_iter2_reg[18 : 7];
        empty_reg_1764_pp0_iter4_reg[18 : 7] <= empty_reg_1764_pp0_iter3_reg[18 : 7];
        empty_reg_1764_pp0_iter5_reg[18 : 7] <= empty_reg_1764_pp0_iter4_reg[18 : 7];
        gmem_addr_14_read_reg_1991 <= m_axi_gmem_RDATA;
        icmp_ln52_reg_1755 <= icmp_ln52_fu_615_p2;
        icmp_ln52_reg_1755_pp0_iter1_reg <= icmp_ln52_reg_1755;
        icmp_ln52_reg_1755_pp0_iter2_reg <= icmp_ln52_reg_1755_pp0_iter1_reg;
        icmp_ln52_reg_1755_pp0_iter3_reg <= icmp_ln52_reg_1755_pp0_iter2_reg;
        icmp_ln52_reg_1755_pp0_iter4_reg <= icmp_ln52_reg_1755_pp0_iter3_reg;
        icmp_ln52_reg_1755_pp0_iter5_reg <= icmp_ln52_reg_1755_pp0_iter4_reg;
        icmp_ln52_reg_1755_pp0_iter6_reg <= icmp_ln52_reg_1755_pp0_iter5_reg;
        icmp_ln52_reg_1755_pp0_iter7_reg <= icmp_ln52_reg_1755_pp0_iter6_reg;
        icmp_ln52_reg_1755_pp0_iter8_reg <= icmp_ln52_reg_1755_pp0_iter7_reg;
        icmp_ln52_reg_1755_pp0_iter9_reg <= icmp_ln52_reg_1755_pp0_iter8_reg;
        select_ln31_reg_1759 <= select_ln31_fu_639_p3;
        select_ln31_reg_1759_pp0_iter1_reg <= select_ln31_reg_1759;
        select_ln31_reg_1759_pp0_iter2_reg <= select_ln31_reg_1759_pp0_iter1_reg;
        select_ln31_reg_1759_pp0_iter3_reg <= select_ln31_reg_1759_pp0_iter2_reg;
        select_ln31_reg_1759_pp0_iter4_reg <= select_ln31_reg_1759_pp0_iter3_reg;
        select_ln31_reg_1759_pp0_iter5_reg <= select_ln31_reg_1759_pp0_iter4_reg;
        shl_ln65_reg_2256 <= shl_ln65_fu_1515_p2;
        trunc_ln61_reg_1786 <= trunc_ln61_fu_720_p1;
        trunc_ln61_reg_1786_pp0_iter1_reg <= trunc_ln61_reg_1786;
        trunc_ln61_reg_1786_pp0_iter2_reg <= trunc_ln61_reg_1786_pp0_iter1_reg;
        trunc_ln61_reg_1786_pp0_iter3_reg <= trunc_ln61_reg_1786_pp0_iter2_reg;
        trunc_ln61_reg_1786_pp0_iter4_reg <= trunc_ln61_reg_1786_pp0_iter3_reg;
        trunc_ln61_s_reg_1781 <= {{empty_36_fu_705_p2[63:6]}};
        trunc_ln65_1_reg_2261 <= {{add_ln65_1_fu_1501_p2[63:6]}};
        trunc_ln65_reg_2251 <= trunc_ln65_fu_1507_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        add_ln61_6_reg_2051 <= grp_fu_1579_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001))) begin
        add_ln61_8_reg_2126 <= add_ln61_8_fu_1285_p2;
        gmem_addr_28_read_reg_2121 <= m_axi_gmem_RDATA;
        trunc_ln61_23_reg_2116 <= trunc_ln61_23_fu_1275_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001))) begin
        add_ln61_9_reg_2181 <= grp_fu_1596_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        empty_37_reg_1847 <= empty_37_fu_840_p2;
        gmem_addr_17_read_reg_2056 <= m_axi_gmem_RDATA;
        mul_ln61_2_reg_2061 <= mul_ln61_2_fu_1174_p2;
        trunc_ln61_13_reg_1858 <= trunc_ln61_13_fu_855_p1;
        trunc_ln61_13_reg_1858_pp0_iter1_reg <= trunc_ln61_13_reg_1858;
        trunc_ln61_13_reg_1858_pp0_iter2_reg <= trunc_ln61_13_reg_1858_pp0_iter1_reg;
        trunc_ln61_13_reg_1858_pp0_iter3_reg <= trunc_ln61_13_reg_1858_pp0_iter2_reg;
        trunc_ln61_13_reg_1858_pp0_iter4_reg <= trunc_ln61_13_reg_1858_pp0_iter3_reg;
        trunc_ln61_9_reg_1853 <= {{empty_37_fu_840_p2[63:6]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001))) begin
        empty_38_reg_1919 <= empty_38_fu_954_p2;
        gmem_addr_20_read_reg_2141 <= m_axi_gmem_RDATA;
        trunc_ln61_18_reg_1925 <= {{empty_38_fu_954_p2[63:6]}};
        trunc_ln61_26_reg_1930 <= trunc_ln61_26_fu_969_p1;
        trunc_ln61_26_reg_1930_pp0_iter1_reg <= trunc_ln61_26_reg_1930;
        trunc_ln61_26_reg_1930_pp0_iter2_reg <= trunc_ln61_26_reg_1930_pp0_iter1_reg;
        trunc_ln61_26_reg_1930_pp0_iter3_reg <= trunc_ln61_26_reg_1930_pp0_iter2_reg;
        trunc_ln61_26_reg_1930_pp0_iter4_reg <= trunc_ln61_26_reg_1930_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        gmem_addr_15_read_reg_2016 <= m_axi_gmem_RDATA;
        trunc_ln61_3_reg_1803 <= {{add_ln61_fu_761_p2[63:6]}};
        trunc_ln61_4_reg_1808 <= trunc_ln61_4_fu_776_p1;
        trunc_ln61_4_reg_1808_pp0_iter1_reg <= trunc_ln61_4_reg_1808;
        trunc_ln61_4_reg_1808_pp0_iter2_reg <= trunc_ln61_4_reg_1808_pp0_iter1_reg;
        trunc_ln61_4_reg_1808_pp0_iter3_reg <= trunc_ln61_4_reg_1808_pp0_iter2_reg;
        trunc_ln61_4_reg_1808_pp0_iter4_reg <= trunc_ln61_4_reg_1808_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        gmem_addr_16_read_reg_2031 <= m_axi_gmem_RDATA;
        icmp_ln64_reg_2246 <= icmp_ln64_fu_1474_p2;
        icmp_ln64_reg_2246_pp0_iter6_reg <= icmp_ln64_reg_2246;
        trunc_ln61_6_reg_1825 <= {{add_ln61_1_fu_796_p2[63:6]}};
        trunc_ln61_8_reg_1830 <= trunc_ln61_8_fu_811_p1;
        trunc_ln61_8_reg_1830_pp0_iter1_reg <= trunc_ln61_8_reg_1830;
        trunc_ln61_8_reg_1830_pp0_iter2_reg <= trunc_ln61_8_reg_1830_pp0_iter1_reg;
        trunc_ln61_8_reg_1830_pp0_iter3_reg <= trunc_ln61_8_reg_1830_pp0_iter2_reg;
        trunc_ln61_8_reg_1830_pp0_iter4_reg <= trunc_ln61_8_reg_1830_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001))) begin
        gmem_addr_18_read_reg_2086 <= m_axi_gmem_RDATA;
        trunc_ln61_12_reg_1875 <= {{add_ln61_2_fu_875_p2[63:6]}};
        trunc_ln61_17_reg_1880 <= trunc_ln61_17_fu_890_p1;
        trunc_ln61_17_reg_1880_pp0_iter1_reg <= trunc_ln61_17_reg_1880;
        trunc_ln61_17_reg_1880_pp0_iter2_reg <= trunc_ln61_17_reg_1880_pp0_iter1_reg;
        trunc_ln61_17_reg_1880_pp0_iter3_reg <= trunc_ln61_17_reg_1880_pp0_iter2_reg;
        trunc_ln61_17_reg_1880_pp0_iter4_reg <= trunc_ln61_17_reg_1880_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001))) begin
        gmem_addr_19_read_reg_2101 <= m_axi_gmem_RDATA;
        mul_ln61_6_reg_2111 <= mul_ln61_6_fu_1253_p2;
        trunc_ln61_15_reg_1897 <= {{add_ln61_3_fu_910_p2[63:6]}};
        trunc_ln61_22_reg_1902 <= trunc_ln61_22_fu_925_p1;
        trunc_ln61_22_reg_1902_pp0_iter1_reg <= trunc_ln61_22_reg_1902;
        trunc_ln61_22_reg_1902_pp0_iter2_reg <= trunc_ln61_22_reg_1902_pp0_iter1_reg;
        trunc_ln61_22_reg_1902_pp0_iter3_reg <= trunc_ln61_22_reg_1902_pp0_iter2_reg;
        trunc_ln61_22_reg_1902_pp0_iter4_reg <= trunc_ln61_22_reg_1902_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001))) begin
        gmem_addr_21_read_reg_2161 <= m_axi_gmem_RDATA;
        trunc_ln61_21_reg_1947 <= {{add_ln61_4_fu_989_p2[63:6]}};
        trunc_ln61_28_reg_2156 <= trunc_ln61_28_fu_1330_p1;
        trunc_ln61_29_reg_1952 <= trunc_ln61_29_fu_1004_p1;
        trunc_ln61_29_reg_1952_pp0_iter1_reg <= trunc_ln61_29_reg_1952;
        trunc_ln61_29_reg_1952_pp0_iter2_reg <= trunc_ln61_29_reg_1952_pp0_iter1_reg;
        trunc_ln61_29_reg_1952_pp0_iter3_reg <= trunc_ln61_29_reg_1952_pp0_iter2_reg;
        trunc_ln61_29_reg_1952_pp0_iter4_reg <= trunc_ln61_29_reg_1952_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001))) begin
        gmem_addr_22_read_reg_2186 <= m_axi_gmem_RDATA;
        mul_ln61_reg_2191 <= mul_ln61_fu_1372_p2;
        trunc_ln61_24_reg_1969 <= {{add_ln61_5_fu_1024_p2[63:6]}};
        trunc_ln61_32_reg_1974 <= trunc_ln61_32_fu_1039_p1;
        trunc_ln61_32_reg_1974_pp0_iter1_reg <= trunc_ln61_32_reg_1974;
        trunc_ln61_32_reg_1974_pp0_iter2_reg <= trunc_ln61_32_reg_1974_pp0_iter1_reg;
        trunc_ln61_32_reg_1974_pp0_iter3_reg <= trunc_ln61_32_reg_1974_pp0_iter2_reg;
        trunc_ln61_32_reg_1974_pp0_iter4_reg <= trunc_ln61_32_reg_1974_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        gmem_addr_24_read_reg_2026 <= m_axi_gmem_RDATA;
        trunc_ln61_5_reg_2021 <= trunc_ln61_5_fu_1110_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        gmem_addr_25_read_reg_2046 <= m_axi_gmem_RDATA;
        trunc_ln61_10_reg_2041 <= trunc_ln61_10_fu_1155_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        gmem_addr_26_read_reg_2071 <= m_axi_gmem_RDATA;
        trunc_ln61_14_reg_2066 <= trunc_ln61_14_fu_1196_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001))) begin
        gmem_addr_27_read_reg_2096 <= m_axi_gmem_RDATA;
        shl_ln65_2_reg_2266 <= shl_ln65_2_fu_1563_p2;
        trunc_ln61_19_reg_2091 <= trunc_ln61_19_fu_1231_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001))) begin
        gmem_addr_29_read_reg_2151 <= m_axi_gmem_RDATA;
        trunc_ln61_27_reg_2146 <= trunc_ln61_27_fu_1322_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001))) begin
        gmem_addr_30_read_reg_2176 <= m_axi_gmem_RDATA;
        trunc_ln61_30_reg_2171 <= trunc_ln61_30_fu_1353_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        gmem_addr_31_read_reg_2201 <= m_axi_gmem_RDATA;
        p_cast45_cast_cast_reg_1740 <= p_cast45_cast_cast_fu_585_p1;
        p_cast47_cast_cast_reg_1735 <= p_cast47_cast_cast_fu_581_p1;
        p_cast49_cast_cast_reg_1730 <= p_cast49_cast_cast_fu_577_p1;
        p_cast51_cast_cast_reg_1725 <= p_cast51_cast_cast_fu_573_p1;
        p_cast53_cast_cast_reg_1720 <= p_cast53_cast_cast_fu_569_p1;
        p_cast55_cast_cast_reg_1715 <= p_cast55_cast_cast_fu_565_p1;
        p_cast57_cast_cast_reg_1710 <= p_cast57_cast_cast_fu_561_p1;
        p_cast80_cast_reg_1705[8 : 0] <= p_cast80_cast_fu_557_p1[8 : 0];
        p_cast81_cast_reg_1700[8 : 0] <= p_cast81_cast_fu_553_p1[8 : 0];
        p_cast82_cast_reg_1695[8 : 0] <= p_cast82_cast_fu_549_p1[8 : 0];
        p_cast83_cast_reg_1690[8 : 0] <= p_cast83_cast_fu_545_p1[8 : 0];
        p_cast84_cast_reg_1685[8 : 0] <= p_cast84_cast_fu_541_p1[8 : 0];
        p_cast85_cast_reg_1680[8 : 0] <= p_cast85_cast_fu_537_p1[8 : 0];
        p_cast86_cast_reg_1675[8 : 0] <= p_cast86_cast_fu_533_p1[8 : 0];
        p_cast87_cast_reg_1670[8 : 0] <= p_cast87_cast_fu_529_p1[8 : 0];
        p_cast_cast_cast_reg_1745 <= p_cast_cast_cast_fu_589_p1;
        sext_ln26_cast_reg_1750 <= sext_ln26_cast_fu_593_p1;
        trunc_ln61_33_reg_2196 <= trunc_ln61_33_fu_1394_p1;
        zext_ln52_cast_reg_1665[8 : 0] <= zext_ln52_cast_fu_525_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        gmem_addr_read_reg_2001 <= m_axi_gmem_RDATA;
        trunc_ln61_1_reg_1996 <= trunc_ln61_1_fu_1075_p1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_subdone) & (icmp_ln52_reg_1755 == 1'd1))) begin
        ap_condition_exit_pp0_iter0_stage17 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage17 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (icmp_ln52_reg_1755_pp0_iter9_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_subdone))) begin
        ap_condition_exit_pp0_iter9_stage7 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter9_stage7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_loop_exit_ready_pp0_iter9_reg == 1'b1) & (1'b0 == ap_block_pp0_stage7_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to8 = 1'b1;
    end else begin
        ap_idle_pp0_0to8 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to10 = 1'b1;
    end else begin
        ap_idle_pp0_1to10 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln52_reg_1755 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17) & (icmp_ln52_reg_1755 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16) & (icmp_ln52_reg_1755 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14) & (icmp_ln52_reg_1755 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15) & (icmp_ln52_reg_1755 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12) & (icmp_ln52_reg_1755 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13) & (icmp_ln52_reg_1755 
    == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10) & (icmp_ln52_reg_1755 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11) & (icmp_ln52_reg_1755 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8) & (icmp_ln52_reg_1755 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9) & (icmp_ln52_reg_1755 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6) & (icmp_ln52_reg_1755 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7) & (icmp_ln52_reg_1755 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4) & (icmp_ln52_reg_1755 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 
    == ap_block_pp0_stage5) & (icmp_ln52_reg_1755 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (icmp_ln52_reg_1755 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3) & (icmp_ln52_reg_1755 == 1'd0)))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10))) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7))) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11)) 
    | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11))) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) 
    | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)))) begin
        grp_fu_1460_ce = 1'b1;
    end else begin
        grp_fu_1460_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)))) begin
        grp_fu_1579_ce = 1'b1;
    end else begin
        grp_fu_1579_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)))) begin
        grp_fu_1587_ce = 1'b1;
    end else begin
        grp_fu_1587_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001)))) begin
        grp_fu_1596_ce = 1'b1;
    end else begin
        grp_fu_1596_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)))) begin
        grp_fu_1604_ce = 1'b1;
    end else begin
        grp_fu_1604_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)))) begin
        grp_fu_1613_ce = 1'b1;
    end else begin
        grp_fu_1613_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        m_axi_gmem_ARADDR = p_cast57_cast_cast_reg_1710;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln52_reg_1755 == 1'd0))) begin
        m_axi_gmem_ARADDR = sext_ln61_8_fu_1043_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001) & (icmp_ln52_reg_1755 == 1'd0))) begin
        m_axi_gmem_ARADDR = p_cast55_cast_cast_reg_1715;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001) & (icmp_ln52_reg_1755 == 1'd0))) begin
        m_axi_gmem_ARADDR = sext_ln61_7_fu_1008_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001) & (icmp_ln52_reg_1755 == 1'd0))) begin
        m_axi_gmem_ARADDR = p_cast53_cast_cast_reg_1720;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001) & (icmp_ln52_reg_1755 == 1'd0))) begin
        m_axi_gmem_ARADDR = sext_ln61_6_fu_973_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001) & (icmp_ln52_reg_1755 == 1'd0))) begin
        m_axi_gmem_ARADDR = p_cast51_cast_cast_reg_1725;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001) & (icmp_ln52_reg_1755 == 1'd0))) begin
        m_axi_gmem_ARADDR = sext_ln61_5_fu_929_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001) & (icmp_ln52_reg_1755 == 1'd0))) begin
        m_axi_gmem_ARADDR = p_cast49_cast_cast_reg_1730;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001) & (icmp_ln52_reg_1755 == 1'd0))) begin
        m_axi_gmem_ARADDR = sext_ln61_4_fu_894_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln52_reg_1755 == 1'd0))) begin
        m_axi_gmem_ARADDR = p_cast47_cast_cast_reg_1735;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001) & (icmp_ln52_reg_1755 == 1'd0))) begin
        m_axi_gmem_ARADDR = sext_ln61_3_fu_859_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln52_reg_1755 == 1'd0))) begin
        m_axi_gmem_ARADDR = p_cast45_cast_cast_reg_1740;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln52_reg_1755 == 1'd0))) begin
        m_axi_gmem_ARADDR = sext_ln61_2_fu_815_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln52_reg_1755 == 1'd0))) begin
        m_axi_gmem_ARADDR = p_cast_cast_cast_reg_1745;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln52_reg_1755 == 1'd0))) begin
        m_axi_gmem_ARADDR = sext_ln61_1_fu_780_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln52_reg_1755 == 1'd0))) begin
        m_axi_gmem_ARADDR = sext_ln26_cast_reg_1750;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln52_reg_1755 == 1'd0))) begin
        m_axi_gmem_ARADDR = sext_ln61_fu_745_p1;
    end else begin
        m_axi_gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln52_reg_1755 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001) & (icmp_ln52_reg_1755 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001) & (icmp_ln52_reg_1755 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001) & (icmp_ln52_reg_1755 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001) & (icmp_ln52_reg_1755 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001) & (icmp_ln52_reg_1755 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) 
    & (1'b0 == ap_block_pp0_stage13_11001) & (icmp_ln52_reg_1755 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001) & (icmp_ln52_reg_1755 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001) & (icmp_ln52_reg_1755 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001) & (icmp_ln52_reg_1755 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln52_reg_1755 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln52_reg_1755 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln52_reg_1755 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & 
    (icmp_ln52_reg_1755 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln52_reg_1755 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln52_reg_1755 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln52_reg_1755 == 1'd0)))) begin
        m_axi_gmem_ARVALID = 1'b1;
    end else begin
        m_axi_gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001))) begin
        m_axi_gmem_AWVALID = 1'b1;
    end else begin
        m_axi_gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        m_axi_gmem_BREADY = 1'b1;
    end else begin
        m_axi_gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001)) | ((ap_enable_reg_pp0_iter4 == 
    1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)))) begin
        m_axi_gmem_RREADY = 1'b1;
    end else begin
        m_axi_gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001))) begin
        m_axi_gmem_WVALID = 1'b1;
    end else begin
        m_axi_gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to10 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if (((1'b1 == ap_condition_exit_pp0_iter9_stage7) & (ap_idle_pp0_0to8 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln52_fu_621_p2 = (indvar_flatten397_fu_158 + 19'd1);

assign add_ln57_cast_fu_701_p1 = add_ln57_fu_695_p2;

assign add_ln57_fu_695_p2 = (zext_ln54_2_fu_691_p1 + empty_fu_685_p2);

assign add_ln61_12_fu_1434_p2 = (zext_ln61_39_fu_1431_p1 + zext_ln61_37_fu_1428_p1);

assign add_ln61_1_fu_796_p2 = (empty_36_reg_1775 + 64'd2);

assign add_ln61_2_fu_875_p2 = (empty_37_reg_1847 + 64'd1);

assign add_ln61_3_fu_910_p2 = (empty_37_reg_1847 + 64'd2);

assign add_ln61_4_fu_989_p2 = (empty_38_reg_1919 + 64'd1);

assign add_ln61_5_fu_1024_p2 = (empty_38_reg_1919 + 64'd2);

assign add_ln61_8_fu_1285_p2 = (zext_ln61_35_fu_1282_p1 + zext_ln61_34_fu_1279_p1);

assign add_ln61_fu_761_p2 = (empty_36_reg_1775 + 64'd1);

assign add_ln65_1_fu_1501_p2 = (zext_ln65_2_fu_1497_p1 + add_ln65_2_fu_1486_p2);

assign add_ln65_2_fu_1486_p2 = (zext_ln54_fu_1480_p1 + output_r);

assign add_ln65_3_fu_1491_p2 = (zext_ln54_1_fu_1483_p1 + 11'd641);

assign add_ln65_fu_724_p2 = (select_ln31_fu_639_p3 + 10'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_block_state91_pp0_stage0_iter5)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state19_io)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_block_state91_pp0_stage0_iter5)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state19_io)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_11001 = (((m_axi_gmem_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state83_pp0_stage10_iter4)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state11_io)));
end

always @ (*) begin
    ap_block_pp0_stage10_subdone = (((m_axi_gmem_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state83_pp0_stage10_iter4)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state11_io)));
end

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_01001 = ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state84_pp0_stage11_iter4));
end

always @ (*) begin
    ap_block_pp0_stage11_11001 = (((m_axi_gmem_WREADY == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state84_pp0_stage11_iter4)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state12_io)));
end

always @ (*) begin
    ap_block_pp0_stage11_subdone = (((m_axi_gmem_WREADY == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state84_pp0_stage11_iter4)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state12_io)));
end

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage12_11001 = (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state85_pp0_stage12_iter4)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state13_io)));
end

always @ (*) begin
    ap_block_pp0_stage12_subdone = (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state85_pp0_stage12_iter4)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state13_io)));
end

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage13_11001 = (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state86_pp0_stage13_iter4)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state14_io)));
end

always @ (*) begin
    ap_block_pp0_stage13_subdone = (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state86_pp0_stage13_iter4)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state14_io)));
end

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage14_11001 = (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state87_pp0_stage14_iter4)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state15_io)));
end

always @ (*) begin
    ap_block_pp0_stage14_subdone = (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state87_pp0_stage14_iter4)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state15_io)));
end

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage15_11001 = (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state88_pp0_stage15_iter4)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state16_io)));
end

always @ (*) begin
    ap_block_pp0_stage15_subdone = (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state88_pp0_stage15_iter4)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state16_io)));
end

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage16_11001 = (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state89_pp0_stage16_iter4)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state17_io)));
end

always @ (*) begin
    ap_block_pp0_stage16_subdone = (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state89_pp0_stage16_iter4)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state17_io)));
end

assign ap_block_pp0_stage17 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage17_11001 = (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state90_pp0_stage17_iter4)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state18_io)));
end

always @ (*) begin
    ap_block_pp0_stage17_subdone = (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state90_pp0_stage17_iter4)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state18_io)));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem_ARREADY == 1'b0)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state74_pp0_stage1_iter4)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem_ARREADY == 1'b0)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state74_pp0_stage1_iter4)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state75_pp0_stage2_iter4)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_io)));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state75_pp0_stage2_iter4)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_io)));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001 = (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state76_pp0_stage3_iter4)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state4_io)));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state76_pp0_stage3_iter4)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state4_io)));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_11001 = (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state77_pp0_stage4_iter4)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state5_io)));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state77_pp0_stage4_iter4)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state5_io)));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_11001 = (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state78_pp0_stage5_iter4)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state6_io)));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state78_pp0_stage5_iter4)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state6_io)));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_11001 = (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state79_pp0_stage6_iter4)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state7_io)));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state79_pp0_stage6_iter4)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state7_io)));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_11001 = (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_block_state188_pp0_stage7_iter10)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state80_pp0_stage7_iter4)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state8_io)));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_block_state188_pp0_stage7_iter10)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state80_pp0_stage7_iter4)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state8_io)));
end

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_11001 = (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state81_pp0_stage8_iter4)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state9_io)));
end

always @ (*) begin
    ap_block_pp0_stage8_subdone = (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state81_pp0_stage8_iter4)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state9_io)));
end

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_11001 = (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state82_pp0_stage9_iter4)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state10_io)));
end

always @ (*) begin
    ap_block_pp0_stage9_subdone = (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state82_pp0_stage9_iter4)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state10_io)));
end

always @ (*) begin
    ap_block_state10_io = ((icmp_ln52_reg_1755 == 1'd0) & (m_axi_gmem_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state11_io = ((icmp_ln52_reg_1755 == 1'd0) & (m_axi_gmem_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state12_io = ((icmp_ln52_reg_1755 == 1'd0) & (m_axi_gmem_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state13_io = ((icmp_ln52_reg_1755 == 1'd0) & (m_axi_gmem_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state14_io = ((icmp_ln52_reg_1755 == 1'd0) & (m_axi_gmem_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state15_io = ((icmp_ln52_reg_1755 == 1'd0) & (m_axi_gmem_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state16_io = ((icmp_ln52_reg_1755 == 1'd0) & (m_axi_gmem_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state17_io = ((icmp_ln52_reg_1755 == 1'd0) & (m_axi_gmem_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state188_pp0_stage7_iter10 = (m_axi_gmem_BVALID == 1'b0);
end

always @ (*) begin
    ap_block_state18_io = ((icmp_ln52_reg_1755 == 1'd0) & (m_axi_gmem_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state19_io = ((icmp_ln52_reg_1755 == 1'd0) & (m_axi_gmem_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state3_io = ((icmp_ln52_reg_1755 == 1'd0) & (m_axi_gmem_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state4_io = ((icmp_ln52_reg_1755 == 1'd0) & (m_axi_gmem_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state5_io = ((icmp_ln52_reg_1755 == 1'd0) & (m_axi_gmem_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state6_io = ((icmp_ln52_reg_1755 == 1'd0) & (m_axi_gmem_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state74_pp0_stage1_iter4 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state75_pp0_stage2_iter4 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state76_pp0_stage3_iter4 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state77_pp0_stage4_iter4 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state78_pp0_stage5_iter4 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state79_pp0_stage6_iter4 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state7_io = ((icmp_ln52_reg_1755 == 1'd0) & (m_axi_gmem_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state80_pp0_stage7_iter4 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state81_pp0_stage8_iter4 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state82_pp0_stage9_iter4 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state83_pp0_stage10_iter4 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state84_pp0_stage11_iter4 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state85_pp0_stage12_iter4 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state86_pp0_stage13_iter4 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state87_pp0_stage14_iter4 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state88_pp0_stage15_iter4 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state89_pp0_stage16_iter4 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state8_io = ((icmp_ln52_reg_1755 == 1'd0) & (m_axi_gmem_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state90_pp0_stage17_iter4 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state91_pp0_stage0_iter5 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state9_io = ((icmp_ln52_reg_1755 == 1'd0) & (m_axi_gmem_ARREADY == 1'b0));
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage17;

assign ap_ready = ap_ready_sig;

assign empty_36_fu_705_p2 = (add_ln57_cast_fu_701_p1 + image_gray);

assign empty_37_fu_840_p2 = (tmp7_cast_fu_836_p1 + image_gray);

assign empty_38_fu_954_p2 = (tmp8_cast_fu_950_p1 + image_gray);

assign empty_fu_685_p2 = (p_shl_fu_669_p1 + p_shl85_fu_681_p1);

assign grp_fu_1460_p1 = grp_fu_1460_p10;

assign grp_fu_1460_p10 = select_ln64_fu_1450_p3;

assign grp_fu_1579_p0 = grp_fu_1579_p00;

assign grp_fu_1579_p00 = trunc_ln61_2_fu_1086_p1;

assign grp_fu_1579_p1 = grp_fu_1579_p10;

assign grp_fu_1579_p10 = trunc_ln61_1_reg_1996;

assign grp_fu_1579_p2 = grp_fu_1579_p20;

assign grp_fu_1579_p20 = mul_ln61_3_fu_1129_p2;

assign grp_fu_1587_p0 = grp_fu_1587_p00;

assign grp_fu_1587_p00 = trunc_ln61_16_fu_1207_p1;

assign grp_fu_1587_p1 = grp_fu_1587_p10;

assign grp_fu_1587_p10 = trunc_ln61_14_reg_2066;

assign grp_fu_1587_p2 = grp_fu_1587_p20;

assign grp_fu_1587_p20 = mul_ln61_2_reg_2061;

assign grp_fu_1596_p0 = grp_fu_1596_p00;

assign grp_fu_1596_p00 = trunc_ln61_25_fu_1298_p1;

assign grp_fu_1596_p1 = grp_fu_1596_p10;

assign grp_fu_1596_p10 = trunc_ln61_23_reg_2116;

assign grp_fu_1596_p2 = grp_fu_1596_p20;

assign grp_fu_1596_p20 = mul_ln61_6_reg_2111;

assign grp_fu_1604_p0 = grp_fu_1604_p00;

assign grp_fu_1604_p00 = trunc_ln61_34_fu_1405_p1;

assign grp_fu_1604_p1 = grp_fu_1604_p10;

assign grp_fu_1604_p10 = trunc_ln61_33_reg_2196;

assign grp_fu_1604_p2 = grp_fu_1604_p20;

assign grp_fu_1604_p20 = mul_ln61_reg_2191;

assign grp_fu_1613_p0 = grp_fu_1613_p00;

assign grp_fu_1613_p00 = trunc_ln61_28_reg_2156;

assign grp_fu_1613_p1 = grp_fu_1613_p10;

assign grp_fu_1613_p10 = trunc_ln61_27_reg_2146;

assign grp_fu_1613_p2 = grp_fu_1613_p20;

assign grp_fu_1613_p20 = grp_fu_1604_p3;

assign icmp_ln52_fu_615_p2 = ((indvar_flatten397_fu_158 == 19'd304964) ? 1'b1 : 1'b0);

assign icmp_ln54_fu_633_p2 = ((c_fu_150 == 10'd638) ? 1'b1 : 1'b0);

assign icmp_ln64_fu_1474_p2 = ((sum_fu_1444_p2 < p2y_fu_1466_p3) ? 1'b1 : 1'b0);

assign indvars_iv_next25_i_dup443_fu_647_p2 = (r_fu_154 + 9'd1);

assign lshr_ln61_10_fu_1270_p2 = gmem_addr_19_read_reg_2101 >> zext_ln61_14_fu_1266_p1;

assign lshr_ln61_11_fu_1294_p2 = gmem_addr_28_read_reg_2121 >> p_cast85_cast_reg_1680;

assign lshr_ln61_12_fu_1317_p2 = gmem_addr_20_read_reg_2141 >> zext_ln61_16_fu_1313_p1;

assign lshr_ln61_13_fu_1326_p2 = gmem_addr_29_read_reg_2151 >> p_cast86_cast_reg_1675;

assign lshr_ln61_14_fu_1348_p2 = gmem_addr_21_read_reg_2161 >> zext_ln61_19_fu_1344_p1;

assign lshr_ln61_15_fu_1360_p2 = gmem_addr_30_read_reg_2176 >> p_cast87_cast_reg_1670;

assign lshr_ln61_16_fu_1389_p2 = gmem_addr_22_read_reg_2186 >> zext_ln61_22_fu_1385_p1;

assign lshr_ln61_17_fu_1401_p2 = gmem_addr_31_read_reg_2201 >> zext_ln52_cast_reg_1665;

assign lshr_ln61_1_fu_1082_p2 = gmem_addr_read_reg_2001 >> p_cast80_cast_reg_1705;

assign lshr_ln61_2_fu_1105_p2 = gmem_addr_15_read_reg_2016 >> zext_ln61_3_fu_1101_p1;

assign lshr_ln61_3_fu_1117_p2 = gmem_addr_24_read_reg_2026 >> p_cast81_cast_reg_1700;

assign lshr_ln61_4_fu_1150_p2 = gmem_addr_16_read_reg_2031 >> zext_ln61_6_fu_1146_p1;

assign lshr_ln61_5_fu_1162_p2 = gmem_addr_25_read_reg_2046 >> p_cast82_cast_reg_1695;

assign lshr_ln61_6_fu_1191_p2 = gmem_addr_17_read_reg_2056 >> zext_ln61_8_fu_1187_p1;

assign lshr_ln61_7_fu_1203_p2 = gmem_addr_26_read_reg_2071 >> p_cast83_cast_reg_1690;

assign lshr_ln61_8_fu_1226_p2 = gmem_addr_18_read_reg_2086 >> zext_ln61_11_fu_1222_p1;

assign lshr_ln61_9_fu_1238_p2 = gmem_addr_27_read_reg_2096 >> p_cast84_cast_reg_1685;

assign lshr_ln61_fu_1070_p2 = gmem_addr_14_read_reg_1991 >> zext_ln61_fu_1066_p1;

assign m_axi_gmem_ARBURST = 2'd0;

assign m_axi_gmem_ARCACHE = 4'd0;

assign m_axi_gmem_ARID = 1'd0;

assign m_axi_gmem_ARLEN = 64'd1;

assign m_axi_gmem_ARLOCK = 2'd0;

assign m_axi_gmem_ARPROT = 3'd0;

assign m_axi_gmem_ARQOS = 4'd0;

assign m_axi_gmem_ARREGION = 4'd0;

assign m_axi_gmem_ARSIZE = 3'd0;

assign m_axi_gmem_ARUSER = 1'd0;

assign m_axi_gmem_AWADDR = sext_ln65_fu_1569_p1;

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLEN = 64'd1;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_WDATA = shl_ln65_2_reg_2266;

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WSTRB = shl_ln65_reg_2256;

assign m_axi_gmem_WUSER = 1'd0;

assign mul_ln61_2_fu_1174_p0 = mul_ln61_2_fu_1174_p00;

assign mul_ln61_2_fu_1174_p00 = trunc_ln61_11_fu_1166_p1;

assign mul_ln61_2_fu_1174_p1 = mul_ln61_2_fu_1174_p10;

assign mul_ln61_2_fu_1174_p10 = trunc_ln61_10_reg_2041;

assign mul_ln61_3_fu_1129_p0 = mul_ln61_3_fu_1129_p00;

assign mul_ln61_3_fu_1129_p00 = trunc_ln61_7_fu_1121_p1;

assign mul_ln61_3_fu_1129_p1 = mul_ln61_3_fu_1129_p10;

assign mul_ln61_3_fu_1129_p10 = trunc_ln61_5_reg_2021;

assign mul_ln61_6_fu_1253_p0 = mul_ln61_6_fu_1253_p00;

assign mul_ln61_6_fu_1253_p00 = trunc_ln61_20_fu_1242_p1;

assign mul_ln61_6_fu_1253_p1 = mul_ln61_6_fu_1253_p10;

assign mul_ln61_6_fu_1253_p10 = trunc_ln61_19_reg_2091;

assign mul_ln61_fu_1372_p0 = mul_ln61_fu_1372_p00;

assign mul_ln61_fu_1372_p00 = trunc_ln61_31_fu_1364_p1;

assign mul_ln61_fu_1372_p1 = mul_ln61_fu_1372_p10;

assign mul_ln61_fu_1372_p10 = trunc_ln61_30_reg_2171;

assign p2y_fu_1466_p3 = {{select_ln64_fu_1450_p3}, {8'd0}};

assign p_cast45_cast_cast_fu_585_p1 = $signed(p_cast45_cast);

assign p_cast47_cast_cast_fu_581_p1 = $signed(p_cast47_cast);

assign p_cast49_cast_cast_fu_577_p1 = $signed(p_cast49_cast);

assign p_cast51_cast_cast_fu_573_p1 = $signed(p_cast51_cast);

assign p_cast53_cast_cast_fu_569_p1 = $signed(p_cast53_cast);

assign p_cast55_cast_cast_fu_565_p1 = $signed(p_cast55_cast);

assign p_cast57_cast_cast_fu_561_p1 = $signed(p_cast57_cast);

assign p_cast80_cast_fu_557_p1 = p_cast80;

assign p_cast81_cast_fu_553_p1 = p_cast81;

assign p_cast82_cast_fu_549_p1 = p_cast82;

assign p_cast83_cast_fu_545_p1 = p_cast83;

assign p_cast84_cast_fu_541_p1 = p_cast84;

assign p_cast85_cast_fu_537_p1 = p_cast85;

assign p_cast86_cast_fu_533_p1 = p_cast86;

assign p_cast87_cast_fu_529_p1 = p_cast87;

assign p_cast_cast_cast_fu_589_p1 = $signed(p_cast_cast);

assign p_shl85_fu_681_p1 = tmp_2_fu_673_p3;

assign p_shl_fu_669_p1 = tmp_fu_661_p3;

assign pixel_fu_1540_p3 = ((xor_ln64_fu_1531_p2[0:0] == 1'b1) ? 8'd255 : trunc_ln64_fu_1536_p1);

assign select_ln31_fu_639_p3 = ((icmp_ln54_fu_633_p2[0:0] == 1'b1) ? 10'd0 : c_fu_150);

assign select_ln52_fu_653_p3 = ((icmp_ln54_fu_633_p2[0:0] == 1'b1) ? indvars_iv_next25_i_dup443_fu_647_p2 : r_fu_154);

assign select_ln64_fu_1450_p3 = ((icmp_ln49[0:0] == 1'b1) ? 12'd1 : normal_factor_2_reload);

assign sext_ln26_cast_fu_593_p1 = $signed(sext_ln26);

assign sext_ln61_1_fu_780_p1 = $signed(trunc_ln61_3_reg_1803);

assign sext_ln61_2_fu_815_p1 = $signed(trunc_ln61_6_reg_1825);

assign sext_ln61_3_fu_859_p1 = $signed(trunc_ln61_9_reg_1853);

assign sext_ln61_4_fu_894_p1 = $signed(trunc_ln61_12_reg_1875);

assign sext_ln61_5_fu_929_p1 = $signed(trunc_ln61_15_reg_1897);

assign sext_ln61_6_fu_973_p1 = $signed(trunc_ln61_18_reg_1925);

assign sext_ln61_7_fu_1008_p1 = $signed(trunc_ln61_21_reg_1947);

assign sext_ln61_8_fu_1043_p1 = $signed(trunc_ln61_24_reg_1969);

assign sext_ln61_fu_745_p1 = $signed(trunc_ln61_s_reg_1781);

assign sext_ln65_fu_1569_p1 = $signed(trunc_ln65_1_reg_2261);

assign shl_ln2_fu_1059_p3 = {{trunc_ln61_reg_1786_pp0_iter4_reg}, {3'd0}};

assign shl_ln61_1_fu_1094_p3 = {{trunc_ln61_4_reg_1808_pp0_iter4_reg}, {3'd0}};

assign shl_ln61_2_fu_1139_p3 = {{trunc_ln61_8_reg_1830_pp0_iter4_reg}, {3'd0}};

assign shl_ln61_3_fu_1180_p3 = {{trunc_ln61_13_reg_1858_pp0_iter4_reg}, {3'd0}};

assign shl_ln61_4_fu_1215_p3 = {{trunc_ln61_17_reg_1880_pp0_iter4_reg}, {3'd0}};

assign shl_ln61_5_fu_1259_p3 = {{trunc_ln61_22_reg_1902_pp0_iter4_reg}, {3'd0}};

assign shl_ln61_6_fu_1306_p3 = {{trunc_ln61_26_reg_1930_pp0_iter4_reg}, {3'd0}};

assign shl_ln61_7_fu_1337_p3 = {{trunc_ln61_29_reg_1952_pp0_iter4_reg}, {3'd0}};

assign shl_ln61_8_fu_1378_p3 = {{trunc_ln61_32_reg_1974_pp0_iter4_reg}, {3'd0}};

assign shl_ln65_1_fu_1552_p3 = {{trunc_ln65_reg_2251}, {3'd0}};

assign shl_ln65_2_fu_1563_p2 = zext_ln65_fu_1548_p1 << zext_ln65_3_fu_1559_p1;

assign shl_ln65_fu_1515_p2 = 64'd1 << zext_ln65_1_fu_1511_p1;

assign sum_fu_1444_p2 = (zext_ln61_40_fu_1440_p1 + zext_ln61_36_fu_1425_p1);

assign tmp7_cast_fu_836_p1 = tmp7_fu_831_p2;

assign tmp7_fu_831_p2 = (add_ln57_reg_1769 + 19'd640);

assign tmp8_cast_fu_950_p1 = tmp8_fu_945_p2;

assign tmp8_fu_945_p2 = (add_ln57_reg_1769 + 19'd1280);

assign tmp_2_fu_673_p3 = {{select_ln52_fu_653_p3}, {7'd0}};

assign tmp_fu_661_p3 = {{select_ln52_fu_653_p3}, {9'd0}};

assign trunc_ln61_10_fu_1155_p1 = lshr_ln61_4_fu_1150_p2[7:0];

assign trunc_ln61_11_fu_1166_p1 = lshr_ln61_5_fu_1162_p2[7:0];

assign trunc_ln61_13_fu_855_p1 = empty_37_fu_840_p2[5:0];

assign trunc_ln61_14_fu_1196_p1 = lshr_ln61_6_fu_1191_p2[7:0];

assign trunc_ln61_16_fu_1207_p1 = lshr_ln61_7_fu_1203_p2[7:0];

assign trunc_ln61_17_fu_890_p1 = add_ln61_2_fu_875_p2[5:0];

assign trunc_ln61_19_fu_1231_p1 = lshr_ln61_8_fu_1226_p2[7:0];

assign trunc_ln61_1_fu_1075_p1 = lshr_ln61_fu_1070_p2[7:0];

assign trunc_ln61_20_fu_1242_p1 = lshr_ln61_9_fu_1238_p2[7:0];

assign trunc_ln61_22_fu_925_p1 = add_ln61_3_fu_910_p2[5:0];

assign trunc_ln61_23_fu_1275_p1 = lshr_ln61_10_fu_1270_p2[7:0];

assign trunc_ln61_25_fu_1298_p1 = lshr_ln61_11_fu_1294_p2[7:0];

assign trunc_ln61_26_fu_969_p1 = empty_38_fu_954_p2[5:0];

assign trunc_ln61_27_fu_1322_p1 = lshr_ln61_12_fu_1317_p2[7:0];

assign trunc_ln61_28_fu_1330_p1 = lshr_ln61_13_fu_1326_p2[7:0];

assign trunc_ln61_29_fu_1004_p1 = add_ln61_4_fu_989_p2[5:0];

assign trunc_ln61_2_fu_1086_p1 = lshr_ln61_1_fu_1082_p2[7:0];

assign trunc_ln61_30_fu_1353_p1 = lshr_ln61_14_fu_1348_p2[7:0];

assign trunc_ln61_31_fu_1364_p1 = lshr_ln61_15_fu_1360_p2[7:0];

assign trunc_ln61_32_fu_1039_p1 = add_ln61_5_fu_1024_p2[5:0];

assign trunc_ln61_33_fu_1394_p1 = lshr_ln61_16_fu_1389_p2[7:0];

assign trunc_ln61_34_fu_1405_p1 = lshr_ln61_17_fu_1401_p2[7:0];

assign trunc_ln61_4_fu_776_p1 = add_ln61_fu_761_p2[5:0];

assign trunc_ln61_5_fu_1110_p1 = lshr_ln61_2_fu_1105_p2[7:0];

assign trunc_ln61_7_fu_1121_p1 = lshr_ln61_3_fu_1117_p2[7:0];

assign trunc_ln61_8_fu_811_p1 = add_ln61_1_fu_796_p2[5:0];

assign trunc_ln61_fu_720_p1 = empty_36_fu_705_p2[5:0];

assign trunc_ln64_fu_1536_p1 = grp_fu_1460_p2[7:0];

assign trunc_ln65_fu_1507_p1 = add_ln65_1_fu_1501_p2[5:0];

assign xor_ln64_fu_1531_p2 = (icmp_ln64_reg_2246_pp0_iter6_reg ^ 1'd1);

assign zext_ln52_cast_fu_525_p1 = zext_ln52;

assign zext_ln54_1_fu_1483_p1 = select_ln31_reg_1759_pp0_iter5_reg;

assign zext_ln54_2_fu_691_p1 = select_ln31_fu_639_p3;

assign zext_ln54_fu_1480_p1 = empty_reg_1764_pp0_iter5_reg;

assign zext_ln61_11_fu_1222_p1 = shl_ln61_4_fu_1215_p3;

assign zext_ln61_14_fu_1266_p1 = shl_ln61_5_fu_1259_p3;

assign zext_ln61_16_fu_1313_p1 = shl_ln61_6_fu_1306_p3;

assign zext_ln61_19_fu_1344_p1 = shl_ln61_7_fu_1337_p3;

assign zext_ln61_22_fu_1385_p1 = shl_ln61_8_fu_1378_p3;

assign zext_ln61_34_fu_1279_p1 = add_ln61_6_reg_2051;

assign zext_ln61_35_fu_1282_p1 = grp_fu_1587_p3;

assign zext_ln61_36_fu_1425_p1 = add_ln61_8_reg_2126;

assign zext_ln61_37_fu_1428_p1 = add_ln61_9_reg_2181;

assign zext_ln61_39_fu_1431_p1 = grp_fu_1613_p3;

assign zext_ln61_3_fu_1101_p1 = shl_ln61_1_fu_1094_p3;

assign zext_ln61_40_fu_1440_p1 = add_ln61_12_fu_1434_p2;

assign zext_ln61_6_fu_1146_p1 = shl_ln61_2_fu_1139_p3;

assign zext_ln61_8_fu_1187_p1 = shl_ln61_3_fu_1180_p3;

assign zext_ln61_fu_1066_p1 = shl_ln2_fu_1059_p3;

assign zext_ln65_1_fu_1511_p1 = trunc_ln65_fu_1507_p1;

assign zext_ln65_2_fu_1497_p1 = add_ln65_3_fu_1491_p2;

assign zext_ln65_3_fu_1559_p1 = shl_ln65_1_fu_1552_p3;

assign zext_ln65_fu_1548_p1 = pixel_fu_1540_p3;

always @ (posedge ap_clk) begin
    zext_ln52_cast_reg_1665[511:9] <= 503'b
    p_cast87_cast_reg_1670[511:9] <= 503'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    p_cast86_cast_reg_1675[511:9] <= 503'b
    p_cast85_cast_reg_1680[511:9] <= 503'b
    p_cast84_cast_reg_1685[511:9] <= 503'b
    p_cast83_cast_reg_1690[511:9] <= 503'b
    p_cast82_cast_reg_1695[511:9] <= 503'b
    p_cast81_cast_reg_1700[511:9] <= 503'b
    p_cast80_cast_reg_1705[511:9] <= 503'b
    empty_reg_1764[6:0] <= 7'b0000000;
    empty_reg_1764_pp0_iter1_reg[6:0] <= 7'b0000000;
    empty_reg_1764_pp0_iter2_reg[6:0] <= 7'b0000000;
    empty_reg_1764_pp0_iter3_reg[6:0] <= 7'b0000000;
    empty_reg_1764_pp0_iter4_reg[6:0] <= 7'b0000000;
    empty_reg_1764_pp0_iter5_reg[6:0] <= 7'b0000000;
end

endmodule //edgedetect_edgedetect_Pipeline_VITIS_LOOP_52_3_VITIS_LOOP_54_4
