// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module edgedetect_edgedetect_Pipeline_VITIS_LOOP_183_1_VITIS_LOOP_185_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        sext_ln183,
        image_gray_address0,
        image_gray_ce0,
        image_gray_q0,
        image_gray_1_address0,
        image_gray_1_ce0,
        image_gray_1_q0,
        image_gray_2_address0,
        image_gray_2_ce0,
        image_gray_2_q0,
        image_gray_3_address0,
        image_gray_3_ce0,
        image_gray_3_q0,
        image_gray_4_address0,
        image_gray_4_ce0,
        image_gray_4_q0,
        image_gray_5_address0,
        image_gray_5_ce0,
        image_gray_5_q0,
        temp_buf_address0,
        temp_buf_ce0,
        temp_buf_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [511:0] m_axi_gmem_WDATA;
output  [63:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [511:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [8:0] m_axi_gmem_RFIFONUM;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
input  [57:0] sext_ln183;
output  [15:0] image_gray_address0;
output   image_gray_ce0;
input  [7:0] image_gray_q0;
output  [15:0] image_gray_1_address0;
output   image_gray_1_ce0;
input  [7:0] image_gray_1_q0;
output  [15:0] image_gray_2_address0;
output   image_gray_2_ce0;
input  [7:0] image_gray_2_q0;
output  [15:0] image_gray_3_address0;
output   image_gray_3_ce0;
input  [7:0] image_gray_3_q0;
output  [15:0] image_gray_4_address0;
output   image_gray_4_ce0;
input  [7:0] image_gray_4_q0;
output  [15:0] image_gray_5_address0;
output   image_gray_5_ce0;
input  [7:0] image_gray_5_q0;
output  [18:0] temp_buf_address0;
output   temp_buf_ce0;
input  [7:0] temp_buf_q0;

reg ap_idle;
reg m_axi_gmem_WVALID;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_idle_pp0;
reg   [0:0] icmp_ln191_1_reg_631;
reg   [0:0] icmp_ln191_1_reg_631_pp0_iter24_reg;
reg    ap_block_state26_io;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln183_fu_272_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem_blk_n_W;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln185_fu_290_p2;
reg   [0:0] icmp_ln185_reg_619;
reg   [0:0] icmp_ln185_reg_619_pp0_iter2_reg;
reg   [0:0] icmp_ln185_reg_619_pp0_iter3_reg;
reg   [0:0] icmp_ln185_reg_619_pp0_iter4_reg;
reg   [0:0] icmp_ln185_reg_619_pp0_iter5_reg;
reg   [0:0] icmp_ln185_reg_619_pp0_iter6_reg;
reg   [0:0] icmp_ln185_reg_619_pp0_iter7_reg;
reg   [0:0] icmp_ln185_reg_619_pp0_iter8_reg;
reg   [0:0] icmp_ln185_reg_619_pp0_iter9_reg;
reg   [0:0] icmp_ln185_reg_619_pp0_iter10_reg;
reg   [0:0] icmp_ln185_reg_619_pp0_iter11_reg;
reg   [0:0] icmp_ln185_reg_619_pp0_iter12_reg;
reg   [0:0] icmp_ln185_reg_619_pp0_iter13_reg;
reg   [0:0] icmp_ln185_reg_619_pp0_iter14_reg;
reg   [0:0] icmp_ln185_reg_619_pp0_iter15_reg;
reg   [0:0] icmp_ln185_reg_619_pp0_iter16_reg;
reg   [0:0] icmp_ln185_reg_619_pp0_iter17_reg;
reg   [0:0] icmp_ln185_reg_619_pp0_iter18_reg;
reg   [0:0] icmp_ln185_reg_619_pp0_iter19_reg;
reg   [0:0] icmp_ln185_reg_619_pp0_iter20_reg;
reg   [0:0] icmp_ln185_reg_619_pp0_iter21_reg;
reg   [0:0] icmp_ln185_reg_619_pp0_iter22_reg;
reg   [0:0] icmp_ln185_reg_619_pp0_iter23_reg;
wire   [18:0] add_ln188_fu_352_p2;
reg   [18:0] add_ln188_reg_624;
reg   [18:0] add_ln188_reg_624_pp0_iter2_reg;
reg   [18:0] add_ln188_reg_624_pp0_iter3_reg;
reg   [18:0] add_ln188_reg_624_pp0_iter4_reg;
reg   [18:0] add_ln188_reg_624_pp0_iter5_reg;
reg   [18:0] add_ln188_reg_624_pp0_iter6_reg;
reg   [18:0] add_ln188_reg_624_pp0_iter7_reg;
reg   [18:0] add_ln188_reg_624_pp0_iter8_reg;
reg   [18:0] add_ln188_reg_624_pp0_iter9_reg;
reg   [18:0] add_ln188_reg_624_pp0_iter10_reg;
reg   [18:0] add_ln188_reg_624_pp0_iter11_reg;
reg   [18:0] add_ln188_reg_624_pp0_iter12_reg;
reg   [18:0] add_ln188_reg_624_pp0_iter13_reg;
reg   [18:0] add_ln188_reg_624_pp0_iter14_reg;
reg   [18:0] add_ln188_reg_624_pp0_iter15_reg;
reg   [18:0] add_ln188_reg_624_pp0_iter16_reg;
reg   [18:0] add_ln188_reg_624_pp0_iter17_reg;
reg   [18:0] add_ln188_reg_624_pp0_iter18_reg;
reg   [18:0] add_ln188_reg_624_pp0_iter19_reg;
reg   [18:0] add_ln188_reg_624_pp0_iter20_reg;
reg   [18:0] add_ln188_reg_624_pp0_iter21_reg;
wire   [0:0] icmp_ln191_1_fu_368_p2;
reg   [0:0] icmp_ln191_1_reg_631_pp0_iter2_reg;
reg   [0:0] icmp_ln191_1_reg_631_pp0_iter3_reg;
reg   [0:0] icmp_ln191_1_reg_631_pp0_iter4_reg;
reg   [0:0] icmp_ln191_1_reg_631_pp0_iter5_reg;
reg   [0:0] icmp_ln191_1_reg_631_pp0_iter6_reg;
reg   [0:0] icmp_ln191_1_reg_631_pp0_iter7_reg;
reg   [0:0] icmp_ln191_1_reg_631_pp0_iter8_reg;
reg   [0:0] icmp_ln191_1_reg_631_pp0_iter9_reg;
reg   [0:0] icmp_ln191_1_reg_631_pp0_iter10_reg;
reg   [0:0] icmp_ln191_1_reg_631_pp0_iter11_reg;
reg   [0:0] icmp_ln191_1_reg_631_pp0_iter12_reg;
reg   [0:0] icmp_ln191_1_reg_631_pp0_iter13_reg;
reg   [0:0] icmp_ln191_1_reg_631_pp0_iter14_reg;
reg   [0:0] icmp_ln191_1_reg_631_pp0_iter15_reg;
reg   [0:0] icmp_ln191_1_reg_631_pp0_iter16_reg;
reg   [0:0] icmp_ln191_1_reg_631_pp0_iter17_reg;
reg   [0:0] icmp_ln191_1_reg_631_pp0_iter18_reg;
reg   [0:0] icmp_ln191_1_reg_631_pp0_iter19_reg;
reg   [0:0] icmp_ln191_1_reg_631_pp0_iter20_reg;
reg   [0:0] icmp_ln191_1_reg_631_pp0_iter21_reg;
reg   [0:0] icmp_ln191_1_reg_631_pp0_iter22_reg;
reg   [0:0] icmp_ln191_1_reg_631_pp0_iter23_reg;
reg   [7:0] image_gray_load_reg_666;
reg   [7:0] image_gray_load_reg_666_pp0_iter4_reg;
reg   [7:0] image_gray_load_reg_666_pp0_iter5_reg;
reg   [7:0] image_gray_load_reg_666_pp0_iter6_reg;
reg   [7:0] image_gray_load_reg_666_pp0_iter7_reg;
reg   [7:0] image_gray_load_reg_666_pp0_iter8_reg;
reg   [7:0] image_gray_load_reg_666_pp0_iter9_reg;
reg   [7:0] image_gray_load_reg_666_pp0_iter10_reg;
reg   [7:0] image_gray_load_reg_666_pp0_iter11_reg;
reg   [7:0] image_gray_load_reg_666_pp0_iter12_reg;
reg   [7:0] image_gray_load_reg_666_pp0_iter13_reg;
reg   [7:0] image_gray_load_reg_666_pp0_iter14_reg;
reg   [7:0] image_gray_load_reg_666_pp0_iter15_reg;
reg   [7:0] image_gray_load_reg_666_pp0_iter16_reg;
reg   [7:0] image_gray_load_reg_666_pp0_iter17_reg;
reg   [7:0] image_gray_load_reg_666_pp0_iter18_reg;
reg   [7:0] image_gray_load_reg_666_pp0_iter19_reg;
reg   [7:0] image_gray_load_reg_666_pp0_iter20_reg;
reg   [7:0] image_gray_load_reg_666_pp0_iter21_reg;
reg   [7:0] image_gray_load_reg_666_pp0_iter22_reg;
reg   [7:0] image_gray_1_load_reg_671;
reg   [7:0] image_gray_1_load_reg_671_pp0_iter4_reg;
reg   [7:0] image_gray_1_load_reg_671_pp0_iter5_reg;
reg   [7:0] image_gray_1_load_reg_671_pp0_iter6_reg;
reg   [7:0] image_gray_1_load_reg_671_pp0_iter7_reg;
reg   [7:0] image_gray_1_load_reg_671_pp0_iter8_reg;
reg   [7:0] image_gray_1_load_reg_671_pp0_iter9_reg;
reg   [7:0] image_gray_1_load_reg_671_pp0_iter10_reg;
reg   [7:0] image_gray_1_load_reg_671_pp0_iter11_reg;
reg   [7:0] image_gray_1_load_reg_671_pp0_iter12_reg;
reg   [7:0] image_gray_1_load_reg_671_pp0_iter13_reg;
reg   [7:0] image_gray_1_load_reg_671_pp0_iter14_reg;
reg   [7:0] image_gray_1_load_reg_671_pp0_iter15_reg;
reg   [7:0] image_gray_1_load_reg_671_pp0_iter16_reg;
reg   [7:0] image_gray_1_load_reg_671_pp0_iter17_reg;
reg   [7:0] image_gray_1_load_reg_671_pp0_iter18_reg;
reg   [7:0] image_gray_1_load_reg_671_pp0_iter19_reg;
reg   [7:0] image_gray_1_load_reg_671_pp0_iter20_reg;
reg   [7:0] image_gray_1_load_reg_671_pp0_iter21_reg;
reg   [7:0] image_gray_1_load_reg_671_pp0_iter22_reg;
reg   [7:0] image_gray_2_load_reg_676;
reg   [7:0] image_gray_2_load_reg_676_pp0_iter4_reg;
reg   [7:0] image_gray_2_load_reg_676_pp0_iter5_reg;
reg   [7:0] image_gray_2_load_reg_676_pp0_iter6_reg;
reg   [7:0] image_gray_2_load_reg_676_pp0_iter7_reg;
reg   [7:0] image_gray_2_load_reg_676_pp0_iter8_reg;
reg   [7:0] image_gray_2_load_reg_676_pp0_iter9_reg;
reg   [7:0] image_gray_2_load_reg_676_pp0_iter10_reg;
reg   [7:0] image_gray_2_load_reg_676_pp0_iter11_reg;
reg   [7:0] image_gray_2_load_reg_676_pp0_iter12_reg;
reg   [7:0] image_gray_2_load_reg_676_pp0_iter13_reg;
reg   [7:0] image_gray_2_load_reg_676_pp0_iter14_reg;
reg   [7:0] image_gray_2_load_reg_676_pp0_iter15_reg;
reg   [7:0] image_gray_2_load_reg_676_pp0_iter16_reg;
reg   [7:0] image_gray_2_load_reg_676_pp0_iter17_reg;
reg   [7:0] image_gray_2_load_reg_676_pp0_iter18_reg;
reg   [7:0] image_gray_2_load_reg_676_pp0_iter19_reg;
reg   [7:0] image_gray_2_load_reg_676_pp0_iter20_reg;
reg   [7:0] image_gray_2_load_reg_676_pp0_iter21_reg;
reg   [7:0] image_gray_2_load_reg_676_pp0_iter22_reg;
reg   [7:0] image_gray_3_load_reg_681;
reg   [7:0] image_gray_3_load_reg_681_pp0_iter4_reg;
reg   [7:0] image_gray_3_load_reg_681_pp0_iter5_reg;
reg   [7:0] image_gray_3_load_reg_681_pp0_iter6_reg;
reg   [7:0] image_gray_3_load_reg_681_pp0_iter7_reg;
reg   [7:0] image_gray_3_load_reg_681_pp0_iter8_reg;
reg   [7:0] image_gray_3_load_reg_681_pp0_iter9_reg;
reg   [7:0] image_gray_3_load_reg_681_pp0_iter10_reg;
reg   [7:0] image_gray_3_load_reg_681_pp0_iter11_reg;
reg   [7:0] image_gray_3_load_reg_681_pp0_iter12_reg;
reg   [7:0] image_gray_3_load_reg_681_pp0_iter13_reg;
reg   [7:0] image_gray_3_load_reg_681_pp0_iter14_reg;
reg   [7:0] image_gray_3_load_reg_681_pp0_iter15_reg;
reg   [7:0] image_gray_3_load_reg_681_pp0_iter16_reg;
reg   [7:0] image_gray_3_load_reg_681_pp0_iter17_reg;
reg   [7:0] image_gray_3_load_reg_681_pp0_iter18_reg;
reg   [7:0] image_gray_3_load_reg_681_pp0_iter19_reg;
reg   [7:0] image_gray_3_load_reg_681_pp0_iter20_reg;
reg   [7:0] image_gray_3_load_reg_681_pp0_iter21_reg;
reg   [7:0] image_gray_3_load_reg_681_pp0_iter22_reg;
reg   [7:0] image_gray_4_load_reg_686;
reg   [7:0] image_gray_4_load_reg_686_pp0_iter4_reg;
reg   [7:0] image_gray_4_load_reg_686_pp0_iter5_reg;
reg   [7:0] image_gray_4_load_reg_686_pp0_iter6_reg;
reg   [7:0] image_gray_4_load_reg_686_pp0_iter7_reg;
reg   [7:0] image_gray_4_load_reg_686_pp0_iter8_reg;
reg   [7:0] image_gray_4_load_reg_686_pp0_iter9_reg;
reg   [7:0] image_gray_4_load_reg_686_pp0_iter10_reg;
reg   [7:0] image_gray_4_load_reg_686_pp0_iter11_reg;
reg   [7:0] image_gray_4_load_reg_686_pp0_iter12_reg;
reg   [7:0] image_gray_4_load_reg_686_pp0_iter13_reg;
reg   [7:0] image_gray_4_load_reg_686_pp0_iter14_reg;
reg   [7:0] image_gray_4_load_reg_686_pp0_iter15_reg;
reg   [7:0] image_gray_4_load_reg_686_pp0_iter16_reg;
reg   [7:0] image_gray_4_load_reg_686_pp0_iter17_reg;
reg   [7:0] image_gray_4_load_reg_686_pp0_iter18_reg;
reg   [7:0] image_gray_4_load_reg_686_pp0_iter19_reg;
reg   [7:0] image_gray_4_load_reg_686_pp0_iter20_reg;
reg   [7:0] image_gray_4_load_reg_686_pp0_iter21_reg;
reg   [7:0] image_gray_4_load_reg_686_pp0_iter22_reg;
reg   [7:0] image_gray_5_load_reg_691;
reg   [7:0] image_gray_5_load_reg_691_pp0_iter4_reg;
reg   [7:0] image_gray_5_load_reg_691_pp0_iter5_reg;
reg   [7:0] image_gray_5_load_reg_691_pp0_iter6_reg;
reg   [7:0] image_gray_5_load_reg_691_pp0_iter7_reg;
reg   [7:0] image_gray_5_load_reg_691_pp0_iter8_reg;
reg   [7:0] image_gray_5_load_reg_691_pp0_iter9_reg;
reg   [7:0] image_gray_5_load_reg_691_pp0_iter10_reg;
reg   [7:0] image_gray_5_load_reg_691_pp0_iter11_reg;
reg   [7:0] image_gray_5_load_reg_691_pp0_iter12_reg;
reg   [7:0] image_gray_5_load_reg_691_pp0_iter13_reg;
reg   [7:0] image_gray_5_load_reg_691_pp0_iter14_reg;
reg   [7:0] image_gray_5_load_reg_691_pp0_iter15_reg;
reg   [7:0] image_gray_5_load_reg_691_pp0_iter16_reg;
reg   [7:0] image_gray_5_load_reg_691_pp0_iter17_reg;
reg   [7:0] image_gray_5_load_reg_691_pp0_iter18_reg;
reg   [7:0] image_gray_5_load_reg_691_pp0_iter19_reg;
reg   [7:0] image_gray_5_load_reg_691_pp0_iter20_reg;
reg   [7:0] image_gray_5_load_reg_691_pp0_iter21_reg;
reg   [7:0] image_gray_5_load_reg_691_pp0_iter22_reg;
wire   [0:0] icmp_ln191_fu_512_p2;
reg   [0:0] icmp_ln191_reg_701;
reg   [0:0] icmp_ln191_reg_701_pp0_iter24_reg;
wire  signed [496:0] select_ln178_1_fu_521_p3;
reg  signed [496:0] select_ln178_1_reg_707;
wire   [63:0] zext_ln188_1_fu_414_p1;
wire   [63:0] zext_ln188_fu_424_p1;
wire    ap_block_pp0_stage0_01001;
reg   [496:0] phi_ln191_fu_124;
wire   [496:0] select_ln191_fu_549_p3;
wire    ap_loop_init;
reg   [9:0] j_fu_128;
wire   [9:0] add_ln185_fu_374_p2;
reg   [8:0] i_fu_132;
wire   [8:0] select_ln183_fu_310_p3;
reg   [18:0] indvar_flatten55_fu_136;
wire   [18:0] add_ln183_fu_278_p2;
reg    image_gray_ce0_local;
reg    image_gray_1_ce0_local;
reg    image_gray_2_ce0_local;
reg    image_gray_3_ce0_local;
reg    image_gray_4_ce0_local;
reg    image_gray_5_ce0_local;
reg    temp_buf_ce0_local;
wire   [8:0] add_ln183_1_fu_304_p2;
wire   [17:0] tmp_fu_318_p3;
wire   [15:0] tmp_20_fu_330_p3;
wire   [9:0] select_ln178_fu_296_p3;
wire   [18:0] p_shl_fu_326_p1;
wire   [18:0] p_shl11_fu_338_p1;
wire   [18:0] empty_fu_346_p2;
wire   [18:0] zext_ln185_fu_342_p1;
wire   [3:0] grp_fu_362_p1;
wire   [5:0] trunc_ln188_fu_358_p1;
wire   [18:0] mul_ln188_fu_398_p0;
wire   [20:0] mul_ln188_fu_398_p1;
wire   [38:0] mul_ln188_fu_398_p2;
wire   [16:0] tmp_21_fu_404_p4;
wire   [2:0] grp_fu_362_p2;
wire   [7:0] tmp_3_fu_432_p13;
wire   [2:0] tmp_3_fu_432_p14;
wire   [7:0] tmp_3_fu_432_p15;
wire   [0:0] abscond13_fu_464_p2;
wire   [7:0] neg12_fu_458_p2;
wire   [0:0] abscond16_fu_484_p2;
wire   [7:0] neg15_fu_478_p2;
wire   [7:0] temp1_fu_470_p3;
wire   [7:0] temp2_fu_490_p3;
wire   [0:0] icmp_ln190_fu_498_p2;
wire   [7:0] temp3_fu_504_p3;
wire   [488:0] tmp_22_fu_528_p4;
wire  signed [495:0] sext_ln185_fu_538_p1;
wire   [496:0] tmp_s_fu_542_p3;
wire  signed [503:0] sext_ln183_1_fu_567_p1;
wire   [504:0] or_ln_fu_570_p3;
reg    grp_fu_362_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire   [38:0] mul_ln188_fu_398_p00;
wire   [2:0] tmp_3_fu_432_p1;
wire   [2:0] tmp_3_fu_432_p3;
wire   [2:0] tmp_3_fu_432_p5;
wire   [2:0] tmp_3_fu_432_p7;
wire  signed [2:0] tmp_3_fu_432_p9;
wire  signed [2:0] tmp_3_fu_432_p11;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 phi_ln191_fu_124 = 497'd0;
#0 j_fu_128 = 10'd0;
#0 i_fu_132 = 9'd0;
#0 indvar_flatten55_fu_136 = 19'd0;
#0 ap_done_reg = 1'b0;
end

edgedetect_urem_19ns_4ns_3_23_1 #(
    .ID( 1 ),
    .NUM_STAGE( 23 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 3 ))
urem_19ns_4ns_3_23_1_U100(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(add_ln188_fu_352_p2),
    .din1(grp_fu_362_p1),
    .ce(grp_fu_362_ce),
    .dout(grp_fu_362_p2)
);

edgedetect_mul_19ns_21ns_39_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 21 ),
    .dout_WIDTH( 39 ))
mul_19ns_21ns_39_1_1_U101(
    .din0(mul_ln188_fu_398_p0),
    .din1(mul_ln188_fu_398_p1),
    .dout(mul_ln188_fu_398_p2)
);

(* dissolve_hierarchy = "yes" *) edgedetect_sparsemux_13_3_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h0 ),
    .din0_WIDTH( 8 ),
    .CASE1( 3'h1 ),
    .din1_WIDTH( 8 ),
    .CASE2( 3'h2 ),
    .din2_WIDTH( 8 ),
    .CASE3( 3'h3 ),
    .din3_WIDTH( 8 ),
    .CASE4( 3'h4 ),
    .din4_WIDTH( 8 ),
    .CASE5( 3'h5 ),
    .din5_WIDTH( 8 ),
    .def_WIDTH( 8 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
sparsemux_13_3_8_1_1_U102(
    .din0(image_gray_load_reg_666_pp0_iter22_reg),
    .din1(image_gray_1_load_reg_671_pp0_iter22_reg),
    .din2(image_gray_2_load_reg_676_pp0_iter22_reg),
    .din3(image_gray_3_load_reg_681_pp0_iter22_reg),
    .din4(image_gray_4_load_reg_686_pp0_iter22_reg),
    .din5(image_gray_5_load_reg_691_pp0_iter22_reg),
    .def(tmp_3_fu_432_p13),
    .sel(tmp_3_fu_432_p14),
    .dout(tmp_3_fu_432_p15)
);

edgedetect_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter24_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_fu_132 <= 9'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln183_fu_272_p2 == 1'd0))) begin
            i_fu_132 <= select_ln183_fu_310_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten55_fu_136 <= 19'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln183_fu_272_p2 == 1'd0))) begin
            indvar_flatten55_fu_136 <= add_ln183_fu_278_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            j_fu_128 <= 10'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln183_fu_272_p2 == 1'd0))) begin
            j_fu_128 <= add_ln185_fu_374_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            phi_ln191_fu_124 <= 497'd0;
        end else if ((ap_enable_reg_pp0_iter24 == 1'b1)) begin
            phi_ln191_fu_124 <= select_ln191_fu_549_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln188_reg_624 <= add_ln188_fu_352_p2;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
        icmp_ln185_reg_619 <= icmp_ln185_fu_290_p2;
        icmp_ln191_1_reg_631 <= icmp_ln191_1_fu_368_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln188_reg_624_pp0_iter10_reg <= add_ln188_reg_624_pp0_iter9_reg;
        add_ln188_reg_624_pp0_iter11_reg <= add_ln188_reg_624_pp0_iter10_reg;
        add_ln188_reg_624_pp0_iter12_reg <= add_ln188_reg_624_pp0_iter11_reg;
        add_ln188_reg_624_pp0_iter13_reg <= add_ln188_reg_624_pp0_iter12_reg;
        add_ln188_reg_624_pp0_iter14_reg <= add_ln188_reg_624_pp0_iter13_reg;
        add_ln188_reg_624_pp0_iter15_reg <= add_ln188_reg_624_pp0_iter14_reg;
        add_ln188_reg_624_pp0_iter16_reg <= add_ln188_reg_624_pp0_iter15_reg;
        add_ln188_reg_624_pp0_iter17_reg <= add_ln188_reg_624_pp0_iter16_reg;
        add_ln188_reg_624_pp0_iter18_reg <= add_ln188_reg_624_pp0_iter17_reg;
        add_ln188_reg_624_pp0_iter19_reg <= add_ln188_reg_624_pp0_iter18_reg;
        add_ln188_reg_624_pp0_iter20_reg <= add_ln188_reg_624_pp0_iter19_reg;
        add_ln188_reg_624_pp0_iter21_reg <= add_ln188_reg_624_pp0_iter20_reg;
        add_ln188_reg_624_pp0_iter2_reg <= add_ln188_reg_624;
        add_ln188_reg_624_pp0_iter3_reg <= add_ln188_reg_624_pp0_iter2_reg;
        add_ln188_reg_624_pp0_iter4_reg <= add_ln188_reg_624_pp0_iter3_reg;
        add_ln188_reg_624_pp0_iter5_reg <= add_ln188_reg_624_pp0_iter4_reg;
        add_ln188_reg_624_pp0_iter6_reg <= add_ln188_reg_624_pp0_iter5_reg;
        add_ln188_reg_624_pp0_iter7_reg <= add_ln188_reg_624_pp0_iter6_reg;
        add_ln188_reg_624_pp0_iter8_reg <= add_ln188_reg_624_pp0_iter7_reg;
        add_ln188_reg_624_pp0_iter9_reg <= add_ln188_reg_624_pp0_iter8_reg;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        icmp_ln185_reg_619_pp0_iter10_reg <= icmp_ln185_reg_619_pp0_iter9_reg;
        icmp_ln185_reg_619_pp0_iter11_reg <= icmp_ln185_reg_619_pp0_iter10_reg;
        icmp_ln185_reg_619_pp0_iter12_reg <= icmp_ln185_reg_619_pp0_iter11_reg;
        icmp_ln185_reg_619_pp0_iter13_reg <= icmp_ln185_reg_619_pp0_iter12_reg;
        icmp_ln185_reg_619_pp0_iter14_reg <= icmp_ln185_reg_619_pp0_iter13_reg;
        icmp_ln185_reg_619_pp0_iter15_reg <= icmp_ln185_reg_619_pp0_iter14_reg;
        icmp_ln185_reg_619_pp0_iter16_reg <= icmp_ln185_reg_619_pp0_iter15_reg;
        icmp_ln185_reg_619_pp0_iter17_reg <= icmp_ln185_reg_619_pp0_iter16_reg;
        icmp_ln185_reg_619_pp0_iter18_reg <= icmp_ln185_reg_619_pp0_iter17_reg;
        icmp_ln185_reg_619_pp0_iter19_reg <= icmp_ln185_reg_619_pp0_iter18_reg;
        icmp_ln185_reg_619_pp0_iter20_reg <= icmp_ln185_reg_619_pp0_iter19_reg;
        icmp_ln185_reg_619_pp0_iter21_reg <= icmp_ln185_reg_619_pp0_iter20_reg;
        icmp_ln185_reg_619_pp0_iter22_reg <= icmp_ln185_reg_619_pp0_iter21_reg;
        icmp_ln185_reg_619_pp0_iter23_reg <= icmp_ln185_reg_619_pp0_iter22_reg;
        icmp_ln185_reg_619_pp0_iter2_reg <= icmp_ln185_reg_619;
        icmp_ln185_reg_619_pp0_iter3_reg <= icmp_ln185_reg_619_pp0_iter2_reg;
        icmp_ln185_reg_619_pp0_iter4_reg <= icmp_ln185_reg_619_pp0_iter3_reg;
        icmp_ln185_reg_619_pp0_iter5_reg <= icmp_ln185_reg_619_pp0_iter4_reg;
        icmp_ln185_reg_619_pp0_iter6_reg <= icmp_ln185_reg_619_pp0_iter5_reg;
        icmp_ln185_reg_619_pp0_iter7_reg <= icmp_ln185_reg_619_pp0_iter6_reg;
        icmp_ln185_reg_619_pp0_iter8_reg <= icmp_ln185_reg_619_pp0_iter7_reg;
        icmp_ln185_reg_619_pp0_iter9_reg <= icmp_ln185_reg_619_pp0_iter8_reg;
        icmp_ln191_1_reg_631_pp0_iter10_reg <= icmp_ln191_1_reg_631_pp0_iter9_reg;
        icmp_ln191_1_reg_631_pp0_iter11_reg <= icmp_ln191_1_reg_631_pp0_iter10_reg;
        icmp_ln191_1_reg_631_pp0_iter12_reg <= icmp_ln191_1_reg_631_pp0_iter11_reg;
        icmp_ln191_1_reg_631_pp0_iter13_reg <= icmp_ln191_1_reg_631_pp0_iter12_reg;
        icmp_ln191_1_reg_631_pp0_iter14_reg <= icmp_ln191_1_reg_631_pp0_iter13_reg;
        icmp_ln191_1_reg_631_pp0_iter15_reg <= icmp_ln191_1_reg_631_pp0_iter14_reg;
        icmp_ln191_1_reg_631_pp0_iter16_reg <= icmp_ln191_1_reg_631_pp0_iter15_reg;
        icmp_ln191_1_reg_631_pp0_iter17_reg <= icmp_ln191_1_reg_631_pp0_iter16_reg;
        icmp_ln191_1_reg_631_pp0_iter18_reg <= icmp_ln191_1_reg_631_pp0_iter17_reg;
        icmp_ln191_1_reg_631_pp0_iter19_reg <= icmp_ln191_1_reg_631_pp0_iter18_reg;
        icmp_ln191_1_reg_631_pp0_iter20_reg <= icmp_ln191_1_reg_631_pp0_iter19_reg;
        icmp_ln191_1_reg_631_pp0_iter21_reg <= icmp_ln191_1_reg_631_pp0_iter20_reg;
        icmp_ln191_1_reg_631_pp0_iter22_reg <= icmp_ln191_1_reg_631_pp0_iter21_reg;
        icmp_ln191_1_reg_631_pp0_iter23_reg <= icmp_ln191_1_reg_631_pp0_iter22_reg;
        icmp_ln191_1_reg_631_pp0_iter24_reg <= icmp_ln191_1_reg_631_pp0_iter23_reg;
        icmp_ln191_1_reg_631_pp0_iter2_reg <= icmp_ln191_1_reg_631;
        icmp_ln191_1_reg_631_pp0_iter3_reg <= icmp_ln191_1_reg_631_pp0_iter2_reg;
        icmp_ln191_1_reg_631_pp0_iter4_reg <= icmp_ln191_1_reg_631_pp0_iter3_reg;
        icmp_ln191_1_reg_631_pp0_iter5_reg <= icmp_ln191_1_reg_631_pp0_iter4_reg;
        icmp_ln191_1_reg_631_pp0_iter6_reg <= icmp_ln191_1_reg_631_pp0_iter5_reg;
        icmp_ln191_1_reg_631_pp0_iter7_reg <= icmp_ln191_1_reg_631_pp0_iter6_reg;
        icmp_ln191_1_reg_631_pp0_iter8_reg <= icmp_ln191_1_reg_631_pp0_iter7_reg;
        icmp_ln191_1_reg_631_pp0_iter9_reg <= icmp_ln191_1_reg_631_pp0_iter8_reg;
        icmp_ln191_reg_701 <= icmp_ln191_fu_512_p2;
        icmp_ln191_reg_701_pp0_iter24_reg <= icmp_ln191_reg_701;
        image_gray_1_load_reg_671 <= image_gray_1_q0;
        image_gray_1_load_reg_671_pp0_iter10_reg <= image_gray_1_load_reg_671_pp0_iter9_reg;
        image_gray_1_load_reg_671_pp0_iter11_reg <= image_gray_1_load_reg_671_pp0_iter10_reg;
        image_gray_1_load_reg_671_pp0_iter12_reg <= image_gray_1_load_reg_671_pp0_iter11_reg;
        image_gray_1_load_reg_671_pp0_iter13_reg <= image_gray_1_load_reg_671_pp0_iter12_reg;
        image_gray_1_load_reg_671_pp0_iter14_reg <= image_gray_1_load_reg_671_pp0_iter13_reg;
        image_gray_1_load_reg_671_pp0_iter15_reg <= image_gray_1_load_reg_671_pp0_iter14_reg;
        image_gray_1_load_reg_671_pp0_iter16_reg <= image_gray_1_load_reg_671_pp0_iter15_reg;
        image_gray_1_load_reg_671_pp0_iter17_reg <= image_gray_1_load_reg_671_pp0_iter16_reg;
        image_gray_1_load_reg_671_pp0_iter18_reg <= image_gray_1_load_reg_671_pp0_iter17_reg;
        image_gray_1_load_reg_671_pp0_iter19_reg <= image_gray_1_load_reg_671_pp0_iter18_reg;
        image_gray_1_load_reg_671_pp0_iter20_reg <= image_gray_1_load_reg_671_pp0_iter19_reg;
        image_gray_1_load_reg_671_pp0_iter21_reg <= image_gray_1_load_reg_671_pp0_iter20_reg;
        image_gray_1_load_reg_671_pp0_iter22_reg <= image_gray_1_load_reg_671_pp0_iter21_reg;
        image_gray_1_load_reg_671_pp0_iter4_reg <= image_gray_1_load_reg_671;
        image_gray_1_load_reg_671_pp0_iter5_reg <= image_gray_1_load_reg_671_pp0_iter4_reg;
        image_gray_1_load_reg_671_pp0_iter6_reg <= image_gray_1_load_reg_671_pp0_iter5_reg;
        image_gray_1_load_reg_671_pp0_iter7_reg <= image_gray_1_load_reg_671_pp0_iter6_reg;
        image_gray_1_load_reg_671_pp0_iter8_reg <= image_gray_1_load_reg_671_pp0_iter7_reg;
        image_gray_1_load_reg_671_pp0_iter9_reg <= image_gray_1_load_reg_671_pp0_iter8_reg;
        image_gray_2_load_reg_676 <= image_gray_2_q0;
        image_gray_2_load_reg_676_pp0_iter10_reg <= image_gray_2_load_reg_676_pp0_iter9_reg;
        image_gray_2_load_reg_676_pp0_iter11_reg <= image_gray_2_load_reg_676_pp0_iter10_reg;
        image_gray_2_load_reg_676_pp0_iter12_reg <= image_gray_2_load_reg_676_pp0_iter11_reg;
        image_gray_2_load_reg_676_pp0_iter13_reg <= image_gray_2_load_reg_676_pp0_iter12_reg;
        image_gray_2_load_reg_676_pp0_iter14_reg <= image_gray_2_load_reg_676_pp0_iter13_reg;
        image_gray_2_load_reg_676_pp0_iter15_reg <= image_gray_2_load_reg_676_pp0_iter14_reg;
        image_gray_2_load_reg_676_pp0_iter16_reg <= image_gray_2_load_reg_676_pp0_iter15_reg;
        image_gray_2_load_reg_676_pp0_iter17_reg <= image_gray_2_load_reg_676_pp0_iter16_reg;
        image_gray_2_load_reg_676_pp0_iter18_reg <= image_gray_2_load_reg_676_pp0_iter17_reg;
        image_gray_2_load_reg_676_pp0_iter19_reg <= image_gray_2_load_reg_676_pp0_iter18_reg;
        image_gray_2_load_reg_676_pp0_iter20_reg <= image_gray_2_load_reg_676_pp0_iter19_reg;
        image_gray_2_load_reg_676_pp0_iter21_reg <= image_gray_2_load_reg_676_pp0_iter20_reg;
        image_gray_2_load_reg_676_pp0_iter22_reg <= image_gray_2_load_reg_676_pp0_iter21_reg;
        image_gray_2_load_reg_676_pp0_iter4_reg <= image_gray_2_load_reg_676;
        image_gray_2_load_reg_676_pp0_iter5_reg <= image_gray_2_load_reg_676_pp0_iter4_reg;
        image_gray_2_load_reg_676_pp0_iter6_reg <= image_gray_2_load_reg_676_pp0_iter5_reg;
        image_gray_2_load_reg_676_pp0_iter7_reg <= image_gray_2_load_reg_676_pp0_iter6_reg;
        image_gray_2_load_reg_676_pp0_iter8_reg <= image_gray_2_load_reg_676_pp0_iter7_reg;
        image_gray_2_load_reg_676_pp0_iter9_reg <= image_gray_2_load_reg_676_pp0_iter8_reg;
        image_gray_3_load_reg_681 <= image_gray_3_q0;
        image_gray_3_load_reg_681_pp0_iter10_reg <= image_gray_3_load_reg_681_pp0_iter9_reg;
        image_gray_3_load_reg_681_pp0_iter11_reg <= image_gray_3_load_reg_681_pp0_iter10_reg;
        image_gray_3_load_reg_681_pp0_iter12_reg <= image_gray_3_load_reg_681_pp0_iter11_reg;
        image_gray_3_load_reg_681_pp0_iter13_reg <= image_gray_3_load_reg_681_pp0_iter12_reg;
        image_gray_3_load_reg_681_pp0_iter14_reg <= image_gray_3_load_reg_681_pp0_iter13_reg;
        image_gray_3_load_reg_681_pp0_iter15_reg <= image_gray_3_load_reg_681_pp0_iter14_reg;
        image_gray_3_load_reg_681_pp0_iter16_reg <= image_gray_3_load_reg_681_pp0_iter15_reg;
        image_gray_3_load_reg_681_pp0_iter17_reg <= image_gray_3_load_reg_681_pp0_iter16_reg;
        image_gray_3_load_reg_681_pp0_iter18_reg <= image_gray_3_load_reg_681_pp0_iter17_reg;
        image_gray_3_load_reg_681_pp0_iter19_reg <= image_gray_3_load_reg_681_pp0_iter18_reg;
        image_gray_3_load_reg_681_pp0_iter20_reg <= image_gray_3_load_reg_681_pp0_iter19_reg;
        image_gray_3_load_reg_681_pp0_iter21_reg <= image_gray_3_load_reg_681_pp0_iter20_reg;
        image_gray_3_load_reg_681_pp0_iter22_reg <= image_gray_3_load_reg_681_pp0_iter21_reg;
        image_gray_3_load_reg_681_pp0_iter4_reg <= image_gray_3_load_reg_681;
        image_gray_3_load_reg_681_pp0_iter5_reg <= image_gray_3_load_reg_681_pp0_iter4_reg;
        image_gray_3_load_reg_681_pp0_iter6_reg <= image_gray_3_load_reg_681_pp0_iter5_reg;
        image_gray_3_load_reg_681_pp0_iter7_reg <= image_gray_3_load_reg_681_pp0_iter6_reg;
        image_gray_3_load_reg_681_pp0_iter8_reg <= image_gray_3_load_reg_681_pp0_iter7_reg;
        image_gray_3_load_reg_681_pp0_iter9_reg <= image_gray_3_load_reg_681_pp0_iter8_reg;
        image_gray_4_load_reg_686 <= image_gray_4_q0;
        image_gray_4_load_reg_686_pp0_iter10_reg <= image_gray_4_load_reg_686_pp0_iter9_reg;
        image_gray_4_load_reg_686_pp0_iter11_reg <= image_gray_4_load_reg_686_pp0_iter10_reg;
        image_gray_4_load_reg_686_pp0_iter12_reg <= image_gray_4_load_reg_686_pp0_iter11_reg;
        image_gray_4_load_reg_686_pp0_iter13_reg <= image_gray_4_load_reg_686_pp0_iter12_reg;
        image_gray_4_load_reg_686_pp0_iter14_reg <= image_gray_4_load_reg_686_pp0_iter13_reg;
        image_gray_4_load_reg_686_pp0_iter15_reg <= image_gray_4_load_reg_686_pp0_iter14_reg;
        image_gray_4_load_reg_686_pp0_iter16_reg <= image_gray_4_load_reg_686_pp0_iter15_reg;
        image_gray_4_load_reg_686_pp0_iter17_reg <= image_gray_4_load_reg_686_pp0_iter16_reg;
        image_gray_4_load_reg_686_pp0_iter18_reg <= image_gray_4_load_reg_686_pp0_iter17_reg;
        image_gray_4_load_reg_686_pp0_iter19_reg <= image_gray_4_load_reg_686_pp0_iter18_reg;
        image_gray_4_load_reg_686_pp0_iter20_reg <= image_gray_4_load_reg_686_pp0_iter19_reg;
        image_gray_4_load_reg_686_pp0_iter21_reg <= image_gray_4_load_reg_686_pp0_iter20_reg;
        image_gray_4_load_reg_686_pp0_iter22_reg <= image_gray_4_load_reg_686_pp0_iter21_reg;
        image_gray_4_load_reg_686_pp0_iter4_reg <= image_gray_4_load_reg_686;
        image_gray_4_load_reg_686_pp0_iter5_reg <= image_gray_4_load_reg_686_pp0_iter4_reg;
        image_gray_4_load_reg_686_pp0_iter6_reg <= image_gray_4_load_reg_686_pp0_iter5_reg;
        image_gray_4_load_reg_686_pp0_iter7_reg <= image_gray_4_load_reg_686_pp0_iter6_reg;
        image_gray_4_load_reg_686_pp0_iter8_reg <= image_gray_4_load_reg_686_pp0_iter7_reg;
        image_gray_4_load_reg_686_pp0_iter9_reg <= image_gray_4_load_reg_686_pp0_iter8_reg;
        image_gray_5_load_reg_691 <= image_gray_5_q0;
        image_gray_5_load_reg_691_pp0_iter10_reg <= image_gray_5_load_reg_691_pp0_iter9_reg;
        image_gray_5_load_reg_691_pp0_iter11_reg <= image_gray_5_load_reg_691_pp0_iter10_reg;
        image_gray_5_load_reg_691_pp0_iter12_reg <= image_gray_5_load_reg_691_pp0_iter11_reg;
        image_gray_5_load_reg_691_pp0_iter13_reg <= image_gray_5_load_reg_691_pp0_iter12_reg;
        image_gray_5_load_reg_691_pp0_iter14_reg <= image_gray_5_load_reg_691_pp0_iter13_reg;
        image_gray_5_load_reg_691_pp0_iter15_reg <= image_gray_5_load_reg_691_pp0_iter14_reg;
        image_gray_5_load_reg_691_pp0_iter16_reg <= image_gray_5_load_reg_691_pp0_iter15_reg;
        image_gray_5_load_reg_691_pp0_iter17_reg <= image_gray_5_load_reg_691_pp0_iter16_reg;
        image_gray_5_load_reg_691_pp0_iter18_reg <= image_gray_5_load_reg_691_pp0_iter17_reg;
        image_gray_5_load_reg_691_pp0_iter19_reg <= image_gray_5_load_reg_691_pp0_iter18_reg;
        image_gray_5_load_reg_691_pp0_iter20_reg <= image_gray_5_load_reg_691_pp0_iter19_reg;
        image_gray_5_load_reg_691_pp0_iter21_reg <= image_gray_5_load_reg_691_pp0_iter20_reg;
        image_gray_5_load_reg_691_pp0_iter22_reg <= image_gray_5_load_reg_691_pp0_iter21_reg;
        image_gray_5_load_reg_691_pp0_iter4_reg <= image_gray_5_load_reg_691;
        image_gray_5_load_reg_691_pp0_iter5_reg <= image_gray_5_load_reg_691_pp0_iter4_reg;
        image_gray_5_load_reg_691_pp0_iter6_reg <= image_gray_5_load_reg_691_pp0_iter5_reg;
        image_gray_5_load_reg_691_pp0_iter7_reg <= image_gray_5_load_reg_691_pp0_iter6_reg;
        image_gray_5_load_reg_691_pp0_iter8_reg <= image_gray_5_load_reg_691_pp0_iter7_reg;
        image_gray_5_load_reg_691_pp0_iter9_reg <= image_gray_5_load_reg_691_pp0_iter8_reg;
        image_gray_load_reg_666 <= image_gray_q0;
        image_gray_load_reg_666_pp0_iter10_reg <= image_gray_load_reg_666_pp0_iter9_reg;
        image_gray_load_reg_666_pp0_iter11_reg <= image_gray_load_reg_666_pp0_iter10_reg;
        image_gray_load_reg_666_pp0_iter12_reg <= image_gray_load_reg_666_pp0_iter11_reg;
        image_gray_load_reg_666_pp0_iter13_reg <= image_gray_load_reg_666_pp0_iter12_reg;
        image_gray_load_reg_666_pp0_iter14_reg <= image_gray_load_reg_666_pp0_iter13_reg;
        image_gray_load_reg_666_pp0_iter15_reg <= image_gray_load_reg_666_pp0_iter14_reg;
        image_gray_load_reg_666_pp0_iter16_reg <= image_gray_load_reg_666_pp0_iter15_reg;
        image_gray_load_reg_666_pp0_iter17_reg <= image_gray_load_reg_666_pp0_iter16_reg;
        image_gray_load_reg_666_pp0_iter18_reg <= image_gray_load_reg_666_pp0_iter17_reg;
        image_gray_load_reg_666_pp0_iter19_reg <= image_gray_load_reg_666_pp0_iter18_reg;
        image_gray_load_reg_666_pp0_iter20_reg <= image_gray_load_reg_666_pp0_iter19_reg;
        image_gray_load_reg_666_pp0_iter21_reg <= image_gray_load_reg_666_pp0_iter20_reg;
        image_gray_load_reg_666_pp0_iter22_reg <= image_gray_load_reg_666_pp0_iter21_reg;
        image_gray_load_reg_666_pp0_iter4_reg <= image_gray_load_reg_666;
        image_gray_load_reg_666_pp0_iter5_reg <= image_gray_load_reg_666_pp0_iter4_reg;
        image_gray_load_reg_666_pp0_iter6_reg <= image_gray_load_reg_666_pp0_iter5_reg;
        image_gray_load_reg_666_pp0_iter7_reg <= image_gray_load_reg_666_pp0_iter6_reg;
        image_gray_load_reg_666_pp0_iter8_reg <= image_gray_load_reg_666_pp0_iter7_reg;
        image_gray_load_reg_666_pp0_iter9_reg <= image_gray_load_reg_666_pp0_iter8_reg;
        select_ln178_1_reg_707 <= select_ln178_1_fu_521_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln183_fu_272_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter24_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln191_1_reg_631_pp0_iter24_reg == 1'd1))) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_362_ce = 1'b1;
    end else begin
        grp_fu_362_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        image_gray_1_ce0_local = 1'b1;
    end else begin
        image_gray_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        image_gray_2_ce0_local = 1'b1;
    end else begin
        image_gray_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        image_gray_3_ce0_local = 1'b1;
    end else begin
        image_gray_3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        image_gray_4_ce0_local = 1'b1;
    end else begin
        image_gray_4_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        image_gray_5_ce0_local = 1'b1;
    end else begin
        image_gray_5_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        image_gray_ce0_local = 1'b1;
    end else begin
        image_gray_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln191_1_reg_631_pp0_iter24_reg == 1'd1))) begin
        m_axi_gmem_WVALID = 1'b1;
    end else begin
        m_axi_gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        temp_buf_ce0_local = 1'b1;
    end else begin
        temp_buf_ce0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign abscond13_fu_464_p2 = ((tmp_3_fu_432_p15 != 8'd0) ? 1'b1 : 1'b0);

assign abscond16_fu_484_p2 = ((temp_buf_q0 != 8'd0) ? 1'b1 : 1'b0);

assign add_ln183_1_fu_304_p2 = (i_fu_132 + 9'd1);

assign add_ln183_fu_278_p2 = (indvar_flatten55_fu_136 + 19'd1);

assign add_ln185_fu_374_p2 = (select_ln178_fu_296_p3 + 10'd1);

assign add_ln188_fu_352_p2 = (empty_fu_346_p2 + zext_ln185_fu_342_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b1 == ap_block_state26_io));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b1 == ap_block_state26_io));
end

always @ (*) begin
    ap_block_state26_io = ((icmp_ln191_1_reg_631_pp0_iter24_reg == 1'd1) & (m_axi_gmem_WREADY == 1'b0));
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign ap_ready = ap_ready_sig;

assign empty_fu_346_p2 = (p_shl_fu_326_p1 + p_shl11_fu_338_p1);

assign grp_fu_362_p1 = 19'd6;

assign icmp_ln183_fu_272_p2 = ((indvar_flatten55_fu_136 == 19'd307200) ? 1'b1 : 1'b0);

assign icmp_ln185_fu_290_p2 = ((j_fu_128 == 10'd640) ? 1'b1 : 1'b0);

assign icmp_ln190_fu_498_p2 = ((temp1_fu_470_p3 > temp2_fu_490_p3) ? 1'b1 : 1'b0);

assign icmp_ln191_1_fu_368_p2 = ((trunc_ln188_fu_358_p1 == 6'd63) ? 1'b1 : 1'b0);

assign icmp_ln191_fu_512_p2 = ((temp3_fu_504_p3 > 8'd150) ? 1'b1 : 1'b0);

assign image_gray_1_address0 = zext_ln188_1_fu_414_p1;

assign image_gray_1_ce0 = image_gray_1_ce0_local;

assign image_gray_2_address0 = zext_ln188_1_fu_414_p1;

assign image_gray_2_ce0 = image_gray_2_ce0_local;

assign image_gray_3_address0 = zext_ln188_1_fu_414_p1;

assign image_gray_3_ce0 = image_gray_3_ce0_local;

assign image_gray_4_address0 = zext_ln188_1_fu_414_p1;

assign image_gray_4_ce0 = image_gray_4_ce0_local;

assign image_gray_5_address0 = zext_ln188_1_fu_414_p1;

assign image_gray_5_ce0 = image_gray_5_ce0_local;

assign image_gray_address0 = zext_ln188_1_fu_414_p1;

assign image_gray_ce0 = image_gray_ce0_local;

assign m_axi_gmem_ARADDR = 64'd0;

assign m_axi_gmem_ARBURST = 2'd0;

assign m_axi_gmem_ARCACHE = 4'd0;

assign m_axi_gmem_ARID = 1'd0;

assign m_axi_gmem_ARLEN = 32'd0;

assign m_axi_gmem_ARLOCK = 2'd0;

assign m_axi_gmem_ARPROT = 3'd0;

assign m_axi_gmem_ARQOS = 4'd0;

assign m_axi_gmem_ARREGION = 4'd0;

assign m_axi_gmem_ARSIZE = 3'd0;

assign m_axi_gmem_ARUSER = 1'd0;

assign m_axi_gmem_ARVALID = 1'b0;

assign m_axi_gmem_AWADDR = 64'd0;

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLEN = 32'd0;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_AWVALID = 1'b0;

assign m_axi_gmem_BREADY = 1'b0;

assign m_axi_gmem_RREADY = 1'b0;

assign m_axi_gmem_WDATA = $signed(or_ln_fu_570_p3);

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WSTRB = 64'd18446744073709551615;

assign m_axi_gmem_WUSER = 1'd0;

assign mul_ln188_fu_398_p0 = mul_ln188_fu_398_p00;

assign mul_ln188_fu_398_p00 = add_ln188_reg_624;

assign mul_ln188_fu_398_p1 = 39'd699051;

assign neg12_fu_458_p2 = (8'd0 - tmp_3_fu_432_p15);

assign neg15_fu_478_p2 = (8'd0 - temp_buf_q0);

assign or_ln_fu_570_p3 = {{icmp_ln191_reg_701_pp0_iter24_reg}, {sext_ln183_1_fu_567_p1}};

assign p_shl11_fu_338_p1 = tmp_20_fu_330_p3;

assign p_shl_fu_326_p1 = tmp_fu_318_p3;

assign select_ln178_1_fu_521_p3 = ((icmp_ln185_reg_619_pp0_iter23_reg[0:0] == 1'b1) ? 497'd0 : phi_ln191_fu_124);

assign select_ln178_fu_296_p3 = ((icmp_ln185_fu_290_p2[0:0] == 1'b1) ? 10'd0 : j_fu_128);

assign select_ln183_fu_310_p3 = ((icmp_ln185_fu_290_p2[0:0] == 1'b1) ? add_ln183_1_fu_304_p2 : i_fu_132);

assign select_ln191_fu_549_p3 = ((icmp_ln191_1_reg_631_pp0_iter23_reg[0:0] == 1'b1) ? 497'd0 : tmp_s_fu_542_p3);

assign sext_ln183_1_fu_567_p1 = select_ln178_1_reg_707;

assign sext_ln185_fu_538_p1 = $signed(tmp_22_fu_528_p4);

assign temp1_fu_470_p3 = ((abscond13_fu_464_p2[0:0] == 1'b1) ? tmp_3_fu_432_p15 : neg12_fu_458_p2);

assign temp2_fu_490_p3 = ((abscond16_fu_484_p2[0:0] == 1'b1) ? temp_buf_q0 : neg15_fu_478_p2);

assign temp3_fu_504_p3 = ((icmp_ln190_fu_498_p2[0:0] == 1'b1) ? temp1_fu_470_p3 : temp2_fu_490_p3);

assign temp_buf_address0 = zext_ln188_fu_424_p1;

assign temp_buf_ce0 = temp_buf_ce0_local;

assign tmp_20_fu_330_p3 = {{select_ln183_fu_310_p3}, {7'd0}};

assign tmp_21_fu_404_p4 = {{mul_ln188_fu_398_p2[38:22]}};

assign tmp_22_fu_528_p4 = {{select_ln178_1_fu_521_p3[496:8]}};

assign tmp_3_fu_432_p13 = 'bx;

assign tmp_3_fu_432_p14 = grp_fu_362_p2[2:0];

assign tmp_fu_318_p3 = {{select_ln183_fu_310_p3}, {9'd0}};

assign tmp_s_fu_542_p3 = {{icmp_ln191_reg_701}, {sext_ln185_fu_538_p1}};

assign trunc_ln188_fu_358_p1 = add_ln188_fu_352_p2[5:0];

assign zext_ln185_fu_342_p1 = select_ln178_fu_296_p3;

assign zext_ln188_1_fu_414_p1 = tmp_21_fu_404_p4;

assign zext_ln188_fu_424_p1 = add_ln188_reg_624_pp0_iter21_reg;

endmodule //edgedetect_edgedetect_Pipeline_VITIS_LOOP_183_1_VITIS_LOOP_185_2
