// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module edgedetect_edgedetect_Pipeline_VITIS_LOOP_158_3_VITIS_LOOP_160_4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        output_r,
        normal_factor_8_reload,
        icmp_ln155,
        temp_buf_address0,
        temp_buf_ce0,
        temp_buf_we0,
        temp_buf_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 6'd1;
parameter    ap_ST_fsm_pp0_stage1 = 6'd2;
parameter    ap_ST_fsm_pp0_stage2 = 6'd4;
parameter    ap_ST_fsm_pp0_stage3 = 6'd8;
parameter    ap_ST_fsm_pp0_stage4 = 6'd16;
parameter    ap_ST_fsm_pp0_stage5 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [511:0] m_axi_gmem_WDATA;
output  [63:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [511:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [8:0] m_axi_gmem_RFIFONUM;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
input  [63:0] output_r;
input  [4:0] normal_factor_8_reload;
input  [0:0] icmp_ln155;
output  [18:0] temp_buf_address0;
output   temp_buf_ce0;
output   temp_buf_we0;
output  [7:0] temp_buf_d0;

reg ap_idle;
reg m_axi_gmem_ARVALID;
reg[63:0] m_axi_gmem_ARADDR;
reg m_axi_gmem_RREADY;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage5;
reg   [0:0] icmp_ln158_reg_839;
reg    ap_block_state6_io;
reg    ap_block_state78_pp0_stage5_iter12;
reg    ap_block_pp0_stage5_subdone;
reg    ap_condition_exit_pp0_iter0_stage5;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem_blk_n_AR;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
reg    gmem_blk_n_R;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_block_pp0_stage5;
wire    ap_block_pp0_stage0;
reg    ap_block_state7_io;
reg    ap_block_state79_pp0_stage0_iter13;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln158_fu_241_p2;
reg    ap_block_state74_pp0_stage1_iter12;
reg    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln158_reg_839_pp0_iter1_reg;
reg   [0:0] icmp_ln158_reg_839_pp0_iter2_reg;
reg   [0:0] icmp_ln158_reg_839_pp0_iter3_reg;
reg   [0:0] icmp_ln158_reg_839_pp0_iter4_reg;
reg   [0:0] icmp_ln158_reg_839_pp0_iter5_reg;
reg   [0:0] icmp_ln158_reg_839_pp0_iter6_reg;
reg   [0:0] icmp_ln158_reg_839_pp0_iter7_reg;
reg   [0:0] icmp_ln158_reg_839_pp0_iter8_reg;
reg   [0:0] icmp_ln158_reg_839_pp0_iter9_reg;
reg   [0:0] icmp_ln158_reg_839_pp0_iter10_reg;
reg   [0:0] icmp_ln158_reg_839_pp0_iter11_reg;
reg   [0:0] icmp_ln158_reg_839_pp0_iter12_reg;
reg   [0:0] icmp_ln158_reg_839_pp0_iter13_reg;
reg   [0:0] icmp_ln158_reg_839_pp0_iter14_reg;
wire   [18:0] add_ln163_fu_325_p2;
reg   [18:0] add_ln163_reg_843;
wire   [63:0] empty_32_fu_335_p2;
reg   [63:0] empty_32_reg_848;
reg   [57:0] trunc_ln167_s_reg_854;
wire   [5:0] trunc_ln167_fu_350_p1;
reg   [5:0] trunc_ln167_reg_859;
reg   [5:0] trunc_ln167_reg_859_pp0_iter1_reg;
reg   [5:0] trunc_ln167_reg_859_pp0_iter2_reg;
reg   [5:0] trunc_ln167_reg_859_pp0_iter3_reg;
reg   [5:0] trunc_ln167_reg_859_pp0_iter4_reg;
reg   [5:0] trunc_ln167_reg_859_pp0_iter5_reg;
reg   [5:0] trunc_ln167_reg_859_pp0_iter6_reg;
reg   [5:0] trunc_ln167_reg_859_pp0_iter7_reg;
reg   [5:0] trunc_ln167_reg_859_pp0_iter8_reg;
reg   [5:0] trunc_ln167_reg_859_pp0_iter9_reg;
reg   [5:0] trunc_ln167_reg_859_pp0_iter10_reg;
reg   [5:0] trunc_ln167_reg_859_pp0_iter11_reg;
reg   [5:0] trunc_ln167_reg_859_pp0_iter12_reg;
wire   [18:0] add_ln171_1_fu_370_p2;
reg   [18:0] add_ln171_1_reg_864;
reg   [18:0] add_ln171_1_reg_864_pp0_iter1_reg;
reg   [18:0] add_ln171_1_reg_864_pp0_iter2_reg;
reg   [18:0] add_ln171_1_reg_864_pp0_iter3_reg;
reg   [18:0] add_ln171_1_reg_864_pp0_iter4_reg;
reg   [18:0] add_ln171_1_reg_864_pp0_iter5_reg;
reg   [18:0] add_ln171_1_reg_864_pp0_iter6_reg;
reg   [18:0] add_ln171_1_reg_864_pp0_iter7_reg;
reg   [18:0] add_ln171_1_reg_864_pp0_iter8_reg;
reg   [18:0] add_ln171_1_reg_864_pp0_iter9_reg;
reg   [18:0] add_ln171_1_reg_864_pp0_iter10_reg;
reg   [18:0] add_ln171_1_reg_864_pp0_iter11_reg;
reg   [18:0] add_ln171_1_reg_864_pp0_iter12_reg;
reg   [18:0] add_ln171_1_reg_864_pp0_iter13_reg;
reg   [18:0] add_ln171_1_reg_864_pp0_iter14_reg;
reg   [18:0] add_ln171_1_reg_864_pp0_iter15_reg;
reg    ap_block_state3_io;
reg    ap_block_state75_pp0_stage2_iter12;
reg    ap_block_pp0_stage2_11001;
reg   [57:0] trunc_ln167_1_reg_875;
wire   [5:0] trunc_ln167_5_fu_416_p1;
reg   [5:0] trunc_ln167_5_reg_880;
reg   [5:0] trunc_ln167_5_reg_880_pp0_iter1_reg;
reg   [5:0] trunc_ln167_5_reg_880_pp0_iter2_reg;
reg   [5:0] trunc_ln167_5_reg_880_pp0_iter3_reg;
reg   [5:0] trunc_ln167_5_reg_880_pp0_iter4_reg;
reg   [5:0] trunc_ln167_5_reg_880_pp0_iter5_reg;
reg   [5:0] trunc_ln167_5_reg_880_pp0_iter6_reg;
reg   [5:0] trunc_ln167_5_reg_880_pp0_iter7_reg;
reg   [5:0] trunc_ln167_5_reg_880_pp0_iter8_reg;
reg   [5:0] trunc_ln167_5_reg_880_pp0_iter9_reg;
reg   [5:0] trunc_ln167_5_reg_880_pp0_iter10_reg;
reg   [5:0] trunc_ln167_5_reg_880_pp0_iter11_reg;
reg   [5:0] trunc_ln167_5_reg_880_pp0_iter12_reg;
reg    ap_block_state4_io;
reg    ap_block_state76_pp0_stage3_iter12;
reg    ap_block_pp0_stage3_11001;
reg   [57:0] trunc_ln167_2_reg_891;
wire   [5:0] trunc_ln167_9_fu_445_p1;
reg   [5:0] trunc_ln167_9_reg_896;
reg   [5:0] trunc_ln167_9_reg_896_pp0_iter1_reg;
reg   [5:0] trunc_ln167_9_reg_896_pp0_iter2_reg;
reg   [5:0] trunc_ln167_9_reg_896_pp0_iter3_reg;
reg   [5:0] trunc_ln167_9_reg_896_pp0_iter4_reg;
reg   [5:0] trunc_ln167_9_reg_896_pp0_iter5_reg;
reg   [5:0] trunc_ln167_9_reg_896_pp0_iter6_reg;
reg   [5:0] trunc_ln167_9_reg_896_pp0_iter7_reg;
reg   [5:0] trunc_ln167_9_reg_896_pp0_iter8_reg;
reg   [5:0] trunc_ln167_9_reg_896_pp0_iter9_reg;
reg   [5:0] trunc_ln167_9_reg_896_pp0_iter10_reg;
reg   [5:0] trunc_ln167_9_reg_896_pp0_iter11_reg;
reg   [5:0] trunc_ln167_9_reg_896_pp0_iter12_reg;
reg    ap_block_state5_io;
reg    ap_block_state77_pp0_stage4_iter12;
reg    ap_block_pp0_stage4_11001;
wire   [63:0] empty_33_fu_468_p2;
reg   [63:0] empty_33_reg_907;
reg   [57:0] trunc_ln167_4_reg_913;
wire   [5:0] trunc_ln167_11_fu_483_p1;
reg   [5:0] trunc_ln167_11_reg_918;
reg   [5:0] trunc_ln167_11_reg_918_pp0_iter1_reg;
reg   [5:0] trunc_ln167_11_reg_918_pp0_iter2_reg;
reg   [5:0] trunc_ln167_11_reg_918_pp0_iter3_reg;
reg   [5:0] trunc_ln167_11_reg_918_pp0_iter4_reg;
reg   [5:0] trunc_ln167_11_reg_918_pp0_iter5_reg;
reg   [5:0] trunc_ln167_11_reg_918_pp0_iter6_reg;
reg   [5:0] trunc_ln167_11_reg_918_pp0_iter7_reg;
reg   [5:0] trunc_ln167_11_reg_918_pp0_iter8_reg;
reg   [5:0] trunc_ln167_11_reg_918_pp0_iter9_reg;
reg   [5:0] trunc_ln167_11_reg_918_pp0_iter10_reg;
reg   [5:0] trunc_ln167_11_reg_918_pp0_iter11_reg;
reg   [5:0] trunc_ln167_11_reg_918_pp0_iter12_reg;
reg    ap_block_pp0_stage5_11001;
reg   [57:0] trunc_ln167_6_reg_929;
wire   [5:0] trunc_ln167_13_fu_512_p1;
reg   [5:0] trunc_ln167_13_reg_934;
reg   [5:0] trunc_ln167_13_reg_934_pp0_iter1_reg;
reg   [5:0] trunc_ln167_13_reg_934_pp0_iter2_reg;
reg   [5:0] trunc_ln167_13_reg_934_pp0_iter3_reg;
reg   [5:0] trunc_ln167_13_reg_934_pp0_iter4_reg;
reg   [5:0] trunc_ln167_13_reg_934_pp0_iter5_reg;
reg   [5:0] trunc_ln167_13_reg_934_pp0_iter6_reg;
reg   [5:0] trunc_ln167_13_reg_934_pp0_iter7_reg;
reg   [5:0] trunc_ln167_13_reg_934_pp0_iter8_reg;
reg   [5:0] trunc_ln167_13_reg_934_pp0_iter9_reg;
reg   [5:0] trunc_ln167_13_reg_934_pp0_iter10_reg;
reg   [5:0] trunc_ln167_13_reg_934_pp0_iter11_reg;
reg   [5:0] trunc_ln167_13_reg_934_pp0_iter12_reg;
reg   [57:0] trunc_ln167_8_reg_945;
wire   [5:0] trunc_ln167_15_fu_541_p1;
reg   [5:0] trunc_ln167_15_reg_950;
reg   [5:0] trunc_ln167_15_reg_950_pp0_iter2_reg;
reg   [5:0] trunc_ln167_15_reg_950_pp0_iter3_reg;
reg   [5:0] trunc_ln167_15_reg_950_pp0_iter4_reg;
reg   [5:0] trunc_ln167_15_reg_950_pp0_iter5_reg;
reg   [5:0] trunc_ln167_15_reg_950_pp0_iter6_reg;
reg   [5:0] trunc_ln167_15_reg_950_pp0_iter7_reg;
reg   [5:0] trunc_ln167_15_reg_950_pp0_iter8_reg;
reg   [5:0] trunc_ln167_15_reg_950_pp0_iter9_reg;
reg   [5:0] trunc_ln167_15_reg_950_pp0_iter10_reg;
reg   [5:0] trunc_ln167_15_reg_950_pp0_iter11_reg;
reg   [5:0] trunc_ln167_15_reg_950_pp0_iter12_reg;
reg   [5:0] trunc_ln167_15_reg_950_pp0_iter13_reg;
reg   [511:0] gmem_addr_read_reg_961;
wire   [7:0] sum_fu_571_p1;
reg   [7:0] sum_reg_966;
reg   [511:0] gmem_addr_1_read_reg_971;
wire   [7:0] trunc_ln167_7_fu_591_p1;
reg   [7:0] trunc_ln167_7_reg_976;
reg   [511:0] gmem_addr_2_read_reg_981;
reg   [511:0] gmem_addr_3_read_reg_986;
wire   [8:0] add_ln167_4_fu_622_p2;
reg   [8:0] add_ln167_4_reg_991;
wire   [7:0] trunc_ln167_12_fu_644_p1;
reg   [7:0] trunc_ln167_12_reg_996;
reg   [511:0] gmem_addr_4_read_reg_1001;
reg   [511:0] gmem_addr_5_read_reg_1006;
wire   [8:0] tmp4_fu_675_p2;
reg   [8:0] tmp4_reg_1011;
wire  signed [10:0] add_ln170_fu_738_p2;
reg  signed [10:0] add_ln170_reg_1016;
wire   [0:0] icmp_ln170_fu_774_p2;
reg   [0:0] icmp_ln170_reg_1027;
reg   [0:0] icmp_ln170_reg_1027_pp0_iter14_reg;
reg   [0:0] icmp_ln170_reg_1027_pp0_iter15_reg;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage4_subdone;
wire   [63:0] zext_ln171_1_fu_798_p1;
wire  signed [63:0] sext_ln167_fu_391_p1;
wire  signed [63:0] sext_ln167_1_fu_420_p1;
wire  signed [63:0] sext_ln167_2_fu_449_p1;
wire  signed [63:0] sext_ln167_3_fu_487_p1;
wire  signed [63:0] sext_ln167_4_fu_516_p1;
wire  signed [63:0] sext_ln167_5_fu_545_p1;
reg   [9:0] c_fu_108;
wire   [9:0] add_ln171_fu_354_p2;
wire    ap_loop_init;
reg   [8:0] r_fu_112;
wire   [8:0] select_ln158_fu_279_p3;
reg   [18:0] indvar_flatten48_fu_116;
wire   [18:0] add_ln158_fu_247_p2;
reg    temp_buf_we0_local;
wire   [7:0] pixel_fu_789_p3;
reg    temp_buf_ce0_local;
wire   [0:0] icmp_ln160_fu_259_p2;
wire   [8:0] indvars_iv_next25_i74106_fu_273_p2;
wire   [17:0] tmp_fu_287_p3;
wire   [15:0] tmp_23_fu_299_p3;
wire   [18:0] p_shl_fu_295_p1;
wire   [18:0] p_shl32_fu_307_p1;
wire   [9:0] select_ln131_fu_265_p3;
wire   [18:0] zext_ln160_1_fu_321_p1;
wire   [18:0] empty_fu_311_p2;
wire   [63:0] add_ln163_cast_fu_331_p1;
wire   [10:0] zext_ln160_fu_317_p1;
wire   [10:0] add_ln171_2_fu_360_p2;
wire   [18:0] zext_ln171_fu_366_p1;
wire   [63:0] add_ln167_fu_401_p2;
wire   [63:0] add_ln167_1_fu_430_p2;
wire   [18:0] tmp23_fu_459_p2;
wire   [63:0] tmp23_cast_fu_464_p1;
wire   [63:0] add_ln167_2_fu_497_p2;
wire   [63:0] add_ln167_3_fu_526_p2;
wire   [8:0] shl_ln3_fu_555_p3;
wire   [511:0] zext_ln167_fu_562_p1;
wire   [511:0] lshr_ln167_fu_566_p2;
wire   [8:0] shl_ln167_1_fu_575_p3;
wire   [511:0] zext_ln167_1_fu_582_p1;
wire   [511:0] lshr_ln167_1_fu_586_p2;
wire   [8:0] shl_ln167_2_fu_598_p3;
wire   [511:0] zext_ln167_3_fu_605_p1;
wire   [511:0] lshr_ln167_2_fu_609_p2;
wire   [7:0] trunc_ln167_10_fu_614_p1;
wire   [8:0] trunc_ln167_5_cast_fu_618_p1;
wire   [8:0] zext_ln133_fu_595_p1;
wire   [8:0] shl_ln167_3_fu_628_p3;
wire   [511:0] zext_ln167_4_fu_635_p1;
wire   [511:0] lshr_ln167_3_fu_639_p2;
wire   [8:0] shl_ln167_4_fu_651_p3;
wire   [511:0] zext_ln167_6_fu_658_p1;
wire   [511:0] lshr_ln167_4_fu_662_p2;
wire   [7:0] trunc_ln167_14_fu_667_p1;
wire   [8:0] zext_ln167_2_fu_648_p1;
wire   [8:0] zext_ln167_7_fu_671_p1;
wire   [8:0] shl_ln167_5_fu_684_p3;
wire   [511:0] zext_ln167_8_fu_691_p1;
wire   [511:0] lshr_ln167_5_fu_695_p2;
wire   [7:0] trunc_ln167_16_fu_700_p1;
wire   [9:0] tmp_s_fu_708_p3;
wire   [9:0] zext_ln167_9_fu_719_p1;
wire   [9:0] zext_ln167_5_fu_681_p1;
wire   [9:0] sub_ln167_fu_722_p2;
wire   [9:0] trunc_ln167_11_cast_fu_704_p1;
wire   [9:0] sub_ln167_1_fu_728_p2;
wire  signed [10:0] sext_ln170_fu_734_p1;
wire  signed [10:0] sext_ln167_6_fu_715_p1;
wire   [4:0] select_ln170_fu_744_p3;
wire   [5:0] grp_fu_754_p1;
wire   [12:0] Ny_fu_759_p3;
wire  signed [13:0] sext_ln170_1_fu_771_p1;
wire   [13:0] zext_ln170_1_fu_767_p1;
wire   [7:0] grp_fu_754_p2;
wire   [0:0] xor_ln170_fu_780_p2;
wire   [7:0] trunc_ln170_fu_785_p1;
reg    grp_fu_754_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter14_stage4;
reg    ap_idle_pp0_0to13;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg   [5:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to15;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire   [10:0] grp_fu_754_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 c_fu_108 = 10'd0;
#0 r_fu_112 = 9'd0;
#0 indvar_flatten48_fu_116 = 19'd0;
#0 ap_done_reg = 1'b0;
end

edgedetect_sdiv_11s_6ns_8_15_1 #(
    .ID( 1 ),
    .NUM_STAGE( 15 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 8 ))
sdiv_11s_6ns_8_15_1_U94(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(add_ln170_reg_1016),
    .din1(grp_fu_754_p1),
    .ce(grp_fu_754_ce),
    .dout(grp_fu_754_p2)
);

edgedetect_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage5),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone) & (ap_loop_exit_ready_pp0_iter14_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage5)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_subdone))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_subdone))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_subdone))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_subdone))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_subdone))) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter15 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_subdone))) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_subdone))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_subdone))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_subdone))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_subdone))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_subdone))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_subdone))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_subdone))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter14_stage4) & (ap_idle_pp0_0to13 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter14_stage4) & (ap_idle_pp0_0to13 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter14_stage4) & (ap_idle_pp0_0to13 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter12_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter14_stage4) & (ap_idle_pp0_0to13 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter13_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter14_stage4) & (ap_idle_pp0_0to13 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter14_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter14_stage4) & (ap_idle_pp0_0to13 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter14_stage4) & (ap_idle_pp0_0to13 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter14_stage4) & (ap_idle_pp0_0to13 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter14_stage4) & (ap_idle_pp0_0to13 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter14_stage4) & (ap_idle_pp0_0to13 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter14_stage4) & (ap_idle_pp0_0to13 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter14_stage4) & (ap_idle_pp0_0to13 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter14_stage4) & (ap_idle_pp0_0to13 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter14_stage4) & (ap_idle_pp0_0to13 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        c_fu_108 <= 10'd0;
    end else if (((icmp_ln158_fu_241_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        c_fu_108 <= add_ln171_fu_354_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten48_fu_116 <= 19'd0;
    end else if (((icmp_ln158_fu_241_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        indvar_flatten48_fu_116 <= add_ln158_fu_247_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r_fu_112 <= 9'd0;
    end else if (((icmp_ln158_fu_241_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        r_fu_112 <= select_ln158_fu_279_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln163_reg_843 <= add_ln163_fu_325_p2;
        add_ln170_reg_1016 <= add_ln170_fu_738_p2;
        add_ln171_1_reg_864 <= add_ln171_1_fu_370_p2;
        add_ln171_1_reg_864_pp0_iter10_reg <= add_ln171_1_reg_864_pp0_iter9_reg;
        add_ln171_1_reg_864_pp0_iter11_reg <= add_ln171_1_reg_864_pp0_iter10_reg;
        add_ln171_1_reg_864_pp0_iter12_reg <= add_ln171_1_reg_864_pp0_iter11_reg;
        add_ln171_1_reg_864_pp0_iter13_reg <= add_ln171_1_reg_864_pp0_iter12_reg;
        add_ln171_1_reg_864_pp0_iter14_reg <= add_ln171_1_reg_864_pp0_iter13_reg;
        add_ln171_1_reg_864_pp0_iter15_reg <= add_ln171_1_reg_864_pp0_iter14_reg;
        add_ln171_1_reg_864_pp0_iter1_reg <= add_ln171_1_reg_864;
        add_ln171_1_reg_864_pp0_iter2_reg <= add_ln171_1_reg_864_pp0_iter1_reg;
        add_ln171_1_reg_864_pp0_iter3_reg <= add_ln171_1_reg_864_pp0_iter2_reg;
        add_ln171_1_reg_864_pp0_iter4_reg <= add_ln171_1_reg_864_pp0_iter3_reg;
        add_ln171_1_reg_864_pp0_iter5_reg <= add_ln171_1_reg_864_pp0_iter4_reg;
        add_ln171_1_reg_864_pp0_iter6_reg <= add_ln171_1_reg_864_pp0_iter5_reg;
        add_ln171_1_reg_864_pp0_iter7_reg <= add_ln171_1_reg_864_pp0_iter6_reg;
        add_ln171_1_reg_864_pp0_iter8_reg <= add_ln171_1_reg_864_pp0_iter7_reg;
        add_ln171_1_reg_864_pp0_iter9_reg <= add_ln171_1_reg_864_pp0_iter8_reg;
        empty_32_reg_848 <= empty_32_fu_335_p2;
        gmem_addr_read_reg_961 <= m_axi_gmem_RDATA;
        icmp_ln158_reg_839 <= icmp_ln158_fu_241_p2;
        icmp_ln158_reg_839_pp0_iter10_reg <= icmp_ln158_reg_839_pp0_iter9_reg;
        icmp_ln158_reg_839_pp0_iter11_reg <= icmp_ln158_reg_839_pp0_iter10_reg;
        icmp_ln158_reg_839_pp0_iter12_reg <= icmp_ln158_reg_839_pp0_iter11_reg;
        icmp_ln158_reg_839_pp0_iter13_reg <= icmp_ln158_reg_839_pp0_iter12_reg;
        icmp_ln158_reg_839_pp0_iter14_reg <= icmp_ln158_reg_839_pp0_iter13_reg;
        icmp_ln158_reg_839_pp0_iter1_reg <= icmp_ln158_reg_839;
        icmp_ln158_reg_839_pp0_iter2_reg <= icmp_ln158_reg_839_pp0_iter1_reg;
        icmp_ln158_reg_839_pp0_iter3_reg <= icmp_ln158_reg_839_pp0_iter2_reg;
        icmp_ln158_reg_839_pp0_iter4_reg <= icmp_ln158_reg_839_pp0_iter3_reg;
        icmp_ln158_reg_839_pp0_iter5_reg <= icmp_ln158_reg_839_pp0_iter4_reg;
        icmp_ln158_reg_839_pp0_iter6_reg <= icmp_ln158_reg_839_pp0_iter5_reg;
        icmp_ln158_reg_839_pp0_iter7_reg <= icmp_ln158_reg_839_pp0_iter6_reg;
        icmp_ln158_reg_839_pp0_iter8_reg <= icmp_ln158_reg_839_pp0_iter7_reg;
        icmp_ln158_reg_839_pp0_iter9_reg <= icmp_ln158_reg_839_pp0_iter8_reg;
        trunc_ln167_reg_859 <= trunc_ln167_fu_350_p1;
        trunc_ln167_reg_859_pp0_iter10_reg <= trunc_ln167_reg_859_pp0_iter9_reg;
        trunc_ln167_reg_859_pp0_iter11_reg <= trunc_ln167_reg_859_pp0_iter10_reg;
        trunc_ln167_reg_859_pp0_iter12_reg <= trunc_ln167_reg_859_pp0_iter11_reg;
        trunc_ln167_reg_859_pp0_iter1_reg <= trunc_ln167_reg_859;
        trunc_ln167_reg_859_pp0_iter2_reg <= trunc_ln167_reg_859_pp0_iter1_reg;
        trunc_ln167_reg_859_pp0_iter3_reg <= trunc_ln167_reg_859_pp0_iter2_reg;
        trunc_ln167_reg_859_pp0_iter4_reg <= trunc_ln167_reg_859_pp0_iter3_reg;
        trunc_ln167_reg_859_pp0_iter5_reg <= trunc_ln167_reg_859_pp0_iter4_reg;
        trunc_ln167_reg_859_pp0_iter6_reg <= trunc_ln167_reg_859_pp0_iter5_reg;
        trunc_ln167_reg_859_pp0_iter7_reg <= trunc_ln167_reg_859_pp0_iter6_reg;
        trunc_ln167_reg_859_pp0_iter8_reg <= trunc_ln167_reg_859_pp0_iter7_reg;
        trunc_ln167_reg_859_pp0_iter9_reg <= trunc_ln167_reg_859_pp0_iter8_reg;
        trunc_ln167_s_reg_854 <= {{empty_32_fu_335_p2[63:6]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        add_ln167_4_reg_991 <= add_ln167_4_fu_622_p2;
        empty_33_reg_907 <= empty_33_fu_468_p2;
        gmem_addr_3_read_reg_986 <= m_axi_gmem_RDATA;
        trunc_ln167_11_reg_918 <= trunc_ln167_11_fu_483_p1;
        trunc_ln167_11_reg_918_pp0_iter10_reg <= trunc_ln167_11_reg_918_pp0_iter9_reg;
        trunc_ln167_11_reg_918_pp0_iter11_reg <= trunc_ln167_11_reg_918_pp0_iter10_reg;
        trunc_ln167_11_reg_918_pp0_iter12_reg <= trunc_ln167_11_reg_918_pp0_iter11_reg;
        trunc_ln167_11_reg_918_pp0_iter1_reg <= trunc_ln167_11_reg_918;
        trunc_ln167_11_reg_918_pp0_iter2_reg <= trunc_ln167_11_reg_918_pp0_iter1_reg;
        trunc_ln167_11_reg_918_pp0_iter3_reg <= trunc_ln167_11_reg_918_pp0_iter2_reg;
        trunc_ln167_11_reg_918_pp0_iter4_reg <= trunc_ln167_11_reg_918_pp0_iter3_reg;
        trunc_ln167_11_reg_918_pp0_iter5_reg <= trunc_ln167_11_reg_918_pp0_iter4_reg;
        trunc_ln167_11_reg_918_pp0_iter6_reg <= trunc_ln167_11_reg_918_pp0_iter5_reg;
        trunc_ln167_11_reg_918_pp0_iter7_reg <= trunc_ln167_11_reg_918_pp0_iter6_reg;
        trunc_ln167_11_reg_918_pp0_iter8_reg <= trunc_ln167_11_reg_918_pp0_iter7_reg;
        trunc_ln167_11_reg_918_pp0_iter9_reg <= trunc_ln167_11_reg_918_pp0_iter8_reg;
        trunc_ln167_4_reg_913 <= {{empty_33_fu_468_p2[63:6]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        gmem_addr_1_read_reg_971 <= m_axi_gmem_RDATA;
        icmp_ln170_reg_1027 <= icmp_ln170_fu_774_p2;
        icmp_ln170_reg_1027_pp0_iter14_reg <= icmp_ln170_reg_1027;
        icmp_ln170_reg_1027_pp0_iter15_reg <= icmp_ln170_reg_1027_pp0_iter14_reg;
        sum_reg_966 <= sum_fu_571_p1;
        trunc_ln167_1_reg_875 <= {{add_ln167_fu_401_p2[63:6]}};
        trunc_ln167_5_reg_880 <= trunc_ln167_5_fu_416_p1;
        trunc_ln167_5_reg_880_pp0_iter10_reg <= trunc_ln167_5_reg_880_pp0_iter9_reg;
        trunc_ln167_5_reg_880_pp0_iter11_reg <= trunc_ln167_5_reg_880_pp0_iter10_reg;
        trunc_ln167_5_reg_880_pp0_iter12_reg <= trunc_ln167_5_reg_880_pp0_iter11_reg;
        trunc_ln167_5_reg_880_pp0_iter1_reg <= trunc_ln167_5_reg_880;
        trunc_ln167_5_reg_880_pp0_iter2_reg <= trunc_ln167_5_reg_880_pp0_iter1_reg;
        trunc_ln167_5_reg_880_pp0_iter3_reg <= trunc_ln167_5_reg_880_pp0_iter2_reg;
        trunc_ln167_5_reg_880_pp0_iter4_reg <= trunc_ln167_5_reg_880_pp0_iter3_reg;
        trunc_ln167_5_reg_880_pp0_iter5_reg <= trunc_ln167_5_reg_880_pp0_iter4_reg;
        trunc_ln167_5_reg_880_pp0_iter6_reg <= trunc_ln167_5_reg_880_pp0_iter5_reg;
        trunc_ln167_5_reg_880_pp0_iter7_reg <= trunc_ln167_5_reg_880_pp0_iter6_reg;
        trunc_ln167_5_reg_880_pp0_iter8_reg <= trunc_ln167_5_reg_880_pp0_iter7_reg;
        trunc_ln167_5_reg_880_pp0_iter9_reg <= trunc_ln167_5_reg_880_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        gmem_addr_2_read_reg_981 <= m_axi_gmem_RDATA;
        trunc_ln167_2_reg_891 <= {{add_ln167_1_fu_430_p2[63:6]}};
        trunc_ln167_7_reg_976 <= trunc_ln167_7_fu_591_p1;
        trunc_ln167_9_reg_896 <= trunc_ln167_9_fu_445_p1;
        trunc_ln167_9_reg_896_pp0_iter10_reg <= trunc_ln167_9_reg_896_pp0_iter9_reg;
        trunc_ln167_9_reg_896_pp0_iter11_reg <= trunc_ln167_9_reg_896_pp0_iter10_reg;
        trunc_ln167_9_reg_896_pp0_iter12_reg <= trunc_ln167_9_reg_896_pp0_iter11_reg;
        trunc_ln167_9_reg_896_pp0_iter1_reg <= trunc_ln167_9_reg_896;
        trunc_ln167_9_reg_896_pp0_iter2_reg <= trunc_ln167_9_reg_896_pp0_iter1_reg;
        trunc_ln167_9_reg_896_pp0_iter3_reg <= trunc_ln167_9_reg_896_pp0_iter2_reg;
        trunc_ln167_9_reg_896_pp0_iter4_reg <= trunc_ln167_9_reg_896_pp0_iter3_reg;
        trunc_ln167_9_reg_896_pp0_iter5_reg <= trunc_ln167_9_reg_896_pp0_iter4_reg;
        trunc_ln167_9_reg_896_pp0_iter6_reg <= trunc_ln167_9_reg_896_pp0_iter5_reg;
        trunc_ln167_9_reg_896_pp0_iter7_reg <= trunc_ln167_9_reg_896_pp0_iter6_reg;
        trunc_ln167_9_reg_896_pp0_iter8_reg <= trunc_ln167_9_reg_896_pp0_iter7_reg;
        trunc_ln167_9_reg_896_pp0_iter9_reg <= trunc_ln167_9_reg_896_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        gmem_addr_4_read_reg_1001 <= m_axi_gmem_RDATA;
        trunc_ln167_12_reg_996 <= trunc_ln167_12_fu_644_p1;
        trunc_ln167_13_reg_934 <= trunc_ln167_13_fu_512_p1;
        trunc_ln167_13_reg_934_pp0_iter10_reg <= trunc_ln167_13_reg_934_pp0_iter9_reg;
        trunc_ln167_13_reg_934_pp0_iter11_reg <= trunc_ln167_13_reg_934_pp0_iter10_reg;
        trunc_ln167_13_reg_934_pp0_iter12_reg <= trunc_ln167_13_reg_934_pp0_iter11_reg;
        trunc_ln167_13_reg_934_pp0_iter1_reg <= trunc_ln167_13_reg_934;
        trunc_ln167_13_reg_934_pp0_iter2_reg <= trunc_ln167_13_reg_934_pp0_iter1_reg;
        trunc_ln167_13_reg_934_pp0_iter3_reg <= trunc_ln167_13_reg_934_pp0_iter2_reg;
        trunc_ln167_13_reg_934_pp0_iter4_reg <= trunc_ln167_13_reg_934_pp0_iter3_reg;
        trunc_ln167_13_reg_934_pp0_iter5_reg <= trunc_ln167_13_reg_934_pp0_iter4_reg;
        trunc_ln167_13_reg_934_pp0_iter6_reg <= trunc_ln167_13_reg_934_pp0_iter5_reg;
        trunc_ln167_13_reg_934_pp0_iter7_reg <= trunc_ln167_13_reg_934_pp0_iter6_reg;
        trunc_ln167_13_reg_934_pp0_iter8_reg <= trunc_ln167_13_reg_934_pp0_iter7_reg;
        trunc_ln167_13_reg_934_pp0_iter9_reg <= trunc_ln167_13_reg_934_pp0_iter8_reg;
        trunc_ln167_6_reg_929 <= {{add_ln167_2_fu_497_p2[63:6]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        gmem_addr_5_read_reg_1006 <= m_axi_gmem_RDATA;
        tmp4_reg_1011 <= tmp4_fu_675_p2;
        trunc_ln167_15_reg_950 <= trunc_ln167_15_fu_541_p1;
        trunc_ln167_15_reg_950_pp0_iter10_reg <= trunc_ln167_15_reg_950_pp0_iter9_reg;
        trunc_ln167_15_reg_950_pp0_iter11_reg <= trunc_ln167_15_reg_950_pp0_iter10_reg;
        trunc_ln167_15_reg_950_pp0_iter12_reg <= trunc_ln167_15_reg_950_pp0_iter11_reg;
        trunc_ln167_15_reg_950_pp0_iter13_reg <= trunc_ln167_15_reg_950_pp0_iter12_reg;
        trunc_ln167_15_reg_950_pp0_iter2_reg <= trunc_ln167_15_reg_950;
        trunc_ln167_15_reg_950_pp0_iter3_reg <= trunc_ln167_15_reg_950_pp0_iter2_reg;
        trunc_ln167_15_reg_950_pp0_iter4_reg <= trunc_ln167_15_reg_950_pp0_iter3_reg;
        trunc_ln167_15_reg_950_pp0_iter5_reg <= trunc_ln167_15_reg_950_pp0_iter4_reg;
        trunc_ln167_15_reg_950_pp0_iter6_reg <= trunc_ln167_15_reg_950_pp0_iter5_reg;
        trunc_ln167_15_reg_950_pp0_iter7_reg <= trunc_ln167_15_reg_950_pp0_iter6_reg;
        trunc_ln167_15_reg_950_pp0_iter8_reg <= trunc_ln167_15_reg_950_pp0_iter7_reg;
        trunc_ln167_15_reg_950_pp0_iter9_reg <= trunc_ln167_15_reg_950_pp0_iter8_reg;
        trunc_ln167_8_reg_945 <= {{add_ln167_3_fu_526_p2[63:6]}};
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_subdone) & (icmp_ln158_reg_839 == 1'd1))) begin
        ap_condition_exit_pp0_iter0_stage5 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (icmp_ln158_reg_839_pp0_iter14_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
        ap_condition_exit_pp0_iter14_stage4 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter14_stage4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone) & (ap_loop_exit_ready_pp0_iter14_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to13 = 1'b1;
    end else begin
        ap_idle_pp0_0to13 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to15 = 1'b1;
    end else begin
        ap_idle_pp0_1to15 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln158_reg_839 == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5) & (icmp_ln158_reg_839 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4) & (icmp_ln158_reg_839 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3) & (icmp_ln158_reg_839 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (icmp_ln158_reg_839 == 1'd0)))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        grp_fu_754_ce = 1'b1;
    end else begin
        grp_fu_754_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        m_axi_gmem_ARADDR = sext_ln167_5_fu_545_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln158_reg_839 == 1'd0))) begin
        m_axi_gmem_ARADDR = sext_ln167_4_fu_516_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln158_reg_839 == 1'd0))) begin
        m_axi_gmem_ARADDR = sext_ln167_3_fu_487_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln158_reg_839 == 1'd0))) begin
        m_axi_gmem_ARADDR = sext_ln167_2_fu_449_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln158_reg_839 == 1'd0))) begin
        m_axi_gmem_ARADDR = sext_ln167_1_fu_420_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln158_reg_839 == 1'd0))) begin
        m_axi_gmem_ARADDR = sext_ln167_fu_391_p1;
    end else begin
        m_axi_gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln158_reg_839 == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln158_reg_839 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln158_reg_839 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln158_reg_839 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln158_reg_839 == 1'd0)))) begin
        m_axi_gmem_ARVALID = 1'b1;
    end else begin
        m_axi_gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        m_axi_gmem_RREADY = 1'b1;
    end else begin
        m_axi_gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        temp_buf_ce0_local = 1'b1;
    end else begin
        temp_buf_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        temp_buf_we0_local = 1'b1;
    end else begin
        temp_buf_we0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to15 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if (((1'b1 == ap_condition_exit_pp0_iter14_stage4) & (ap_idle_pp0_0to13 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Ny_fu_759_p3 = {{select_ln170_fu_744_p3}, {8'd0}};

assign add_ln158_fu_247_p2 = (indvar_flatten48_fu_116 + 19'd1);

assign add_ln163_cast_fu_331_p1 = add_ln163_fu_325_p2;

assign add_ln163_fu_325_p2 = (zext_ln160_1_fu_321_p1 + empty_fu_311_p2);

assign add_ln167_1_fu_430_p2 = (empty_32_reg_848 + 64'd2);

assign add_ln167_2_fu_497_p2 = (empty_33_reg_907 + 64'd1);

assign add_ln167_3_fu_526_p2 = (empty_33_reg_907 + 64'd2);

assign add_ln167_4_fu_622_p2 = (trunc_ln167_5_cast_fu_618_p1 + zext_ln133_fu_595_p1);

assign add_ln167_fu_401_p2 = (empty_32_reg_848 + 64'd1);

assign add_ln170_fu_738_p2 = ($signed(sext_ln170_fu_734_p1) + $signed(sext_ln167_6_fu_715_p1));

assign add_ln171_1_fu_370_p2 = (zext_ln171_fu_366_p1 + empty_fu_311_p2);

assign add_ln171_2_fu_360_p2 = (zext_ln160_fu_317_p1 + 11'd641);

assign add_ln171_fu_354_p2 = (select_ln131_fu_265_p3 + 10'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_block_state79_pp0_stage0_iter13)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state7_io)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_block_state79_pp0_stage0_iter13)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state7_io)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem_ARREADY == 1'b0)) | ((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_block_state74_pp0_stage1_iter12)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem_ARREADY == 1'b0)) | ((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_block_state74_pp0_stage1_iter12)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_block_state75_pp0_stage2_iter12)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_io)));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_block_state75_pp0_stage2_iter12)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_io)));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001 = (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_block_state76_pp0_stage3_iter12)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state4_io)));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_block_state76_pp0_stage3_iter12)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state4_io)));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_11001 = (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_block_state77_pp0_stage4_iter12)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state5_io)));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_block_state77_pp0_stage4_iter12)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state5_io)));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_11001 = (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_block_state78_pp0_stage5_iter12)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state6_io)));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_block_state78_pp0_stage5_iter12)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state6_io)));
end

always @ (*) begin
    ap_block_state3_io = ((icmp_ln158_reg_839 == 1'd0) & (m_axi_gmem_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state4_io = ((icmp_ln158_reg_839 == 1'd0) & (m_axi_gmem_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state5_io = ((icmp_ln158_reg_839 == 1'd0) & (m_axi_gmem_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state6_io = ((icmp_ln158_reg_839 == 1'd0) & (m_axi_gmem_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state74_pp0_stage1_iter12 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state75_pp0_stage2_iter12 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state76_pp0_stage3_iter12 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state77_pp0_stage4_iter12 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state78_pp0_stage5_iter12 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state79_pp0_stage0_iter13 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state7_io = ((icmp_ln158_reg_839 == 1'd0) & (m_axi_gmem_ARREADY == 1'b0));
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage5;

assign ap_ready = ap_ready_sig;

assign empty_32_fu_335_p2 = (add_ln163_cast_fu_331_p1 + output_r);

assign empty_33_fu_468_p2 = (tmp23_cast_fu_464_p1 + output_r);

assign empty_fu_311_p2 = (p_shl_fu_295_p1 + p_shl32_fu_307_p1);

assign grp_fu_754_p1 = grp_fu_754_p10;

assign grp_fu_754_p10 = select_ln170_fu_744_p3;

assign icmp_ln158_fu_241_p2 = ((indvar_flatten48_fu_116 == 19'd304964) ? 1'b1 : 1'b0);

assign icmp_ln160_fu_259_p2 = ((c_fu_108 == 10'd638) ? 1'b1 : 1'b0);

assign icmp_ln170_fu_774_p2 = (($signed(sext_ln170_1_fu_771_p1) < $signed(zext_ln170_1_fu_767_p1)) ? 1'b1 : 1'b0);

assign indvars_iv_next25_i74106_fu_273_p2 = (r_fu_112 + 9'd1);

assign lshr_ln167_1_fu_586_p2 = gmem_addr_1_read_reg_971 >> zext_ln167_1_fu_582_p1;

assign lshr_ln167_2_fu_609_p2 = gmem_addr_2_read_reg_981 >> zext_ln167_3_fu_605_p1;

assign lshr_ln167_3_fu_639_p2 = gmem_addr_3_read_reg_986 >> zext_ln167_4_fu_635_p1;

assign lshr_ln167_4_fu_662_p2 = gmem_addr_4_read_reg_1001 >> zext_ln167_6_fu_658_p1;

assign lshr_ln167_5_fu_695_p2 = gmem_addr_5_read_reg_1006 >> zext_ln167_8_fu_691_p1;

assign lshr_ln167_fu_566_p2 = gmem_addr_read_reg_961 >> zext_ln167_fu_562_p1;

assign m_axi_gmem_ARBURST = 2'd0;

assign m_axi_gmem_ARCACHE = 4'd0;

assign m_axi_gmem_ARID = 1'd0;

assign m_axi_gmem_ARLEN = 64'd1;

assign m_axi_gmem_ARLOCK = 2'd0;

assign m_axi_gmem_ARPROT = 3'd0;

assign m_axi_gmem_ARQOS = 4'd0;

assign m_axi_gmem_ARREGION = 4'd0;

assign m_axi_gmem_ARSIZE = 3'd0;

assign m_axi_gmem_ARUSER = 1'd0;

assign m_axi_gmem_AWADDR = 64'd0;

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLEN = 32'd0;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_AWVALID = 1'b0;

assign m_axi_gmem_BREADY = 1'b0;

assign m_axi_gmem_WDATA = 512'd0;

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WSTRB = 64'd0;

assign m_axi_gmem_WUSER = 1'd0;

assign m_axi_gmem_WVALID = 1'b0;

assign p_shl32_fu_307_p1 = tmp_23_fu_299_p3;

assign p_shl_fu_295_p1 = tmp_fu_287_p3;

assign pixel_fu_789_p3 = ((xor_ln170_fu_780_p2[0:0] == 1'b1) ? 8'd255 : trunc_ln170_fu_785_p1);

assign select_ln131_fu_265_p3 = ((icmp_ln160_fu_259_p2[0:0] == 1'b1) ? 10'd0 : c_fu_108);

assign select_ln158_fu_279_p3 = ((icmp_ln160_fu_259_p2[0:0] == 1'b1) ? indvars_iv_next25_i74106_fu_273_p2 : r_fu_112);

assign select_ln170_fu_744_p3 = ((icmp_ln155[0:0] == 1'b1) ? 5'd1 : normal_factor_8_reload);

assign sext_ln167_1_fu_420_p1 = $signed(trunc_ln167_1_reg_875);

assign sext_ln167_2_fu_449_p1 = $signed(trunc_ln167_2_reg_891);

assign sext_ln167_3_fu_487_p1 = $signed(trunc_ln167_4_reg_913);

assign sext_ln167_4_fu_516_p1 = $signed(trunc_ln167_6_reg_929);

assign sext_ln167_5_fu_545_p1 = $signed(trunc_ln167_8_reg_945);

assign sext_ln167_6_fu_715_p1 = $signed(tmp_s_fu_708_p3);

assign sext_ln167_fu_391_p1 = $signed(trunc_ln167_s_reg_854);

assign sext_ln170_1_fu_771_p1 = add_ln170_reg_1016;

assign sext_ln170_fu_734_p1 = $signed(sub_ln167_1_fu_728_p2);

assign shl_ln167_1_fu_575_p3 = {{trunc_ln167_5_reg_880_pp0_iter12_reg}, {3'd0}};

assign shl_ln167_2_fu_598_p3 = {{trunc_ln167_9_reg_896_pp0_iter12_reg}, {3'd0}};

assign shl_ln167_3_fu_628_p3 = {{trunc_ln167_11_reg_918_pp0_iter12_reg}, {3'd0}};

assign shl_ln167_4_fu_651_p3 = {{trunc_ln167_13_reg_934_pp0_iter12_reg}, {3'd0}};

assign shl_ln167_5_fu_684_p3 = {{trunc_ln167_15_reg_950_pp0_iter13_reg}, {3'd0}};

assign shl_ln3_fu_555_p3 = {{trunc_ln167_reg_859_pp0_iter12_reg}, {3'd0}};

assign sub_ln167_1_fu_728_p2 = (sub_ln167_fu_722_p2 - trunc_ln167_11_cast_fu_704_p1);

assign sub_ln167_fu_722_p2 = (zext_ln167_9_fu_719_p1 - zext_ln167_5_fu_681_p1);

assign sum_fu_571_p1 = lshr_ln167_fu_566_p2[7:0];

assign temp_buf_address0 = zext_ln171_1_fu_798_p1;

assign temp_buf_ce0 = temp_buf_ce0_local;

assign temp_buf_d0 = pixel_fu_789_p3;

assign temp_buf_we0 = temp_buf_we0_local;

assign tmp23_cast_fu_464_p1 = tmp23_fu_459_p2;

assign tmp23_fu_459_p2 = (add_ln163_reg_843 + 19'd1280);

assign tmp4_fu_675_p2 = (zext_ln167_2_fu_648_p1 - zext_ln167_7_fu_671_p1);

assign tmp_23_fu_299_p3 = {{select_ln158_fu_279_p3}, {7'd0}};

assign tmp_fu_287_p3 = {{select_ln158_fu_279_p3}, {9'd0}};

assign tmp_s_fu_708_p3 = {{tmp4_reg_1011}, {1'd0}};

assign trunc_ln167_10_fu_614_p1 = lshr_ln167_2_fu_609_p2[7:0];

assign trunc_ln167_11_cast_fu_704_p1 = trunc_ln167_16_fu_700_p1;

assign trunc_ln167_11_fu_483_p1 = empty_33_fu_468_p2[5:0];

assign trunc_ln167_12_fu_644_p1 = lshr_ln167_3_fu_639_p2[7:0];

assign trunc_ln167_13_fu_512_p1 = add_ln167_2_fu_497_p2[5:0];

assign trunc_ln167_14_fu_667_p1 = lshr_ln167_4_fu_662_p2[7:0];

assign trunc_ln167_15_fu_541_p1 = add_ln167_3_fu_526_p2[5:0];

assign trunc_ln167_16_fu_700_p1 = lshr_ln167_5_fu_695_p2[7:0];

assign trunc_ln167_5_cast_fu_618_p1 = trunc_ln167_10_fu_614_p1;

assign trunc_ln167_5_fu_416_p1 = add_ln167_fu_401_p2[5:0];

assign trunc_ln167_7_fu_591_p1 = lshr_ln167_1_fu_586_p2[7:0];

assign trunc_ln167_9_fu_445_p1 = add_ln167_1_fu_430_p2[5:0];

assign trunc_ln167_fu_350_p1 = empty_32_fu_335_p2[5:0];

assign trunc_ln170_fu_785_p1 = grp_fu_754_p2[7:0];

assign xor_ln170_fu_780_p2 = (icmp_ln170_reg_1027_pp0_iter15_reg ^ 1'd1);

assign zext_ln133_fu_595_p1 = sum_reg_966;

assign zext_ln160_1_fu_321_p1 = select_ln131_fu_265_p3;

assign zext_ln160_fu_317_p1 = select_ln131_fu_265_p3;

assign zext_ln167_1_fu_582_p1 = shl_ln167_1_fu_575_p3;

assign zext_ln167_2_fu_648_p1 = trunc_ln167_7_reg_976;

assign zext_ln167_3_fu_605_p1 = shl_ln167_2_fu_598_p3;

assign zext_ln167_4_fu_635_p1 = shl_ln167_3_fu_628_p3;

assign zext_ln167_5_fu_681_p1 = trunc_ln167_12_reg_996;

assign zext_ln167_6_fu_658_p1 = shl_ln167_4_fu_651_p3;

assign zext_ln167_7_fu_671_p1 = trunc_ln167_14_fu_667_p1;

assign zext_ln167_8_fu_691_p1 = shl_ln167_5_fu_684_p3;

assign zext_ln167_9_fu_719_p1 = add_ln167_4_reg_991;

assign zext_ln167_fu_562_p1 = shl_ln3_fu_555_p3;

assign zext_ln170_1_fu_767_p1 = Ny_fu_759_p3;

assign zext_ln171_1_fu_798_p1 = add_ln171_1_reg_864_pp0_iter15_reg;

assign zext_ln171_fu_366_p1 = add_ln171_2_fu_360_p2;

endmodule //edgedetect_edgedetect_Pipeline_VITIS_LOOP_158_3_VITIS_LOOP_160_4
