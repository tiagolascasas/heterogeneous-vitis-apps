// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module edgedetect_edgedetect_Pipeline_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        image_gray_5_address0,
        image_gray_5_ce0,
        image_gray_5_we0,
        image_gray_5_d0,
        image_gray_4_address0,
        image_gray_4_ce0,
        image_gray_4_we0,
        image_gray_4_d0,
        image_gray_3_address0,
        image_gray_3_ce0,
        image_gray_3_we0,
        image_gray_3_d0,
        image_gray_2_address0,
        image_gray_2_ce0,
        image_gray_2_we0,
        image_gray_2_d0,
        image_gray_1_address0,
        image_gray_1_ce0,
        image_gray_1_we0,
        image_gray_1_d0,
        image_gray_address0,
        image_gray_ce0,
        image_gray_we0,
        image_gray_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [15:0] image_gray_5_address0;
output   image_gray_5_ce0;
output   image_gray_5_we0;
output  [7:0] image_gray_5_d0;
output  [15:0] image_gray_4_address0;
output   image_gray_4_ce0;
output   image_gray_4_we0;
output  [7:0] image_gray_4_d0;
output  [15:0] image_gray_3_address0;
output   image_gray_3_ce0;
output   image_gray_3_we0;
output  [7:0] image_gray_3_d0;
output  [15:0] image_gray_2_address0;
output   image_gray_2_ce0;
output   image_gray_2_we0;
output  [7:0] image_gray_2_d0;
output  [15:0] image_gray_1_address0;
output   image_gray_1_ce0;
output   image_gray_1_we0;
output  [7:0] image_gray_1_d0;
output  [15:0] image_gray_address0;
output   image_gray_ce0;
output   image_gray_we0;
output  [7:0] image_gray_d0;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] exitcond317_fu_175_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [63:0] p_cast38_fu_206_p1;
wire    ap_block_pp0_stage0;
reg   [18:0] phi_urem_fu_58;
wire   [18:0] idx_urem_fu_232_p3;
wire    ap_block_pp0_stage0_11001;
wire    ap_loop_init;
reg   [37:0] phi_mul_fu_62;
wire   [37:0] next_mul_fu_190_p2;
reg   [18:0] empty_fu_66;
wire   [18:0] empty_39_fu_181_p2;
reg    image_gray_4_we0_local;
wire   [2:0] empty_41_fu_216_p1;
reg    image_gray_4_ce0_local;
reg    image_gray_3_we0_local;
reg    image_gray_3_ce0_local;
reg    image_gray_2_we0_local;
reg    image_gray_2_ce0_local;
reg    image_gray_1_we0_local;
reg    image_gray_1_ce0_local;
reg    image_gray_we0_local;
reg    image_gray_ce0_local;
reg    image_gray_5_we0_local;
reg    image_gray_5_ce0_local;
wire   [15:0] tmp_fu_196_p4;
wire   [18:0] next_urem_fu_220_p2;
wire   [0:0] empty_40_fu_226_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 phi_urem_fu_58 = 19'd0;
#0 phi_mul_fu_62 = 38'd0;
#0 empty_fu_66 = 19'd0;
#0 ap_done_reg = 1'b0;
end

edgedetect_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            empty_fu_66 <= 19'd0;
        end else if (((exitcond317_fu_175_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            empty_fu_66 <= empty_39_fu_181_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            phi_mul_fu_62 <= 38'd0;
        end else if (((exitcond317_fu_175_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            phi_mul_fu_62 <= next_mul_fu_190_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            phi_urem_fu_58 <= 19'd0;
        end else if (((exitcond317_fu_175_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            phi_urem_fu_58 <= idx_urem_fu_232_p3;
        end
    end
end

always @ (*) begin
    if (((exitcond317_fu_175_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        image_gray_1_ce0_local = 1'b1;
    end else begin
        image_gray_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond317_fu_175_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_41_fu_216_p1 == 3'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        image_gray_1_we0_local = 1'b1;
    end else begin
        image_gray_1_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        image_gray_2_ce0_local = 1'b1;
    end else begin
        image_gray_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond317_fu_175_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_41_fu_216_p1 == 3'd2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        image_gray_2_we0_local = 1'b1;
    end else begin
        image_gray_2_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        image_gray_3_ce0_local = 1'b1;
    end else begin
        image_gray_3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond317_fu_175_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_41_fu_216_p1 == 3'd3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        image_gray_3_we0_local = 1'b1;
    end else begin
        image_gray_3_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        image_gray_4_ce0_local = 1'b1;
    end else begin
        image_gray_4_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond317_fu_175_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_41_fu_216_p1 == 3'd4) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        image_gray_4_we0_local = 1'b1;
    end else begin
        image_gray_4_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        image_gray_5_ce0_local = 1'b1;
    end else begin
        image_gray_5_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((~(empty_41_fu_216_p1 == 3'd0) & ~(empty_41_fu_216_p1 == 3'd1) & ~(empty_41_fu_216_p1 == 3'd2) & ~(empty_41_fu_216_p1 == 3'd3) & ~(empty_41_fu_216_p1 == 3'd4) & (exitcond317_fu_175_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        image_gray_5_we0_local = 1'b1;
    end else begin
        image_gray_5_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        image_gray_ce0_local = 1'b1;
    end else begin
        image_gray_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond317_fu_175_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_41_fu_216_p1 == 3'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        image_gray_we0_local = 1'b1;
    end else begin
        image_gray_we0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign ap_ready = ap_ready_sig;

assign empty_39_fu_181_p2 = (empty_fu_66 + 19'd1);

assign empty_40_fu_226_p2 = ((next_urem_fu_220_p2 < 19'd6) ? 1'b1 : 1'b0);

assign empty_41_fu_216_p1 = phi_urem_fu_58[2:0];

assign exitcond317_fu_175_p2 = ((empty_fu_66 == 19'd307200) ? 1'b1 : 1'b0);

assign idx_urem_fu_232_p3 = ((empty_40_fu_226_p2[0:0] == 1'b1) ? next_urem_fu_220_p2 : 19'd0);

assign image_gray_1_address0 = p_cast38_fu_206_p1;

assign image_gray_1_ce0 = image_gray_1_ce0_local;

assign image_gray_1_d0 = 8'd0;

assign image_gray_1_we0 = image_gray_1_we0_local;

assign image_gray_2_address0 = p_cast38_fu_206_p1;

assign image_gray_2_ce0 = image_gray_2_ce0_local;

assign image_gray_2_d0 = 8'd0;

assign image_gray_2_we0 = image_gray_2_we0_local;

assign image_gray_3_address0 = p_cast38_fu_206_p1;

assign image_gray_3_ce0 = image_gray_3_ce0_local;

assign image_gray_3_d0 = 8'd0;

assign image_gray_3_we0 = image_gray_3_we0_local;

assign image_gray_4_address0 = p_cast38_fu_206_p1;

assign image_gray_4_ce0 = image_gray_4_ce0_local;

assign image_gray_4_d0 = 8'd0;

assign image_gray_4_we0 = image_gray_4_we0_local;

assign image_gray_5_address0 = p_cast38_fu_206_p1;

assign image_gray_5_ce0 = image_gray_5_ce0_local;

assign image_gray_5_d0 = 8'd0;

assign image_gray_5_we0 = image_gray_5_we0_local;

assign image_gray_address0 = p_cast38_fu_206_p1;

assign image_gray_ce0 = image_gray_ce0_local;

assign image_gray_d0 = 8'd0;

assign image_gray_we0 = image_gray_we0_local;

assign next_mul_fu_190_p2 = (phi_mul_fu_62 + 38'd699051);

assign next_urem_fu_220_p2 = (phi_urem_fu_58 + 19'd1);

assign p_cast38_fu_206_p1 = tmp_fu_196_p4;

assign tmp_fu_196_p4 = {{phi_mul_fu_62[37:22]}};

endmodule //edgedetect_edgedetect_Pipeline_1
