-- ==============================================================
-- Generated by Vitis HLS v2024.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity edgedetect_edgedetect_Pipeline_VITIS_LOOP_108_3_VITIS_LOOP_110_4 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    image_gray_5_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    image_gray_5_ce0 : OUT STD_LOGIC;
    image_gray_5_we0 : OUT STD_LOGIC;
    image_gray_5_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    image_gray_4_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    image_gray_4_ce0 : OUT STD_LOGIC;
    image_gray_4_we0 : OUT STD_LOGIC;
    image_gray_4_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    image_gray_3_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    image_gray_3_ce0 : OUT STD_LOGIC;
    image_gray_3_we0 : OUT STD_LOGIC;
    image_gray_3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    image_gray_2_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    image_gray_2_ce0 : OUT STD_LOGIC;
    image_gray_2_we0 : OUT STD_LOGIC;
    image_gray_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    image_gray_1_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    image_gray_1_ce0 : OUT STD_LOGIC;
    image_gray_1_we0 : OUT STD_LOGIC;
    image_gray_1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    image_gray_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    image_gray_ce0 : OUT STD_LOGIC;
    image_gray_we0 : OUT STD_LOGIC;
    image_gray_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    output_r : IN STD_LOGIC_VECTOR (63 downto 0);
    normal_factor_5_reload : IN STD_LOGIC_VECTOR (4 downto 0);
    icmp_ln105 : IN STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of edgedetect_edgedetect_Pipeline_VITIS_LOOP_108_3_VITIS_LOOP_110_4 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv512_lc_1 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv19_4A744 : STD_LOGIC_VECTOR (18 downto 0) := "1001010011101000100";
    constant ap_const_lv19_1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    constant ap_const_lv10_27E : STD_LOGIC_VECTOR (9 downto 0) := "1001111110";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv11_281 : STD_LOGIC_VECTOR (10 downto 0) := "01010000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv39_AAAAB : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000010101010101010101011";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv19_6 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000110";
    constant ap_const_lv19_280 : STD_LOGIC_VECTOR (18 downto 0) := "0000000001010000000";
    constant ap_const_lv19_501 : STD_LOGIC_VECTOR (18 downto 0) := "0000000010100000001";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal icmp_ln108_reg_920 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state5_io : BOOLEAN;
    signal ap_block_state75_pp0_stage4_iter14 : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_condition_exit_pp0_iter0_stage4 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal gmem_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal gmem_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_block_state6_io : BOOLEAN;
    signal ap_block_state76_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln108_fu_324_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state77_pp0_stage1_iter15 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal icmp_ln108_reg_920_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln108_reg_920_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln108_reg_920_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln108_reg_920_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln108_reg_920_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln108_reg_920_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln108_reg_920_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln108_reg_920_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln108_reg_920_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln108_reg_920_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln108_reg_920_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln108_reg_920_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln108_reg_920_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln108_reg_920_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln108_reg_920_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln108_reg_920_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln108_reg_920_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln113_fu_408_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln113_reg_924 : STD_LOGIC_VECTOR (18 downto 0);
    signal empty_36_fu_418_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_36_reg_931 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln117_s_reg_936 : STD_LOGIC_VECTOR (57 downto 0);
    signal trunc_ln117_fu_433_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_reg_941 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_reg_941_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_reg_941_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_reg_941_pp0_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_reg_941_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_reg_941_pp0_iter5_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_reg_941_pp0_iter6_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_reg_941_pp0_iter7_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_reg_941_pp0_iter8_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_reg_941_pp0_iter9_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_reg_941_pp0_iter10_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_reg_941_pp0_iter11_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_reg_941_pp0_iter12_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_reg_941_pp0_iter13_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_reg_941_pp0_iter14_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln121_1_fu_453_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln121_1_reg_946 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_block_state3_io : BOOLEAN;
    signal ap_block_state78_pp0_stage2_iter15 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal trunc_ln117_2_reg_957 : STD_LOGIC_VECTOR (57 downto 0);
    signal trunc_ln117_3_fu_499_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_3_reg_962 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_3_reg_962_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_3_reg_962_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_3_reg_962_pp0_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_3_reg_962_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_3_reg_962_pp0_iter5_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_3_reg_962_pp0_iter6_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_3_reg_962_pp0_iter7_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_3_reg_962_pp0_iter8_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_3_reg_962_pp0_iter9_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_3_reg_962_pp0_iter10_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_3_reg_962_pp0_iter11_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_3_reg_962_pp0_iter12_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_3_reg_962_pp0_iter13_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_3_reg_962_pp0_iter14_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_31_reg_967 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_31_reg_967_pp0_iter1_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_31_reg_967_pp0_iter2_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_31_reg_967_pp0_iter3_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_31_reg_967_pp0_iter4_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_31_reg_967_pp0_iter5_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_31_reg_967_pp0_iter6_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_31_reg_967_pp0_iter7_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_31_reg_967_pp0_iter8_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_31_reg_967_pp0_iter9_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_31_reg_967_pp0_iter10_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_31_reg_967_pp0_iter11_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_31_reg_967_pp0_iter12_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_31_reg_967_pp0_iter13_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_31_reg_967_pp0_iter14_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_31_reg_967_pp0_iter15_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_31_reg_967_pp0_iter16_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_31_reg_967_pp0_iter17_reg : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_block_state4_io : BOOLEAN;
    signal ap_block_state74_pp0_stage3_iter14 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal empty_37_fu_546_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_37_reg_978 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln117_4_reg_983 : STD_LOGIC_VECTOR (57 downto 0);
    signal trunc_ln117_7_fu_561_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_7_reg_988 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_7_reg_988_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_7_reg_988_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_7_reg_988_pp0_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_7_reg_988_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_7_reg_988_pp0_iter5_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_7_reg_988_pp0_iter6_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_7_reg_988_pp0_iter7_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_7_reg_988_pp0_iter8_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_7_reg_988_pp0_iter9_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_7_reg_988_pp0_iter10_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_7_reg_988_pp0_iter11_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_7_reg_988_pp0_iter12_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_7_reg_988_pp0_iter13_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_7_reg_988_pp0_iter14_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal trunc_ln117_6_reg_999 : STD_LOGIC_VECTOR (57 downto 0);
    signal trunc_ln117_9_fu_590_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_9_reg_1004 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_9_reg_1004_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_9_reg_1004_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_9_reg_1004_pp0_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_9_reg_1004_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_9_reg_1004_pp0_iter5_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_9_reg_1004_pp0_iter6_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_9_reg_1004_pp0_iter7_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_9_reg_1004_pp0_iter8_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_9_reg_1004_pp0_iter9_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_9_reg_1004_pp0_iter10_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_9_reg_1004_pp0_iter11_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_9_reg_1004_pp0_iter12_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_9_reg_1004_pp0_iter13_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_9_reg_1004_pp0_iter14_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_8_reg_1015 : STD_LOGIC_VECTOR (57 downto 0);
    signal trunc_ln117_11_fu_628_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_11_reg_1020 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_11_reg_1020_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_11_reg_1020_pp0_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_11_reg_1020_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_11_reg_1020_pp0_iter5_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_11_reg_1020_pp0_iter6_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_11_reg_1020_pp0_iter7_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_11_reg_1020_pp0_iter8_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_11_reg_1020_pp0_iter9_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_11_reg_1020_pp0_iter10_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_11_reg_1020_pp0_iter11_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_11_reg_1020_pp0_iter12_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_11_reg_1020_pp0_iter13_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_11_reg_1020_pp0_iter14_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln117_11_reg_1020_pp0_iter15_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln121_fu_642_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln121_reg_1031 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln121_reg_1031_pp0_iter5_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln121_reg_1031_pp0_iter6_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln121_reg_1031_pp0_iter7_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln121_reg_1031_pp0_iter8_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln121_reg_1031_pp0_iter9_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln121_reg_1031_pp0_iter10_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln121_reg_1031_pp0_iter11_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln121_reg_1031_pp0_iter12_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln121_reg_1031_pp0_iter13_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln121_reg_1031_pp0_iter14_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln121_reg_1031_pp0_iter15_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln121_reg_1031_pp0_iter16_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln121_reg_1031_pp0_iter17_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal gmem_addr_4_read_reg_1035 : STD_LOGIC_VECTOR (511 downto 0);
    signal trunc_ln117_1_fu_662_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln117_1_reg_1040 : STD_LOGIC_VECTOR (7 downto 0);
    signal gmem_addr_5_read_reg_1045 : STD_LOGIC_VECTOR (511 downto 0);
    signal gmem_addr_read_reg_1050 : STD_LOGIC_VECTOR (511 downto 0);
    signal sub_ln117_fu_693_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln117_reg_1055 : STD_LOGIC_VECTOR (8 downto 0);
    signal gmem_addr_6_read_reg_1060 : STD_LOGIC_VECTOR (511 downto 0);
    signal trunc_ln117_13_fu_715_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln117_13_reg_1065 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln117_10_fu_735_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln117_10_reg_1070 : STD_LOGIC_VECTOR (7 downto 0);
    signal gmem_addr_7_read_reg_1075 : STD_LOGIC_VECTOR (511 downto 0);
    signal sum_fu_806_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln120_fu_844_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_reg_1090 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_reg_1090_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_reg_1090_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal zext_ln121_1_fu_873_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln117_fu_474_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln117_1_fu_527_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln117_2_fu_565_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln117_3_fu_594_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln117_4_fu_632_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal c_fu_138 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal add_ln121_fu_437_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal r_fu_142 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    signal select_ln108_fu_362_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal indvar_flatten34_fu_146 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    signal add_ln108_fu_330_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal image_gray_5_we0_local : STD_LOGIC;
    signal pixel_fu_859_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal image_gray_5_ce0_local : STD_LOGIC;
    signal image_gray_3_we0_local : STD_LOGIC;
    signal image_gray_3_ce0_local : STD_LOGIC;
    signal image_gray_2_we0_local : STD_LOGIC;
    signal image_gray_2_ce0_local : STD_LOGIC;
    signal image_gray_1_we0_local : STD_LOGIC;
    signal image_gray_1_ce0_local : STD_LOGIC;
    signal image_gray_we0_local : STD_LOGIC;
    signal image_gray_ce0_local : STD_LOGIC;
    signal image_gray_4_we0_local : STD_LOGIC;
    signal image_gray_4_ce0_local : STD_LOGIC;
    signal icmp_ln110_fu_342_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvars_iv_next25_i28100_fu_356_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_fu_370_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_29_fu_382_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_shl30_fu_378_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_shl31_fu_390_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal select_ln81_fu_348_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln110_1_fu_404_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal empty_fu_394_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln113_cast_fu_414_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln110_fu_400_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln121_2_fu_443_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln121_fu_449_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln117_fu_484_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln121_fu_506_p0 : STD_LOGIC_VECTOR (18 downto 0);
    signal mul_ln121_fu_506_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln121_fu_506_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal grp_fu_522_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp16_fu_537_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp16_cast_fu_542_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln117_1_fu_575_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln117_3_fu_604_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln117_6_fu_609_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln117_2_fu_613_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_522_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal shl_ln2_fu_646_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln117_fu_653_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal lshr_ln117_fu_657_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal shl_ln117_1_fu_669_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln117_2_fu_676_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal lshr_ln117_1_fu_680_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal trunc_ln117_5_fu_685_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln117_3_cast_fu_689_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln117_1_fu_666_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln117_2_fu_699_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln117_3_fu_706_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal lshr_ln117_2_fu_710_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal shl_ln117_3_fu_719_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln117_4_fu_726_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal lshr_ln117_3_fu_730_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal shl_ln117_4_fu_742_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln117_7_fu_749_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal lshr_ln117_4_fu_753_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal trunc_ln117_12_fu_758_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_30_fu_766_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln117_9_fu_773_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln117_1_fu_777_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln117_6_fu_787_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln117_5_fu_783_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln117_5_fu_739_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln117_8_fu_762_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln117_5_fu_796_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln117_10_fu_802_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln117_4_fu_790_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln120_fu_812_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_822_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal Ny_fu_828_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln120_fu_840_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln120_1_fu_836_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_822_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln120_fu_850_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln120_fu_855_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_522_ce : STD_LOGIC;
    signal grp_fu_822_ce : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_condition_exit_pp0_iter17_stage2 : STD_LOGIC;
    signal ap_idle_pp0_0to16 : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter10_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter11_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter12_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter13_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter14_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter15_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter16_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter17_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to18 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ready_sig : STD_LOGIC;
    signal ap_done_sig : STD_LOGIC;
    signal grp_fu_822_p10 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln121_fu_506_p00 : STD_LOGIC_VECTOR (38 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component edgedetect_mul_19ns_21ns_39_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (18 downto 0);
        din1 : IN STD_LOGIC_VECTOR (20 downto 0);
        dout : OUT STD_LOGIC_VECTOR (38 downto 0) );
    end component;


    component edgedetect_urem_19ns_4ns_3_23_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (18 downto 0);
        din1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component edgedetect_sdiv_11s_6ns_8_15_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component edgedetect_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mul_19ns_21ns_39_1_1_U78 : component edgedetect_mul_19ns_21ns_39_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 19,
        din1_WIDTH => 21,
        dout_WIDTH => 39)
    port map (
        din0 => mul_ln121_fu_506_p0,
        din1 => mul_ln121_fu_506_p1,
        dout => mul_ln121_fu_506_p2);

    urem_19ns_4ns_3_23_1_U79 : component edgedetect_urem_19ns_4ns_3_23_1
    generic map (
        ID => 1,
        NUM_STAGE => 23,
        din0_WIDTH => 19,
        din1_WIDTH => 4,
        dout_WIDTH => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => add_ln113_reg_924,
        din1 => grp_fu_522_p1,
        ce => grp_fu_522_ce,
        dout => grp_fu_522_p2);

    sdiv_11s_6ns_8_15_1_U80 : component edgedetect_sdiv_11s_6ns_8_15_1
    generic map (
        ID => 1,
        NUM_STAGE => 15,
        din0_WIDTH => 11,
        din1_WIDTH => 6,
        dout_WIDTH => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => sum_fu_806_p2,
        din1 => grp_fu_822_p1,
        ce => grp_fu_822_ce,
        dout => grp_fu_822_p2);

    flow_control_loop_pipe_sequential_init_U : component edgedetect_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready_sig,
        ap_done => ap_done_sig,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage4,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_loop_exit_ready_pp0_iter17_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage4)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then 
                    ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter10_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter17_stage2) and (ap_idle_pp0_0to16 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter10_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then 
                ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter11_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter17_stage2) and (ap_idle_pp0_0to16 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter11_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then 
                ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter12_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter17_stage2) and (ap_idle_pp0_0to16 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter12_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then 
                ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter13_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter17_stage2) and (ap_idle_pp0_0to16 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter13_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then 
                ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter14_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter17_stage2) and (ap_idle_pp0_0to16 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter14_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then 
                ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter15_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter17_stage2) and (ap_idle_pp0_0to16 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter15_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then 
                ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter16_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter17_stage2) and (ap_idle_pp0_0to16 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter16_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then 
                ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter17_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter17_stage2) and (ap_idle_pp0_0to16 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter17_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then 
                ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter17_stage2) and (ap_idle_pp0_0to16 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter2_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter17_stage2) and (ap_idle_pp0_0to16 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter3_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter17_stage2) and (ap_idle_pp0_0to16 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter4_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter17_stage2) and (ap_idle_pp0_0to16 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter5_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter17_stage2) and (ap_idle_pp0_0to16 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter6_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter17_stage2) and (ap_idle_pp0_0to16 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter7_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter17_stage2) and (ap_idle_pp0_0to16 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter8_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter17_stage2) and (ap_idle_pp0_0to16 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter8_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then 
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter9_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter17_stage2) and (ap_idle_pp0_0to16 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter9_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then 
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
            end if; 
        end if;
    end process;

    c_fu_138_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                c_fu_138 <= ap_const_lv10_0;
            elsif (((icmp_ln108_fu_324_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                c_fu_138 <= add_ln121_fu_437_p2;
            end if; 
        end if;
    end process;

    indvar_flatten34_fu_146_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                indvar_flatten34_fu_146 <= ap_const_lv19_0;
            elsif (((icmp_ln108_fu_324_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                indvar_flatten34_fu_146 <= add_ln108_fu_330_p2;
            end if; 
        end if;
    end process;

    r_fu_142_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                r_fu_142 <= ap_const_lv9_0;
            elsif (((icmp_ln108_fu_324_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                r_fu_142 <= select_ln108_fu_362_p3;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                add_ln113_reg_924 <= add_ln113_fu_408_p2;
                add_ln121_1_reg_946 <= add_ln121_1_fu_453_p2;
                empty_36_reg_931 <= empty_36_fu_418_p2;
                gmem_addr_6_read_reg_1060 <= m_axi_gmem_RDATA;
                icmp_ln108_reg_920 <= icmp_ln108_fu_324_p2;
                icmp_ln108_reg_920_pp0_iter10_reg <= icmp_ln108_reg_920_pp0_iter9_reg;
                icmp_ln108_reg_920_pp0_iter11_reg <= icmp_ln108_reg_920_pp0_iter10_reg;
                icmp_ln108_reg_920_pp0_iter12_reg <= icmp_ln108_reg_920_pp0_iter11_reg;
                icmp_ln108_reg_920_pp0_iter13_reg <= icmp_ln108_reg_920_pp0_iter12_reg;
                icmp_ln108_reg_920_pp0_iter14_reg <= icmp_ln108_reg_920_pp0_iter13_reg;
                icmp_ln108_reg_920_pp0_iter15_reg <= icmp_ln108_reg_920_pp0_iter14_reg;
                icmp_ln108_reg_920_pp0_iter16_reg <= icmp_ln108_reg_920_pp0_iter15_reg;
                icmp_ln108_reg_920_pp0_iter17_reg <= icmp_ln108_reg_920_pp0_iter16_reg;
                icmp_ln108_reg_920_pp0_iter1_reg <= icmp_ln108_reg_920;
                icmp_ln108_reg_920_pp0_iter2_reg <= icmp_ln108_reg_920_pp0_iter1_reg;
                icmp_ln108_reg_920_pp0_iter3_reg <= icmp_ln108_reg_920_pp0_iter2_reg;
                icmp_ln108_reg_920_pp0_iter4_reg <= icmp_ln108_reg_920_pp0_iter3_reg;
                icmp_ln108_reg_920_pp0_iter5_reg <= icmp_ln108_reg_920_pp0_iter4_reg;
                icmp_ln108_reg_920_pp0_iter6_reg <= icmp_ln108_reg_920_pp0_iter5_reg;
                icmp_ln108_reg_920_pp0_iter7_reg <= icmp_ln108_reg_920_pp0_iter6_reg;
                icmp_ln108_reg_920_pp0_iter8_reg <= icmp_ln108_reg_920_pp0_iter7_reg;
                icmp_ln108_reg_920_pp0_iter9_reg <= icmp_ln108_reg_920_pp0_iter8_reg;
                trunc_ln117_13_reg_1065 <= trunc_ln117_13_fu_715_p1;
                trunc_ln117_reg_941 <= trunc_ln117_fu_433_p1;
                trunc_ln117_reg_941_pp0_iter10_reg <= trunc_ln117_reg_941_pp0_iter9_reg;
                trunc_ln117_reg_941_pp0_iter11_reg <= trunc_ln117_reg_941_pp0_iter10_reg;
                trunc_ln117_reg_941_pp0_iter12_reg <= trunc_ln117_reg_941_pp0_iter11_reg;
                trunc_ln117_reg_941_pp0_iter13_reg <= trunc_ln117_reg_941_pp0_iter12_reg;
                trunc_ln117_reg_941_pp0_iter14_reg <= trunc_ln117_reg_941_pp0_iter13_reg;
                trunc_ln117_reg_941_pp0_iter1_reg <= trunc_ln117_reg_941;
                trunc_ln117_reg_941_pp0_iter2_reg <= trunc_ln117_reg_941_pp0_iter1_reg;
                trunc_ln117_reg_941_pp0_iter3_reg <= trunc_ln117_reg_941_pp0_iter2_reg;
                trunc_ln117_reg_941_pp0_iter4_reg <= trunc_ln117_reg_941_pp0_iter3_reg;
                trunc_ln117_reg_941_pp0_iter5_reg <= trunc_ln117_reg_941_pp0_iter4_reg;
                trunc_ln117_reg_941_pp0_iter6_reg <= trunc_ln117_reg_941_pp0_iter5_reg;
                trunc_ln117_reg_941_pp0_iter7_reg <= trunc_ln117_reg_941_pp0_iter6_reg;
                trunc_ln117_reg_941_pp0_iter8_reg <= trunc_ln117_reg_941_pp0_iter7_reg;
                trunc_ln117_reg_941_pp0_iter9_reg <= trunc_ln117_reg_941_pp0_iter8_reg;
                trunc_ln117_s_reg_936 <= empty_36_fu_418_p2(63 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                empty_37_reg_978 <= empty_37_fu_546_p2;
                gmem_addr_4_read_reg_1035 <= m_axi_gmem_RDATA;
                icmp_ln120_reg_1090 <= icmp_ln120_fu_844_p2;
                icmp_ln120_reg_1090_pp0_iter16_reg <= icmp_ln120_reg_1090;
                icmp_ln120_reg_1090_pp0_iter17_reg <= icmp_ln120_reg_1090_pp0_iter16_reg;
                trunc_ln117_4_reg_983 <= empty_37_fu_546_p2(63 downto 6);
                trunc_ln117_7_reg_988 <= trunc_ln117_7_fu_561_p1;
                trunc_ln117_7_reg_988_pp0_iter10_reg <= trunc_ln117_7_reg_988_pp0_iter9_reg;
                trunc_ln117_7_reg_988_pp0_iter11_reg <= trunc_ln117_7_reg_988_pp0_iter10_reg;
                trunc_ln117_7_reg_988_pp0_iter12_reg <= trunc_ln117_7_reg_988_pp0_iter11_reg;
                trunc_ln117_7_reg_988_pp0_iter13_reg <= trunc_ln117_7_reg_988_pp0_iter12_reg;
                trunc_ln117_7_reg_988_pp0_iter14_reg <= trunc_ln117_7_reg_988_pp0_iter13_reg;
                trunc_ln117_7_reg_988_pp0_iter1_reg <= trunc_ln117_7_reg_988;
                trunc_ln117_7_reg_988_pp0_iter2_reg <= trunc_ln117_7_reg_988_pp0_iter1_reg;
                trunc_ln117_7_reg_988_pp0_iter3_reg <= trunc_ln117_7_reg_988_pp0_iter2_reg;
                trunc_ln117_7_reg_988_pp0_iter4_reg <= trunc_ln117_7_reg_988_pp0_iter3_reg;
                trunc_ln117_7_reg_988_pp0_iter5_reg <= trunc_ln117_7_reg_988_pp0_iter4_reg;
                trunc_ln117_7_reg_988_pp0_iter6_reg <= trunc_ln117_7_reg_988_pp0_iter5_reg;
                trunc_ln117_7_reg_988_pp0_iter7_reg <= trunc_ln117_7_reg_988_pp0_iter6_reg;
                trunc_ln117_7_reg_988_pp0_iter8_reg <= trunc_ln117_7_reg_988_pp0_iter7_reg;
                trunc_ln117_7_reg_988_pp0_iter9_reg <= trunc_ln117_7_reg_988_pp0_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                gmem_addr_5_read_reg_1045 <= m_axi_gmem_RDATA;
                trunc_ln117_1_reg_1040 <= trunc_ln117_1_fu_662_p1;
                trunc_ln117_6_reg_999 <= add_ln117_1_fu_575_p2(63 downto 6);
                trunc_ln117_9_reg_1004 <= trunc_ln117_9_fu_590_p1;
                trunc_ln117_9_reg_1004_pp0_iter10_reg <= trunc_ln117_9_reg_1004_pp0_iter9_reg;
                trunc_ln117_9_reg_1004_pp0_iter11_reg <= trunc_ln117_9_reg_1004_pp0_iter10_reg;
                trunc_ln117_9_reg_1004_pp0_iter12_reg <= trunc_ln117_9_reg_1004_pp0_iter11_reg;
                trunc_ln117_9_reg_1004_pp0_iter13_reg <= trunc_ln117_9_reg_1004_pp0_iter12_reg;
                trunc_ln117_9_reg_1004_pp0_iter14_reg <= trunc_ln117_9_reg_1004_pp0_iter13_reg;
                trunc_ln117_9_reg_1004_pp0_iter1_reg <= trunc_ln117_9_reg_1004;
                trunc_ln117_9_reg_1004_pp0_iter2_reg <= trunc_ln117_9_reg_1004_pp0_iter1_reg;
                trunc_ln117_9_reg_1004_pp0_iter3_reg <= trunc_ln117_9_reg_1004_pp0_iter2_reg;
                trunc_ln117_9_reg_1004_pp0_iter4_reg <= trunc_ln117_9_reg_1004_pp0_iter3_reg;
                trunc_ln117_9_reg_1004_pp0_iter5_reg <= trunc_ln117_9_reg_1004_pp0_iter4_reg;
                trunc_ln117_9_reg_1004_pp0_iter6_reg <= trunc_ln117_9_reg_1004_pp0_iter5_reg;
                trunc_ln117_9_reg_1004_pp0_iter7_reg <= trunc_ln117_9_reg_1004_pp0_iter6_reg;
                trunc_ln117_9_reg_1004_pp0_iter8_reg <= trunc_ln117_9_reg_1004_pp0_iter7_reg;
                trunc_ln117_9_reg_1004_pp0_iter9_reg <= trunc_ln117_9_reg_1004_pp0_iter8_reg;
                trunc_ln121_reg_1031 <= trunc_ln121_fu_642_p1;
                trunc_ln121_reg_1031_pp0_iter10_reg <= trunc_ln121_reg_1031_pp0_iter9_reg;
                trunc_ln121_reg_1031_pp0_iter11_reg <= trunc_ln121_reg_1031_pp0_iter10_reg;
                trunc_ln121_reg_1031_pp0_iter12_reg <= trunc_ln121_reg_1031_pp0_iter11_reg;
                trunc_ln121_reg_1031_pp0_iter13_reg <= trunc_ln121_reg_1031_pp0_iter12_reg;
                trunc_ln121_reg_1031_pp0_iter14_reg <= trunc_ln121_reg_1031_pp0_iter13_reg;
                trunc_ln121_reg_1031_pp0_iter15_reg <= trunc_ln121_reg_1031_pp0_iter14_reg;
                trunc_ln121_reg_1031_pp0_iter16_reg <= trunc_ln121_reg_1031_pp0_iter15_reg;
                trunc_ln121_reg_1031_pp0_iter17_reg <= trunc_ln121_reg_1031_pp0_iter16_reg;
                trunc_ln121_reg_1031_pp0_iter5_reg <= trunc_ln121_reg_1031;
                trunc_ln121_reg_1031_pp0_iter6_reg <= trunc_ln121_reg_1031_pp0_iter5_reg;
                trunc_ln121_reg_1031_pp0_iter7_reg <= trunc_ln121_reg_1031_pp0_iter6_reg;
                trunc_ln121_reg_1031_pp0_iter8_reg <= trunc_ln121_reg_1031_pp0_iter7_reg;
                trunc_ln121_reg_1031_pp0_iter9_reg <= trunc_ln121_reg_1031_pp0_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                gmem_addr_7_read_reg_1075 <= m_axi_gmem_RDATA;
                tmp_31_reg_967 <= mul_ln121_fu_506_p2(38 downto 22);
                tmp_31_reg_967_pp0_iter10_reg <= tmp_31_reg_967_pp0_iter9_reg;
                tmp_31_reg_967_pp0_iter11_reg <= tmp_31_reg_967_pp0_iter10_reg;
                tmp_31_reg_967_pp0_iter12_reg <= tmp_31_reg_967_pp0_iter11_reg;
                tmp_31_reg_967_pp0_iter13_reg <= tmp_31_reg_967_pp0_iter12_reg;
                tmp_31_reg_967_pp0_iter14_reg <= tmp_31_reg_967_pp0_iter13_reg;
                tmp_31_reg_967_pp0_iter15_reg <= tmp_31_reg_967_pp0_iter14_reg;
                tmp_31_reg_967_pp0_iter16_reg <= tmp_31_reg_967_pp0_iter15_reg;
                tmp_31_reg_967_pp0_iter17_reg <= tmp_31_reg_967_pp0_iter16_reg;
                tmp_31_reg_967_pp0_iter1_reg <= tmp_31_reg_967;
                tmp_31_reg_967_pp0_iter2_reg <= tmp_31_reg_967_pp0_iter1_reg;
                tmp_31_reg_967_pp0_iter3_reg <= tmp_31_reg_967_pp0_iter2_reg;
                tmp_31_reg_967_pp0_iter4_reg <= tmp_31_reg_967_pp0_iter3_reg;
                tmp_31_reg_967_pp0_iter5_reg <= tmp_31_reg_967_pp0_iter4_reg;
                tmp_31_reg_967_pp0_iter6_reg <= tmp_31_reg_967_pp0_iter5_reg;
                tmp_31_reg_967_pp0_iter7_reg <= tmp_31_reg_967_pp0_iter6_reg;
                tmp_31_reg_967_pp0_iter8_reg <= tmp_31_reg_967_pp0_iter7_reg;
                tmp_31_reg_967_pp0_iter9_reg <= tmp_31_reg_967_pp0_iter8_reg;
                trunc_ln117_10_reg_1070 <= trunc_ln117_10_fu_735_p1;
                trunc_ln117_2_reg_957 <= add_ln117_fu_484_p2(63 downto 6);
                trunc_ln117_3_reg_962 <= trunc_ln117_3_fu_499_p1;
                trunc_ln117_3_reg_962_pp0_iter10_reg <= trunc_ln117_3_reg_962_pp0_iter9_reg;
                trunc_ln117_3_reg_962_pp0_iter11_reg <= trunc_ln117_3_reg_962_pp0_iter10_reg;
                trunc_ln117_3_reg_962_pp0_iter12_reg <= trunc_ln117_3_reg_962_pp0_iter11_reg;
                trunc_ln117_3_reg_962_pp0_iter13_reg <= trunc_ln117_3_reg_962_pp0_iter12_reg;
                trunc_ln117_3_reg_962_pp0_iter14_reg <= trunc_ln117_3_reg_962_pp0_iter13_reg;
                trunc_ln117_3_reg_962_pp0_iter1_reg <= trunc_ln117_3_reg_962;
                trunc_ln117_3_reg_962_pp0_iter2_reg <= trunc_ln117_3_reg_962_pp0_iter1_reg;
                trunc_ln117_3_reg_962_pp0_iter3_reg <= trunc_ln117_3_reg_962_pp0_iter2_reg;
                trunc_ln117_3_reg_962_pp0_iter4_reg <= trunc_ln117_3_reg_962_pp0_iter3_reg;
                trunc_ln117_3_reg_962_pp0_iter5_reg <= trunc_ln117_3_reg_962_pp0_iter4_reg;
                trunc_ln117_3_reg_962_pp0_iter6_reg <= trunc_ln117_3_reg_962_pp0_iter5_reg;
                trunc_ln117_3_reg_962_pp0_iter7_reg <= trunc_ln117_3_reg_962_pp0_iter6_reg;
                trunc_ln117_3_reg_962_pp0_iter8_reg <= trunc_ln117_3_reg_962_pp0_iter7_reg;
                trunc_ln117_3_reg_962_pp0_iter9_reg <= trunc_ln117_3_reg_962_pp0_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                gmem_addr_read_reg_1050 <= m_axi_gmem_RDATA;
                sub_ln117_reg_1055 <= sub_ln117_fu_693_p2;
                trunc_ln117_11_reg_1020 <= trunc_ln117_11_fu_628_p1;
                trunc_ln117_11_reg_1020_pp0_iter10_reg <= trunc_ln117_11_reg_1020_pp0_iter9_reg;
                trunc_ln117_11_reg_1020_pp0_iter11_reg <= trunc_ln117_11_reg_1020_pp0_iter10_reg;
                trunc_ln117_11_reg_1020_pp0_iter12_reg <= trunc_ln117_11_reg_1020_pp0_iter11_reg;
                trunc_ln117_11_reg_1020_pp0_iter13_reg <= trunc_ln117_11_reg_1020_pp0_iter12_reg;
                trunc_ln117_11_reg_1020_pp0_iter14_reg <= trunc_ln117_11_reg_1020_pp0_iter13_reg;
                trunc_ln117_11_reg_1020_pp0_iter15_reg <= trunc_ln117_11_reg_1020_pp0_iter14_reg;
                trunc_ln117_11_reg_1020_pp0_iter2_reg <= trunc_ln117_11_reg_1020;
                trunc_ln117_11_reg_1020_pp0_iter3_reg <= trunc_ln117_11_reg_1020_pp0_iter2_reg;
                trunc_ln117_11_reg_1020_pp0_iter4_reg <= trunc_ln117_11_reg_1020_pp0_iter3_reg;
                trunc_ln117_11_reg_1020_pp0_iter5_reg <= trunc_ln117_11_reg_1020_pp0_iter4_reg;
                trunc_ln117_11_reg_1020_pp0_iter6_reg <= trunc_ln117_11_reg_1020_pp0_iter5_reg;
                trunc_ln117_11_reg_1020_pp0_iter7_reg <= trunc_ln117_11_reg_1020_pp0_iter6_reg;
                trunc_ln117_11_reg_1020_pp0_iter8_reg <= trunc_ln117_11_reg_1020_pp0_iter7_reg;
                trunc_ln117_11_reg_1020_pp0_iter9_reg <= trunc_ln117_11_reg_1020_pp0_iter8_reg;
                trunc_ln117_8_reg_1015 <= add_ln117_2_fu_613_p2(63 downto 6);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage4_subdone, ap_block_pp0_stage2_subdone, ap_condition_exit_pp0_iter17_stage2, ap_idle_pp0_0to16, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to18, ap_block_pp0_stage1_subdone, ap_block_pp0_stage3_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to18 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if (((ap_const_logic_1 = ap_condition_exit_pp0_iter17_stage2) and (ap_idle_pp0_0to16 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    Ny_fu_828_p3 <= (select_ln120_fu_812_p3 & ap_const_lv8_0);
    add_ln108_fu_330_p2 <= std_logic_vector(unsigned(indvar_flatten34_fu_146) + unsigned(ap_const_lv19_1));
    add_ln113_cast_fu_414_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln113_fu_408_p2),64));
    add_ln113_fu_408_p2 <= std_logic_vector(unsigned(zext_ln110_1_fu_404_p1) + unsigned(empty_fu_394_p2));
    add_ln117_1_fu_575_p2 <= std_logic_vector(unsigned(empty_37_reg_978) + unsigned(ap_const_lv64_2));
    add_ln117_2_fu_613_p2 <= std_logic_vector(unsigned(zext_ln117_6_fu_609_p1) + unsigned(output_r));
    add_ln117_3_fu_604_p2 <= std_logic_vector(unsigned(add_ln113_reg_924) + unsigned(ap_const_lv19_501));
    add_ln117_4_fu_790_p2 <= std_logic_vector(signed(sext_ln117_6_fu_787_p1) + signed(sext_ln117_5_fu_783_p1));
    add_ln117_5_fu_796_p2 <= std_logic_vector(unsigned(zext_ln117_5_fu_739_p1) + unsigned(zext_ln117_8_fu_762_p1));
    add_ln117_fu_484_p2 <= std_logic_vector(unsigned(empty_36_reg_931) + unsigned(ap_const_lv64_2));
    add_ln121_1_fu_453_p2 <= std_logic_vector(unsigned(zext_ln121_fu_449_p1) + unsigned(empty_fu_394_p2));
    add_ln121_2_fu_443_p2 <= std_logic_vector(unsigned(zext_ln110_fu_400_p1) + unsigned(ap_const_lv11_281));
    add_ln121_fu_437_p2 <= std_logic_vector(unsigned(select_ln81_fu_348_p3) + unsigned(ap_const_lv10_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter15, ap_block_state6_io, ap_block_state76_pp0_stage0_iter15)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state6_io)) or ((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state76_pp0_stage0_iter15)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter15, ap_block_state6_io, ap_block_state76_pp0_stage0_iter15)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state6_io)) or ((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state76_pp0_stage0_iter15)));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter15, m_axi_gmem_ARREADY, ap_block_state77_pp0_stage1_iter15)
    begin
                ap_block_pp0_stage1_11001 <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (m_axi_gmem_ARREADY = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state77_pp0_stage1_iter15)));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter15, m_axi_gmem_ARREADY, ap_block_state77_pp0_stage1_iter15)
    begin
                ap_block_pp0_stage1_subdone <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (m_axi_gmem_ARREADY = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state77_pp0_stage1_iter15)));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter15, ap_block_state3_io, ap_block_state78_pp0_stage2_iter15)
    begin
                ap_block_pp0_stage2_11001 <= (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state78_pp0_stage2_iter15)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_io)));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter15, ap_block_state3_io, ap_block_state78_pp0_stage2_iter15)
    begin
                ap_block_pp0_stage2_subdone <= (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state78_pp0_stage2_iter15)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_io)));
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter14, ap_block_state4_io, ap_block_state74_pp0_stage3_iter14)
    begin
                ap_block_pp0_stage3_11001 <= (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state74_pp0_stage3_iter14)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state4_io)));
    end process;


    ap_block_pp0_stage3_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter14, ap_block_state4_io, ap_block_state74_pp0_stage3_iter14)
    begin
                ap_block_pp0_stage3_subdone <= (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state74_pp0_stage3_iter14)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state4_io)));
    end process;

        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage4_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter14, ap_block_state5_io, ap_block_state75_pp0_stage4_iter14)
    begin
                ap_block_pp0_stage4_11001 <= (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state75_pp0_stage4_iter14)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state5_io)));
    end process;


    ap_block_pp0_stage4_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter14, ap_block_state5_io, ap_block_state75_pp0_stage4_iter14)
    begin
                ap_block_pp0_stage4_subdone <= (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state75_pp0_stage4_iter14)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state5_io)));
    end process;


    ap_block_state3_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln108_reg_920)
    begin
                ap_block_state3_io <= ((icmp_ln108_reg_920 = ap_const_lv1_0) and (m_axi_gmem_ARREADY = ap_const_logic_0));
    end process;


    ap_block_state4_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln108_reg_920)
    begin
                ap_block_state4_io <= ((icmp_ln108_reg_920 = ap_const_lv1_0) and (m_axi_gmem_ARREADY = ap_const_logic_0));
    end process;


    ap_block_state5_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln108_reg_920)
    begin
                ap_block_state5_io <= ((icmp_ln108_reg_920 = ap_const_lv1_0) and (m_axi_gmem_ARREADY = ap_const_logic_0));
    end process;


    ap_block_state6_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln108_reg_920)
    begin
                ap_block_state6_io <= ((icmp_ln108_reg_920 = ap_const_lv1_0) and (m_axi_gmem_ARREADY = ap_const_logic_0));
    end process;


    ap_block_state74_pp0_stage3_iter14_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state74_pp0_stage3_iter14 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state75_pp0_stage4_iter14_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state75_pp0_stage4_iter14 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state76_pp0_stage0_iter15_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state76_pp0_stage0_iter15 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state77_pp0_stage1_iter15_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state77_pp0_stage1_iter15 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state78_pp0_stage2_iter15_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state78_pp0_stage2_iter15 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;


    ap_condition_exit_pp0_iter0_stage4_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, icmp_ln108_reg_920, ap_block_pp0_stage4_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (icmp_ln108_reg_920 = ap_const_lv1_1))) then 
            ap_condition_exit_pp0_iter0_stage4 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter17_stage2_assign_proc : process(ap_enable_reg_pp0_iter17, ap_CS_fsm_pp0_stage2, icmp_ln108_reg_920_pp0_iter17_reg, ap_block_pp0_stage2_subdone)
    begin
        if (((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (icmp_ln108_reg_920_pp0_iter17_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then 
            ap_condition_exit_pp0_iter17_stage2 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter17_stage2 <= ap_const_logic_0;
        end if; 
    end process;

    ap_done <= ap_done_sig;

    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter17_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_loop_exit_ready_pp0_iter17_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to16_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16)
    begin
        if (((ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to16 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to16 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to18_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to18 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to18 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage4;
    ap_ready <= ap_ready_sig;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;

    empty_36_fu_418_p2 <= std_logic_vector(unsigned(add_ln113_cast_fu_414_p1) + unsigned(output_r));
    empty_37_fu_546_p2 <= std_logic_vector(unsigned(tmp16_cast_fu_542_p1) + unsigned(output_r));
    empty_fu_394_p2 <= std_logic_vector(unsigned(p_shl30_fu_378_p1) + unsigned(p_shl31_fu_390_p1));

    gmem_blk_n_AR_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, m_axi_gmem_ARREADY, icmp_ln108_reg_920, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln108_reg_920 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4) and (icmp_ln108_reg_920 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (icmp_ln108_reg_920 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (icmp_ln108_reg_920 = ap_const_lv1_0)))) then 
            gmem_blk_n_AR <= m_axi_gmem_ARREADY;
        else 
            gmem_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_R_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_CS_fsm_pp0_stage4, m_axi_gmem_RVALID, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
        if ((((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)))) then 
            gmem_blk_n_R <= m_axi_gmem_RVALID;
        else 
            gmem_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_522_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            grp_fu_522_ce <= ap_const_logic_1;
        else 
            grp_fu_522_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_522_p1 <= ap_const_lv19_6(4 - 1 downto 0);

    grp_fu_822_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            grp_fu_822_ce <= ap_const_logic_1;
        else 
            grp_fu_822_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_822_p1 <= grp_fu_822_p10(6 - 1 downto 0);
    grp_fu_822_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln120_fu_812_p3),11));
    icmp_ln108_fu_324_p2 <= "1" when (indvar_flatten34_fu_146 = ap_const_lv19_4A744) else "0";
    icmp_ln110_fu_342_p2 <= "1" when (c_fu_138 = ap_const_lv10_27E) else "0";
    icmp_ln120_fu_844_p2 <= "1" when (signed(sext_ln120_fu_840_p1) < signed(zext_ln120_1_fu_836_p1)) else "0";
    image_gray_1_address0 <= zext_ln121_1_fu_873_p1(16 - 1 downto 0);
    image_gray_1_ce0 <= image_gray_1_ce0_local;

    image_gray_1_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter18, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then 
            image_gray_1_ce0_local <= ap_const_logic_1;
        else 
            image_gray_1_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_gray_1_d0 <= pixel_fu_859_p3;
    image_gray_1_we0 <= image_gray_1_we0_local;

    image_gray_1_we0_local_assign_proc : process(ap_enable_reg_pp0_iter18, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, trunc_ln121_reg_1031_pp0_iter17_reg)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (trunc_ln121_reg_1031_pp0_iter17_reg = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then 
            image_gray_1_we0_local <= ap_const_logic_1;
        else 
            image_gray_1_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_gray_2_address0 <= zext_ln121_1_fu_873_p1(16 - 1 downto 0);
    image_gray_2_ce0 <= image_gray_2_ce0_local;

    image_gray_2_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter18, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then 
            image_gray_2_ce0_local <= ap_const_logic_1;
        else 
            image_gray_2_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_gray_2_d0 <= pixel_fu_859_p3;
    image_gray_2_we0 <= image_gray_2_we0_local;

    image_gray_2_we0_local_assign_proc : process(ap_enable_reg_pp0_iter18, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, trunc_ln121_reg_1031_pp0_iter17_reg)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (trunc_ln121_reg_1031_pp0_iter17_reg = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then 
            image_gray_2_we0_local <= ap_const_logic_1;
        else 
            image_gray_2_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_gray_3_address0 <= zext_ln121_1_fu_873_p1(16 - 1 downto 0);
    image_gray_3_ce0 <= image_gray_3_ce0_local;

    image_gray_3_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter18, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then 
            image_gray_3_ce0_local <= ap_const_logic_1;
        else 
            image_gray_3_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_gray_3_d0 <= pixel_fu_859_p3;
    image_gray_3_we0 <= image_gray_3_we0_local;

    image_gray_3_we0_local_assign_proc : process(ap_enable_reg_pp0_iter18, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, trunc_ln121_reg_1031_pp0_iter17_reg)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (trunc_ln121_reg_1031_pp0_iter17_reg = ap_const_lv3_4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then 
            image_gray_3_we0_local <= ap_const_logic_1;
        else 
            image_gray_3_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_gray_4_address0 <= zext_ln121_1_fu_873_p1(16 - 1 downto 0);
    image_gray_4_ce0 <= image_gray_4_ce0_local;

    image_gray_4_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter18, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then 
            image_gray_4_ce0_local <= ap_const_logic_1;
        else 
            image_gray_4_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_gray_4_d0 <= pixel_fu_859_p3;
    image_gray_4_we0 <= image_gray_4_we0_local;

    image_gray_4_we0_local_assign_proc : process(ap_enable_reg_pp0_iter18, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, trunc_ln121_reg_1031_pp0_iter17_reg)
    begin
        if ((not((trunc_ln121_reg_1031_pp0_iter17_reg = ap_const_lv3_1)) and not((trunc_ln121_reg_1031_pp0_iter17_reg = ap_const_lv3_2)) and not((trunc_ln121_reg_1031_pp0_iter17_reg = ap_const_lv3_3)) and not((trunc_ln121_reg_1031_pp0_iter17_reg = ap_const_lv3_4)) and not((trunc_ln121_reg_1031_pp0_iter17_reg = ap_const_lv3_0)) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then 
            image_gray_4_we0_local <= ap_const_logic_1;
        else 
            image_gray_4_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_gray_5_address0 <= zext_ln121_1_fu_873_p1(16 - 1 downto 0);
    image_gray_5_ce0 <= image_gray_5_ce0_local;

    image_gray_5_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter18, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then 
            image_gray_5_ce0_local <= ap_const_logic_1;
        else 
            image_gray_5_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_gray_5_d0 <= pixel_fu_859_p3;
    image_gray_5_we0 <= image_gray_5_we0_local;

    image_gray_5_we0_local_assign_proc : process(ap_enable_reg_pp0_iter18, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, trunc_ln121_reg_1031_pp0_iter17_reg)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (trunc_ln121_reg_1031_pp0_iter17_reg = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then 
            image_gray_5_we0_local <= ap_const_logic_1;
        else 
            image_gray_5_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_gray_address0 <= zext_ln121_1_fu_873_p1(16 - 1 downto 0);
    image_gray_ce0 <= image_gray_ce0_local;

    image_gray_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter18, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then 
            image_gray_ce0_local <= ap_const_logic_1;
        else 
            image_gray_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    image_gray_d0 <= pixel_fu_859_p3;
    image_gray_we0 <= image_gray_we0_local;

    image_gray_we0_local_assign_proc : process(ap_enable_reg_pp0_iter18, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, trunc_ln121_reg_1031_pp0_iter17_reg)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (trunc_ln121_reg_1031_pp0_iter17_reg = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then 
            image_gray_we0_local <= ap_const_logic_1;
        else 
            image_gray_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    indvars_iv_next25_i28100_fu_356_p2 <= std_logic_vector(unsigned(r_fu_142) + unsigned(ap_const_lv9_1));
    lshr_ln117_1_fu_680_p2 <= std_logic_vector(shift_right(unsigned(gmem_addr_5_read_reg_1045),to_integer(unsigned('0' & zext_ln117_2_fu_676_p1(31-1 downto 0)))));
    lshr_ln117_2_fu_710_p2 <= std_logic_vector(shift_right(unsigned(gmem_addr_read_reg_1050),to_integer(unsigned('0' & zext_ln117_3_fu_706_p1(31-1 downto 0)))));
    lshr_ln117_3_fu_730_p2 <= std_logic_vector(shift_right(unsigned(gmem_addr_6_read_reg_1060),to_integer(unsigned('0' & zext_ln117_4_fu_726_p1(31-1 downto 0)))));
    lshr_ln117_4_fu_753_p2 <= std_logic_vector(shift_right(unsigned(gmem_addr_7_read_reg_1075),to_integer(unsigned('0' & zext_ln117_7_fu_749_p1(31-1 downto 0)))));
    lshr_ln117_fu_657_p2 <= std_logic_vector(shift_right(unsigned(gmem_addr_4_read_reg_1035),to_integer(unsigned('0' & zext_ln117_fu_653_p1(31-1 downto 0)))));

    m_axi_gmem_ARADDR_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, icmp_ln108_reg_920, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, sext_ln117_fu_474_p1, sext_ln117_1_fu_527_p1, sext_ln117_2_fu_565_p1, sext_ln117_3_fu_594_p1, sext_ln117_4_fu_632_p1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            m_axi_gmem_ARADDR <= sext_ln117_4_fu_632_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln108_reg_920 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= sext_ln117_3_fu_594_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln108_reg_920 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= sext_ln117_2_fu_565_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln108_reg_920 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= sext_ln117_1_fu_527_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln108_reg_920 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= sext_ln117_fu_474_p1;
        else 
            m_axi_gmem_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_gmem_ARBURST <= ap_const_lv2_0;
    m_axi_gmem_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem_ARID <= ap_const_lv1_0;
    m_axi_gmem_ARLEN <= ap_const_lv64_1(32 - 1 downto 0);
    m_axi_gmem_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem_ARPROT <= ap_const_lv3_0;
    m_axi_gmem_ARQOS <= ap_const_lv4_0;
    m_axi_gmem_ARREGION <= ap_const_lv4_0;
    m_axi_gmem_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem_ARUSER <= ap_const_lv1_0;

    m_axi_gmem_ARVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, icmp_ln108_reg_920, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln108_reg_920 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln108_reg_920 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln108_reg_920 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln108_reg_920 = ap_const_lv1_0)))) then 
            m_axi_gmem_ARVALID <= ap_const_logic_1;
        else 
            m_axi_gmem_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_AWADDR <= ap_const_lv64_0;
    m_axi_gmem_AWBURST <= ap_const_lv2_0;
    m_axi_gmem_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem_AWID <= ap_const_lv1_0;
    m_axi_gmem_AWLEN <= ap_const_lv32_0;
    m_axi_gmem_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem_AWPROT <= ap_const_lv3_0;
    m_axi_gmem_AWQOS <= ap_const_lv4_0;
    m_axi_gmem_AWREGION <= ap_const_lv4_0;
    m_axi_gmem_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem_AWUSER <= ap_const_lv1_0;
    m_axi_gmem_AWVALID <= ap_const_logic_0;
    m_axi_gmem_BREADY <= ap_const_logic_0;

    m_axi_gmem_RREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)))) then 
            m_axi_gmem_RREADY <= ap_const_logic_1;
        else 
            m_axi_gmem_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_WDATA <= ap_const_lv512_lc_1;
    m_axi_gmem_WID <= ap_const_lv1_0;
    m_axi_gmem_WLAST <= ap_const_logic_0;
    m_axi_gmem_WSTRB <= ap_const_lv64_0;
    m_axi_gmem_WUSER <= ap_const_lv1_0;
    m_axi_gmem_WVALID <= ap_const_logic_0;
    mul_ln121_fu_506_p0 <= mul_ln121_fu_506_p00(19 - 1 downto 0);
    mul_ln121_fu_506_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln121_1_reg_946),39));
    mul_ln121_fu_506_p1 <= ap_const_lv39_AAAAB(21 - 1 downto 0);
    p_shl30_fu_378_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_370_p3),19));
    p_shl31_fu_390_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_29_fu_382_p3),19));
    pixel_fu_859_p3 <= 
        ap_const_lv8_FF when (xor_ln120_fu_850_p2(0) = '1') else 
        trunc_ln120_fu_855_p1;
    select_ln108_fu_362_p3 <= 
        indvars_iv_next25_i28100_fu_356_p2 when (icmp_ln110_fu_342_p2(0) = '1') else 
        r_fu_142;
    select_ln120_fu_812_p3 <= 
        ap_const_lv5_1 when (icmp_ln105(0) = '1') else 
        normal_factor_5_reload;
    select_ln81_fu_348_p3 <= 
        ap_const_lv10_0 when (icmp_ln110_fu_342_p2(0) = '1') else 
        c_fu_138;
        sext_ln117_1_fu_527_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln117_2_reg_957),64));

        sext_ln117_2_fu_565_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln117_4_reg_983),64));

        sext_ln117_3_fu_594_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln117_6_reg_999),64));

        sext_ln117_4_fu_632_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln117_8_reg_1015),64));

        sext_ln117_5_fu_783_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln117_1_fu_777_p2),11));

        sext_ln117_6_fu_787_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln117_reg_1055),11));

        sext_ln117_fu_474_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln117_s_reg_936),64));

        sext_ln120_fu_840_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sum_fu_806_p2),14));

    shl_ln117_1_fu_669_p3 <= (trunc_ln117_3_reg_962_pp0_iter14_reg & ap_const_lv3_0);
    shl_ln117_2_fu_699_p3 <= (trunc_ln117_7_reg_988_pp0_iter14_reg & ap_const_lv3_0);
    shl_ln117_3_fu_719_p3 <= (trunc_ln117_9_reg_1004_pp0_iter14_reg & ap_const_lv3_0);
    shl_ln117_4_fu_742_p3 <= (trunc_ln117_11_reg_1020_pp0_iter15_reg & ap_const_lv3_0);
    shl_ln2_fu_646_p3 <= (trunc_ln117_reg_941_pp0_iter14_reg & ap_const_lv3_0);
    sub_ln117_1_fu_777_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(zext_ln117_9_fu_773_p1));
    sub_ln117_fu_693_p2 <= std_logic_vector(unsigned(trunc_ln117_3_cast_fu_689_p1) - unsigned(zext_ln117_1_fu_666_p1));
    sum_fu_806_p2 <= std_logic_vector(unsigned(zext_ln117_10_fu_802_p1) + unsigned(add_ln117_4_fu_790_p2));
    tmp16_cast_fu_542_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp16_fu_537_p2),64));
    tmp16_fu_537_p2 <= std_logic_vector(unsigned(add_ln113_reg_924) + unsigned(ap_const_lv19_280));
    tmp_29_fu_382_p3 <= (select_ln108_fu_362_p3 & ap_const_lv7_0);
    tmp_30_fu_766_p3 <= (trunc_ln117_13_reg_1065 & ap_const_lv1_0);
    tmp_fu_370_p3 <= (select_ln108_fu_362_p3 & ap_const_lv9_0);
    trunc_ln117_10_fu_735_p1 <= lshr_ln117_3_fu_730_p2(8 - 1 downto 0);
    trunc_ln117_11_fu_628_p1 <= add_ln117_2_fu_613_p2(6 - 1 downto 0);
    trunc_ln117_12_fu_758_p1 <= lshr_ln117_4_fu_753_p2(8 - 1 downto 0);
    trunc_ln117_13_fu_715_p1 <= lshr_ln117_2_fu_710_p2(8 - 1 downto 0);
    trunc_ln117_1_fu_662_p1 <= lshr_ln117_fu_657_p2(8 - 1 downto 0);
    trunc_ln117_3_cast_fu_689_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln117_5_fu_685_p1),9));
    trunc_ln117_3_fu_499_p1 <= add_ln117_fu_484_p2(6 - 1 downto 0);
    trunc_ln117_5_fu_685_p1 <= lshr_ln117_1_fu_680_p2(8 - 1 downto 0);
    trunc_ln117_7_fu_561_p1 <= empty_37_fu_546_p2(6 - 1 downto 0);
    trunc_ln117_9_fu_590_p1 <= add_ln117_1_fu_575_p2(6 - 1 downto 0);
    trunc_ln117_fu_433_p1 <= empty_36_fu_418_p2(6 - 1 downto 0);
    trunc_ln120_fu_855_p1 <= grp_fu_822_p2(8 - 1 downto 0);
    trunc_ln121_fu_642_p1 <= grp_fu_522_p2(3 - 1 downto 0);
    xor_ln120_fu_850_p2 <= (icmp_ln120_reg_1090_pp0_iter17_reg xor ap_const_lv1_1);
    zext_ln110_1_fu_404_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln81_fu_348_p3),19));
    zext_ln110_fu_400_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln81_fu_348_p3),11));
    zext_ln117_10_fu_802_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln117_5_fu_796_p2),11));
    zext_ln117_1_fu_666_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln117_1_reg_1040),9));
    zext_ln117_2_fu_676_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln117_1_fu_669_p3),512));
    zext_ln117_3_fu_706_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln117_2_fu_699_p3),512));
    zext_ln117_4_fu_726_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln117_3_fu_719_p3),512));
    zext_ln117_5_fu_739_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln117_10_reg_1070),9));
    zext_ln117_6_fu_609_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln117_3_fu_604_p2),64));
    zext_ln117_7_fu_749_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln117_4_fu_742_p3),512));
    zext_ln117_8_fu_762_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln117_12_fu_758_p1),9));
    zext_ln117_9_fu_773_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_30_fu_766_p3),10));
    zext_ln117_fu_653_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln2_fu_646_p3),512));
    zext_ln120_1_fu_836_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Ny_fu_828_p3),14));
    zext_ln121_1_fu_873_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_31_reg_967_pp0_iter17_reg),64));
    zext_ln121_fu_449_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln121_2_fu_443_p2),19));
end behav;
