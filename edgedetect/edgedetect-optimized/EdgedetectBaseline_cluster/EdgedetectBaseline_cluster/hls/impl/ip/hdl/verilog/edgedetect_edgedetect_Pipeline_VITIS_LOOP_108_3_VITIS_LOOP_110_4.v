// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module edgedetect_edgedetect_Pipeline_VITIS_LOOP_108_3_VITIS_LOOP_110_4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        image_gray_5_address0,
        image_gray_5_ce0,
        image_gray_5_we0,
        image_gray_5_d0,
        image_gray_4_address0,
        image_gray_4_ce0,
        image_gray_4_we0,
        image_gray_4_d0,
        image_gray_3_address0,
        image_gray_3_ce0,
        image_gray_3_we0,
        image_gray_3_d0,
        image_gray_2_address0,
        image_gray_2_ce0,
        image_gray_2_we0,
        image_gray_2_d0,
        image_gray_1_address0,
        image_gray_1_ce0,
        image_gray_1_we0,
        image_gray_1_d0,
        image_gray_address0,
        image_gray_ce0,
        image_gray_we0,
        image_gray_d0,
        output_r,
        normal_factor_5_reload,
        icmp_ln105
);

parameter    ap_ST_fsm_pp0_stage0 = 5'd1;
parameter    ap_ST_fsm_pp0_stage1 = 5'd2;
parameter    ap_ST_fsm_pp0_stage2 = 5'd4;
parameter    ap_ST_fsm_pp0_stage3 = 5'd8;
parameter    ap_ST_fsm_pp0_stage4 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [511:0] m_axi_gmem_WDATA;
output  [63:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [511:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [8:0] m_axi_gmem_RFIFONUM;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
output  [15:0] image_gray_5_address0;
output   image_gray_5_ce0;
output   image_gray_5_we0;
output  [7:0] image_gray_5_d0;
output  [15:0] image_gray_4_address0;
output   image_gray_4_ce0;
output   image_gray_4_we0;
output  [7:0] image_gray_4_d0;
output  [15:0] image_gray_3_address0;
output   image_gray_3_ce0;
output   image_gray_3_we0;
output  [7:0] image_gray_3_d0;
output  [15:0] image_gray_2_address0;
output   image_gray_2_ce0;
output   image_gray_2_we0;
output  [7:0] image_gray_2_d0;
output  [15:0] image_gray_1_address0;
output   image_gray_1_ce0;
output   image_gray_1_we0;
output  [7:0] image_gray_1_d0;
output  [15:0] image_gray_address0;
output   image_gray_ce0;
output   image_gray_we0;
output  [7:0] image_gray_d0;
input  [63:0] output_r;
input  [4:0] normal_factor_5_reload;
input  [0:0] icmp_ln105;

reg ap_idle;
reg m_axi_gmem_ARVALID;
reg[63:0] m_axi_gmem_ARADDR;
reg m_axi_gmem_RREADY;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage4;
reg   [0:0] icmp_ln108_reg_920;
reg    ap_block_state5_io;
reg    ap_block_state75_pp0_stage4_iter14;
reg    ap_block_pp0_stage4_subdone;
reg    ap_condition_exit_pp0_iter0_stage4;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem_blk_n_AR;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
reg    gmem_blk_n_R;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage4;
wire    ap_block_pp0_stage0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg    ap_block_state6_io;
reg    ap_block_state76_pp0_stage0_iter15;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln108_fu_324_p2;
reg    ap_block_state77_pp0_stage1_iter15;
reg    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln108_reg_920_pp0_iter1_reg;
reg   [0:0] icmp_ln108_reg_920_pp0_iter2_reg;
reg   [0:0] icmp_ln108_reg_920_pp0_iter3_reg;
reg   [0:0] icmp_ln108_reg_920_pp0_iter4_reg;
reg   [0:0] icmp_ln108_reg_920_pp0_iter5_reg;
reg   [0:0] icmp_ln108_reg_920_pp0_iter6_reg;
reg   [0:0] icmp_ln108_reg_920_pp0_iter7_reg;
reg   [0:0] icmp_ln108_reg_920_pp0_iter8_reg;
reg   [0:0] icmp_ln108_reg_920_pp0_iter9_reg;
reg   [0:0] icmp_ln108_reg_920_pp0_iter10_reg;
reg   [0:0] icmp_ln108_reg_920_pp0_iter11_reg;
reg   [0:0] icmp_ln108_reg_920_pp0_iter12_reg;
reg   [0:0] icmp_ln108_reg_920_pp0_iter13_reg;
reg   [0:0] icmp_ln108_reg_920_pp0_iter14_reg;
reg   [0:0] icmp_ln108_reg_920_pp0_iter15_reg;
reg   [0:0] icmp_ln108_reg_920_pp0_iter16_reg;
reg   [0:0] icmp_ln108_reg_920_pp0_iter17_reg;
wire   [18:0] add_ln113_fu_408_p2;
reg   [18:0] add_ln113_reg_924;
wire   [63:0] empty_36_fu_418_p2;
reg   [63:0] empty_36_reg_931;
reg   [57:0] trunc_ln117_s_reg_936;
wire   [5:0] trunc_ln117_fu_433_p1;
reg   [5:0] trunc_ln117_reg_941;
reg   [5:0] trunc_ln117_reg_941_pp0_iter1_reg;
reg   [5:0] trunc_ln117_reg_941_pp0_iter2_reg;
reg   [5:0] trunc_ln117_reg_941_pp0_iter3_reg;
reg   [5:0] trunc_ln117_reg_941_pp0_iter4_reg;
reg   [5:0] trunc_ln117_reg_941_pp0_iter5_reg;
reg   [5:0] trunc_ln117_reg_941_pp0_iter6_reg;
reg   [5:0] trunc_ln117_reg_941_pp0_iter7_reg;
reg   [5:0] trunc_ln117_reg_941_pp0_iter8_reg;
reg   [5:0] trunc_ln117_reg_941_pp0_iter9_reg;
reg   [5:0] trunc_ln117_reg_941_pp0_iter10_reg;
reg   [5:0] trunc_ln117_reg_941_pp0_iter11_reg;
reg   [5:0] trunc_ln117_reg_941_pp0_iter12_reg;
reg   [5:0] trunc_ln117_reg_941_pp0_iter13_reg;
reg   [5:0] trunc_ln117_reg_941_pp0_iter14_reg;
wire   [18:0] add_ln121_1_fu_453_p2;
reg   [18:0] add_ln121_1_reg_946;
reg    ap_block_state3_io;
reg    ap_block_state78_pp0_stage2_iter15;
reg    ap_block_pp0_stage2_11001;
reg   [57:0] trunc_ln117_2_reg_957;
wire   [5:0] trunc_ln117_3_fu_499_p1;
reg   [5:0] trunc_ln117_3_reg_962;
reg   [5:0] trunc_ln117_3_reg_962_pp0_iter1_reg;
reg   [5:0] trunc_ln117_3_reg_962_pp0_iter2_reg;
reg   [5:0] trunc_ln117_3_reg_962_pp0_iter3_reg;
reg   [5:0] trunc_ln117_3_reg_962_pp0_iter4_reg;
reg   [5:0] trunc_ln117_3_reg_962_pp0_iter5_reg;
reg   [5:0] trunc_ln117_3_reg_962_pp0_iter6_reg;
reg   [5:0] trunc_ln117_3_reg_962_pp0_iter7_reg;
reg   [5:0] trunc_ln117_3_reg_962_pp0_iter8_reg;
reg   [5:0] trunc_ln117_3_reg_962_pp0_iter9_reg;
reg   [5:0] trunc_ln117_3_reg_962_pp0_iter10_reg;
reg   [5:0] trunc_ln117_3_reg_962_pp0_iter11_reg;
reg   [5:0] trunc_ln117_3_reg_962_pp0_iter12_reg;
reg   [5:0] trunc_ln117_3_reg_962_pp0_iter13_reg;
reg   [5:0] trunc_ln117_3_reg_962_pp0_iter14_reg;
reg   [16:0] tmp_31_reg_967;
reg   [16:0] tmp_31_reg_967_pp0_iter1_reg;
reg   [16:0] tmp_31_reg_967_pp0_iter2_reg;
reg   [16:0] tmp_31_reg_967_pp0_iter3_reg;
reg   [16:0] tmp_31_reg_967_pp0_iter4_reg;
reg   [16:0] tmp_31_reg_967_pp0_iter5_reg;
reg   [16:0] tmp_31_reg_967_pp0_iter6_reg;
reg   [16:0] tmp_31_reg_967_pp0_iter7_reg;
reg   [16:0] tmp_31_reg_967_pp0_iter8_reg;
reg   [16:0] tmp_31_reg_967_pp0_iter9_reg;
reg   [16:0] tmp_31_reg_967_pp0_iter10_reg;
reg   [16:0] tmp_31_reg_967_pp0_iter11_reg;
reg   [16:0] tmp_31_reg_967_pp0_iter12_reg;
reg   [16:0] tmp_31_reg_967_pp0_iter13_reg;
reg   [16:0] tmp_31_reg_967_pp0_iter14_reg;
reg   [16:0] tmp_31_reg_967_pp0_iter15_reg;
reg   [16:0] tmp_31_reg_967_pp0_iter16_reg;
reg   [16:0] tmp_31_reg_967_pp0_iter17_reg;
reg    ap_block_state4_io;
reg    ap_block_state74_pp0_stage3_iter14;
reg    ap_block_pp0_stage3_11001;
wire   [63:0] empty_37_fu_546_p2;
reg   [63:0] empty_37_reg_978;
reg   [57:0] trunc_ln117_4_reg_983;
wire   [5:0] trunc_ln117_7_fu_561_p1;
reg   [5:0] trunc_ln117_7_reg_988;
reg   [5:0] trunc_ln117_7_reg_988_pp0_iter1_reg;
reg   [5:0] trunc_ln117_7_reg_988_pp0_iter2_reg;
reg   [5:0] trunc_ln117_7_reg_988_pp0_iter3_reg;
reg   [5:0] trunc_ln117_7_reg_988_pp0_iter4_reg;
reg   [5:0] trunc_ln117_7_reg_988_pp0_iter5_reg;
reg   [5:0] trunc_ln117_7_reg_988_pp0_iter6_reg;
reg   [5:0] trunc_ln117_7_reg_988_pp0_iter7_reg;
reg   [5:0] trunc_ln117_7_reg_988_pp0_iter8_reg;
reg   [5:0] trunc_ln117_7_reg_988_pp0_iter9_reg;
reg   [5:0] trunc_ln117_7_reg_988_pp0_iter10_reg;
reg   [5:0] trunc_ln117_7_reg_988_pp0_iter11_reg;
reg   [5:0] trunc_ln117_7_reg_988_pp0_iter12_reg;
reg   [5:0] trunc_ln117_7_reg_988_pp0_iter13_reg;
reg   [5:0] trunc_ln117_7_reg_988_pp0_iter14_reg;
reg    ap_block_pp0_stage4_11001;
reg   [57:0] trunc_ln117_6_reg_999;
wire   [5:0] trunc_ln117_9_fu_590_p1;
reg   [5:0] trunc_ln117_9_reg_1004;
reg   [5:0] trunc_ln117_9_reg_1004_pp0_iter1_reg;
reg   [5:0] trunc_ln117_9_reg_1004_pp0_iter2_reg;
reg   [5:0] trunc_ln117_9_reg_1004_pp0_iter3_reg;
reg   [5:0] trunc_ln117_9_reg_1004_pp0_iter4_reg;
reg   [5:0] trunc_ln117_9_reg_1004_pp0_iter5_reg;
reg   [5:0] trunc_ln117_9_reg_1004_pp0_iter6_reg;
reg   [5:0] trunc_ln117_9_reg_1004_pp0_iter7_reg;
reg   [5:0] trunc_ln117_9_reg_1004_pp0_iter8_reg;
reg   [5:0] trunc_ln117_9_reg_1004_pp0_iter9_reg;
reg   [5:0] trunc_ln117_9_reg_1004_pp0_iter10_reg;
reg   [5:0] trunc_ln117_9_reg_1004_pp0_iter11_reg;
reg   [5:0] trunc_ln117_9_reg_1004_pp0_iter12_reg;
reg   [5:0] trunc_ln117_9_reg_1004_pp0_iter13_reg;
reg   [5:0] trunc_ln117_9_reg_1004_pp0_iter14_reg;
reg   [57:0] trunc_ln117_8_reg_1015;
wire   [5:0] trunc_ln117_11_fu_628_p1;
reg   [5:0] trunc_ln117_11_reg_1020;
reg   [5:0] trunc_ln117_11_reg_1020_pp0_iter2_reg;
reg   [5:0] trunc_ln117_11_reg_1020_pp0_iter3_reg;
reg   [5:0] trunc_ln117_11_reg_1020_pp0_iter4_reg;
reg   [5:0] trunc_ln117_11_reg_1020_pp0_iter5_reg;
reg   [5:0] trunc_ln117_11_reg_1020_pp0_iter6_reg;
reg   [5:0] trunc_ln117_11_reg_1020_pp0_iter7_reg;
reg   [5:0] trunc_ln117_11_reg_1020_pp0_iter8_reg;
reg   [5:0] trunc_ln117_11_reg_1020_pp0_iter9_reg;
reg   [5:0] trunc_ln117_11_reg_1020_pp0_iter10_reg;
reg   [5:0] trunc_ln117_11_reg_1020_pp0_iter11_reg;
reg   [5:0] trunc_ln117_11_reg_1020_pp0_iter12_reg;
reg   [5:0] trunc_ln117_11_reg_1020_pp0_iter13_reg;
reg   [5:0] trunc_ln117_11_reg_1020_pp0_iter14_reg;
reg   [5:0] trunc_ln117_11_reg_1020_pp0_iter15_reg;
wire   [2:0] trunc_ln121_fu_642_p1;
reg   [2:0] trunc_ln121_reg_1031;
reg   [2:0] trunc_ln121_reg_1031_pp0_iter5_reg;
reg   [2:0] trunc_ln121_reg_1031_pp0_iter6_reg;
reg   [2:0] trunc_ln121_reg_1031_pp0_iter7_reg;
reg   [2:0] trunc_ln121_reg_1031_pp0_iter8_reg;
reg   [2:0] trunc_ln121_reg_1031_pp0_iter9_reg;
reg   [2:0] trunc_ln121_reg_1031_pp0_iter10_reg;
reg   [2:0] trunc_ln121_reg_1031_pp0_iter11_reg;
reg   [2:0] trunc_ln121_reg_1031_pp0_iter12_reg;
reg   [2:0] trunc_ln121_reg_1031_pp0_iter13_reg;
reg   [2:0] trunc_ln121_reg_1031_pp0_iter14_reg;
reg   [2:0] trunc_ln121_reg_1031_pp0_iter15_reg;
reg   [2:0] trunc_ln121_reg_1031_pp0_iter16_reg;
reg   [2:0] trunc_ln121_reg_1031_pp0_iter17_reg;
reg   [511:0] gmem_addr_4_read_reg_1035;
wire   [7:0] trunc_ln117_1_fu_662_p1;
reg   [7:0] trunc_ln117_1_reg_1040;
reg   [511:0] gmem_addr_5_read_reg_1045;
reg   [511:0] gmem_addr_read_reg_1050;
wire   [8:0] sub_ln117_fu_693_p2;
reg   [8:0] sub_ln117_reg_1055;
reg   [511:0] gmem_addr_6_read_reg_1060;
wire   [7:0] trunc_ln117_13_fu_715_p1;
reg   [7:0] trunc_ln117_13_reg_1065;
wire   [7:0] trunc_ln117_10_fu_735_p1;
reg   [7:0] trunc_ln117_10_reg_1070;
reg   [511:0] gmem_addr_7_read_reg_1075;
wire  signed [10:0] sum_fu_806_p2;
wire   [0:0] icmp_ln120_fu_844_p2;
reg   [0:0] icmp_ln120_reg_1090;
reg   [0:0] icmp_ln120_reg_1090_pp0_iter16_reg;
reg   [0:0] icmp_ln120_reg_1090_pp0_iter17_reg;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage2_subdone;
wire   [63:0] zext_ln121_1_fu_873_p1;
wire  signed [63:0] sext_ln117_fu_474_p1;
wire  signed [63:0] sext_ln117_1_fu_527_p1;
wire  signed [63:0] sext_ln117_2_fu_565_p1;
wire  signed [63:0] sext_ln117_3_fu_594_p1;
wire  signed [63:0] sext_ln117_4_fu_632_p1;
reg   [9:0] c_fu_138;
wire   [9:0] add_ln121_fu_437_p2;
wire    ap_loop_init;
reg   [8:0] r_fu_142;
wire   [8:0] select_ln108_fu_362_p3;
reg   [18:0] indvar_flatten34_fu_146;
wire   [18:0] add_ln108_fu_330_p2;
reg    image_gray_5_we0_local;
wire   [7:0] pixel_fu_859_p3;
reg    image_gray_5_ce0_local;
reg    image_gray_3_we0_local;
reg    image_gray_3_ce0_local;
reg    image_gray_2_we0_local;
reg    image_gray_2_ce0_local;
reg    image_gray_1_we0_local;
reg    image_gray_1_ce0_local;
reg    image_gray_we0_local;
reg    image_gray_ce0_local;
reg    image_gray_4_we0_local;
reg    image_gray_4_ce0_local;
wire   [0:0] icmp_ln110_fu_342_p2;
wire   [8:0] indvars_iv_next25_i28100_fu_356_p2;
wire   [17:0] tmp_fu_370_p3;
wire   [15:0] tmp_29_fu_382_p3;
wire   [18:0] p_shl30_fu_378_p1;
wire   [18:0] p_shl31_fu_390_p1;
wire   [9:0] select_ln81_fu_348_p3;
wire   [18:0] zext_ln110_1_fu_404_p1;
wire   [18:0] empty_fu_394_p2;
wire   [63:0] add_ln113_cast_fu_414_p1;
wire   [10:0] zext_ln110_fu_400_p1;
wire   [10:0] add_ln121_2_fu_443_p2;
wire   [18:0] zext_ln121_fu_449_p1;
wire   [63:0] add_ln117_fu_484_p2;
wire   [18:0] mul_ln121_fu_506_p0;
wire   [20:0] mul_ln121_fu_506_p1;
wire   [38:0] mul_ln121_fu_506_p2;
wire   [3:0] grp_fu_522_p1;
wire   [18:0] tmp16_fu_537_p2;
wire   [63:0] tmp16_cast_fu_542_p1;
wire   [63:0] add_ln117_1_fu_575_p2;
wire   [18:0] add_ln117_3_fu_604_p2;
wire   [63:0] zext_ln117_6_fu_609_p1;
wire   [63:0] add_ln117_2_fu_613_p2;
wire   [2:0] grp_fu_522_p2;
wire   [8:0] shl_ln2_fu_646_p3;
wire   [511:0] zext_ln117_fu_653_p1;
wire   [511:0] lshr_ln117_fu_657_p2;
wire   [8:0] shl_ln117_1_fu_669_p3;
wire   [511:0] zext_ln117_2_fu_676_p1;
wire   [511:0] lshr_ln117_1_fu_680_p2;
wire   [7:0] trunc_ln117_5_fu_685_p1;
wire   [8:0] trunc_ln117_3_cast_fu_689_p1;
wire   [8:0] zext_ln117_1_fu_666_p1;
wire   [8:0] shl_ln117_2_fu_699_p3;
wire   [511:0] zext_ln117_3_fu_706_p1;
wire   [511:0] lshr_ln117_2_fu_710_p2;
wire   [8:0] shl_ln117_3_fu_719_p3;
wire   [511:0] zext_ln117_4_fu_726_p1;
wire   [511:0] lshr_ln117_3_fu_730_p2;
wire   [8:0] shl_ln117_4_fu_742_p3;
wire   [511:0] zext_ln117_7_fu_749_p1;
wire   [511:0] lshr_ln117_4_fu_753_p2;
wire   [7:0] trunc_ln117_12_fu_758_p1;
wire   [8:0] tmp_30_fu_766_p3;
wire   [9:0] zext_ln117_9_fu_773_p1;
wire   [9:0] sub_ln117_1_fu_777_p2;
wire  signed [10:0] sext_ln117_6_fu_787_p1;
wire  signed [10:0] sext_ln117_5_fu_783_p1;
wire   [8:0] zext_ln117_5_fu_739_p1;
wire   [8:0] zext_ln117_8_fu_762_p1;
wire   [8:0] add_ln117_5_fu_796_p2;
wire   [10:0] zext_ln117_10_fu_802_p1;
wire   [10:0] add_ln117_4_fu_790_p2;
wire   [4:0] select_ln120_fu_812_p3;
wire   [5:0] grp_fu_822_p1;
wire   [12:0] Ny_fu_828_p3;
wire  signed [13:0] sext_ln120_fu_840_p1;
wire   [13:0] zext_ln120_1_fu_836_p1;
wire   [7:0] grp_fu_822_p2;
wire   [0:0] xor_ln120_fu_850_p2;
wire   [7:0] trunc_ln120_fu_855_p1;
reg    grp_fu_522_ce;
reg    grp_fu_822_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter17_stage2;
reg    ap_idle_pp0_0to16;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg   [4:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to18;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage3_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire   [10:0] grp_fu_822_p10;
wire   [38:0] mul_ln121_fu_506_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 c_fu_138 = 10'd0;
#0 r_fu_142 = 9'd0;
#0 indvar_flatten34_fu_146 = 19'd0;
#0 ap_done_reg = 1'b0;
end

edgedetect_mul_19ns_21ns_39_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 21 ),
    .dout_WIDTH( 39 ))
mul_19ns_21ns_39_1_1_U78(
    .din0(mul_ln121_fu_506_p0),
    .din1(mul_ln121_fu_506_p1),
    .dout(mul_ln121_fu_506_p2)
);

edgedetect_urem_19ns_4ns_3_23_1 #(
    .ID( 1 ),
    .NUM_STAGE( 23 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 3 ))
urem_19ns_4ns_3_23_1_U79(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(add_ln113_reg_924),
    .din1(grp_fu_522_p1),
    .ce(grp_fu_522_ce),
    .dout(grp_fu_522_p2)
);

edgedetect_sdiv_11s_6ns_8_15_1 #(
    .ID( 1 ),
    .NUM_STAGE( 15 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 8 ))
sdiv_11s_6ns_8_15_1_U80(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sum_fu_806_p2),
    .din1(grp_fu_822_p1),
    .ce(grp_fu_822_ce),
    .dout(grp_fu_822_p2)
);

edgedetect_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage4),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone) & (ap_loop_exit_ready_pp0_iter17_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage4)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter18 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter17_stage2) & (ap_idle_pp0_0to16 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter17_stage2) & (ap_idle_pp0_0to16 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter17_stage2) & (ap_idle_pp0_0to16 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter12_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter17_stage2) & (ap_idle_pp0_0to16 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter13_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter17_stage2) & (ap_idle_pp0_0to16 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter14_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter17_stage2) & (ap_idle_pp0_0to16 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter15_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter17_stage2) & (ap_idle_pp0_0to16 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter16_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter17_stage2) & (ap_idle_pp0_0to16 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter17_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter17_stage2) & (ap_idle_pp0_0to16 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter17_stage2) & (ap_idle_pp0_0to16 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter17_stage2) & (ap_idle_pp0_0to16 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter17_stage2) & (ap_idle_pp0_0to16 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter17_stage2) & (ap_idle_pp0_0to16 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter17_stage2) & (ap_idle_pp0_0to16 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter17_stage2) & (ap_idle_pp0_0to16 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter17_stage2) & (ap_idle_pp0_0to16 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter17_stage2) & (ap_idle_pp0_0to16 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        c_fu_138 <= 10'd0;
    end else if (((icmp_ln108_fu_324_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        c_fu_138 <= add_ln121_fu_437_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten34_fu_146 <= 19'd0;
    end else if (((icmp_ln108_fu_324_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        indvar_flatten34_fu_146 <= add_ln108_fu_330_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r_fu_142 <= 9'd0;
    end else if (((icmp_ln108_fu_324_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        r_fu_142 <= select_ln108_fu_362_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln113_reg_924 <= add_ln113_fu_408_p2;
        add_ln121_1_reg_946 <= add_ln121_1_fu_453_p2;
        empty_36_reg_931 <= empty_36_fu_418_p2;
        gmem_addr_6_read_reg_1060 <= m_axi_gmem_RDATA;
        icmp_ln108_reg_920 <= icmp_ln108_fu_324_p2;
        icmp_ln108_reg_920_pp0_iter10_reg <= icmp_ln108_reg_920_pp0_iter9_reg;
        icmp_ln108_reg_920_pp0_iter11_reg <= icmp_ln108_reg_920_pp0_iter10_reg;
        icmp_ln108_reg_920_pp0_iter12_reg <= icmp_ln108_reg_920_pp0_iter11_reg;
        icmp_ln108_reg_920_pp0_iter13_reg <= icmp_ln108_reg_920_pp0_iter12_reg;
        icmp_ln108_reg_920_pp0_iter14_reg <= icmp_ln108_reg_920_pp0_iter13_reg;
        icmp_ln108_reg_920_pp0_iter15_reg <= icmp_ln108_reg_920_pp0_iter14_reg;
        icmp_ln108_reg_920_pp0_iter16_reg <= icmp_ln108_reg_920_pp0_iter15_reg;
        icmp_ln108_reg_920_pp0_iter17_reg <= icmp_ln108_reg_920_pp0_iter16_reg;
        icmp_ln108_reg_920_pp0_iter1_reg <= icmp_ln108_reg_920;
        icmp_ln108_reg_920_pp0_iter2_reg <= icmp_ln108_reg_920_pp0_iter1_reg;
        icmp_ln108_reg_920_pp0_iter3_reg <= icmp_ln108_reg_920_pp0_iter2_reg;
        icmp_ln108_reg_920_pp0_iter4_reg <= icmp_ln108_reg_920_pp0_iter3_reg;
        icmp_ln108_reg_920_pp0_iter5_reg <= icmp_ln108_reg_920_pp0_iter4_reg;
        icmp_ln108_reg_920_pp0_iter6_reg <= icmp_ln108_reg_920_pp0_iter5_reg;
        icmp_ln108_reg_920_pp0_iter7_reg <= icmp_ln108_reg_920_pp0_iter6_reg;
        icmp_ln108_reg_920_pp0_iter8_reg <= icmp_ln108_reg_920_pp0_iter7_reg;
        icmp_ln108_reg_920_pp0_iter9_reg <= icmp_ln108_reg_920_pp0_iter8_reg;
        trunc_ln117_13_reg_1065 <= trunc_ln117_13_fu_715_p1;
        trunc_ln117_reg_941 <= trunc_ln117_fu_433_p1;
        trunc_ln117_reg_941_pp0_iter10_reg <= trunc_ln117_reg_941_pp0_iter9_reg;
        trunc_ln117_reg_941_pp0_iter11_reg <= trunc_ln117_reg_941_pp0_iter10_reg;
        trunc_ln117_reg_941_pp0_iter12_reg <= trunc_ln117_reg_941_pp0_iter11_reg;
        trunc_ln117_reg_941_pp0_iter13_reg <= trunc_ln117_reg_941_pp0_iter12_reg;
        trunc_ln117_reg_941_pp0_iter14_reg <= trunc_ln117_reg_941_pp0_iter13_reg;
        trunc_ln117_reg_941_pp0_iter1_reg <= trunc_ln117_reg_941;
        trunc_ln117_reg_941_pp0_iter2_reg <= trunc_ln117_reg_941_pp0_iter1_reg;
        trunc_ln117_reg_941_pp0_iter3_reg <= trunc_ln117_reg_941_pp0_iter2_reg;
        trunc_ln117_reg_941_pp0_iter4_reg <= trunc_ln117_reg_941_pp0_iter3_reg;
        trunc_ln117_reg_941_pp0_iter5_reg <= trunc_ln117_reg_941_pp0_iter4_reg;
        trunc_ln117_reg_941_pp0_iter6_reg <= trunc_ln117_reg_941_pp0_iter5_reg;
        trunc_ln117_reg_941_pp0_iter7_reg <= trunc_ln117_reg_941_pp0_iter6_reg;
        trunc_ln117_reg_941_pp0_iter8_reg <= trunc_ln117_reg_941_pp0_iter7_reg;
        trunc_ln117_reg_941_pp0_iter9_reg <= trunc_ln117_reg_941_pp0_iter8_reg;
        trunc_ln117_s_reg_936 <= {{empty_36_fu_418_p2[63:6]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        empty_37_reg_978 <= empty_37_fu_546_p2;
        gmem_addr_4_read_reg_1035 <= m_axi_gmem_RDATA;
        icmp_ln120_reg_1090 <= icmp_ln120_fu_844_p2;
        icmp_ln120_reg_1090_pp0_iter16_reg <= icmp_ln120_reg_1090;
        icmp_ln120_reg_1090_pp0_iter17_reg <= icmp_ln120_reg_1090_pp0_iter16_reg;
        trunc_ln117_4_reg_983 <= {{empty_37_fu_546_p2[63:6]}};
        trunc_ln117_7_reg_988 <= trunc_ln117_7_fu_561_p1;
        trunc_ln117_7_reg_988_pp0_iter10_reg <= trunc_ln117_7_reg_988_pp0_iter9_reg;
        trunc_ln117_7_reg_988_pp0_iter11_reg <= trunc_ln117_7_reg_988_pp0_iter10_reg;
        trunc_ln117_7_reg_988_pp0_iter12_reg <= trunc_ln117_7_reg_988_pp0_iter11_reg;
        trunc_ln117_7_reg_988_pp0_iter13_reg <= trunc_ln117_7_reg_988_pp0_iter12_reg;
        trunc_ln117_7_reg_988_pp0_iter14_reg <= trunc_ln117_7_reg_988_pp0_iter13_reg;
        trunc_ln117_7_reg_988_pp0_iter1_reg <= trunc_ln117_7_reg_988;
        trunc_ln117_7_reg_988_pp0_iter2_reg <= trunc_ln117_7_reg_988_pp0_iter1_reg;
        trunc_ln117_7_reg_988_pp0_iter3_reg <= trunc_ln117_7_reg_988_pp0_iter2_reg;
        trunc_ln117_7_reg_988_pp0_iter4_reg <= trunc_ln117_7_reg_988_pp0_iter3_reg;
        trunc_ln117_7_reg_988_pp0_iter5_reg <= trunc_ln117_7_reg_988_pp0_iter4_reg;
        trunc_ln117_7_reg_988_pp0_iter6_reg <= trunc_ln117_7_reg_988_pp0_iter5_reg;
        trunc_ln117_7_reg_988_pp0_iter7_reg <= trunc_ln117_7_reg_988_pp0_iter6_reg;
        trunc_ln117_7_reg_988_pp0_iter8_reg <= trunc_ln117_7_reg_988_pp0_iter7_reg;
        trunc_ln117_7_reg_988_pp0_iter9_reg <= trunc_ln117_7_reg_988_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        gmem_addr_5_read_reg_1045 <= m_axi_gmem_RDATA;
        trunc_ln117_1_reg_1040 <= trunc_ln117_1_fu_662_p1;
        trunc_ln117_6_reg_999 <= {{add_ln117_1_fu_575_p2[63:6]}};
        trunc_ln117_9_reg_1004 <= trunc_ln117_9_fu_590_p1;
        trunc_ln117_9_reg_1004_pp0_iter10_reg <= trunc_ln117_9_reg_1004_pp0_iter9_reg;
        trunc_ln117_9_reg_1004_pp0_iter11_reg <= trunc_ln117_9_reg_1004_pp0_iter10_reg;
        trunc_ln117_9_reg_1004_pp0_iter12_reg <= trunc_ln117_9_reg_1004_pp0_iter11_reg;
        trunc_ln117_9_reg_1004_pp0_iter13_reg <= trunc_ln117_9_reg_1004_pp0_iter12_reg;
        trunc_ln117_9_reg_1004_pp0_iter14_reg <= trunc_ln117_9_reg_1004_pp0_iter13_reg;
        trunc_ln117_9_reg_1004_pp0_iter1_reg <= trunc_ln117_9_reg_1004;
        trunc_ln117_9_reg_1004_pp0_iter2_reg <= trunc_ln117_9_reg_1004_pp0_iter1_reg;
        trunc_ln117_9_reg_1004_pp0_iter3_reg <= trunc_ln117_9_reg_1004_pp0_iter2_reg;
        trunc_ln117_9_reg_1004_pp0_iter4_reg <= trunc_ln117_9_reg_1004_pp0_iter3_reg;
        trunc_ln117_9_reg_1004_pp0_iter5_reg <= trunc_ln117_9_reg_1004_pp0_iter4_reg;
        trunc_ln117_9_reg_1004_pp0_iter6_reg <= trunc_ln117_9_reg_1004_pp0_iter5_reg;
        trunc_ln117_9_reg_1004_pp0_iter7_reg <= trunc_ln117_9_reg_1004_pp0_iter6_reg;
        trunc_ln117_9_reg_1004_pp0_iter8_reg <= trunc_ln117_9_reg_1004_pp0_iter7_reg;
        trunc_ln117_9_reg_1004_pp0_iter9_reg <= trunc_ln117_9_reg_1004_pp0_iter8_reg;
        trunc_ln121_reg_1031 <= trunc_ln121_fu_642_p1;
        trunc_ln121_reg_1031_pp0_iter10_reg <= trunc_ln121_reg_1031_pp0_iter9_reg;
        trunc_ln121_reg_1031_pp0_iter11_reg <= trunc_ln121_reg_1031_pp0_iter10_reg;
        trunc_ln121_reg_1031_pp0_iter12_reg <= trunc_ln121_reg_1031_pp0_iter11_reg;
        trunc_ln121_reg_1031_pp0_iter13_reg <= trunc_ln121_reg_1031_pp0_iter12_reg;
        trunc_ln121_reg_1031_pp0_iter14_reg <= trunc_ln121_reg_1031_pp0_iter13_reg;
        trunc_ln121_reg_1031_pp0_iter15_reg <= trunc_ln121_reg_1031_pp0_iter14_reg;
        trunc_ln121_reg_1031_pp0_iter16_reg <= trunc_ln121_reg_1031_pp0_iter15_reg;
        trunc_ln121_reg_1031_pp0_iter17_reg <= trunc_ln121_reg_1031_pp0_iter16_reg;
        trunc_ln121_reg_1031_pp0_iter5_reg <= trunc_ln121_reg_1031;
        trunc_ln121_reg_1031_pp0_iter6_reg <= trunc_ln121_reg_1031_pp0_iter5_reg;
        trunc_ln121_reg_1031_pp0_iter7_reg <= trunc_ln121_reg_1031_pp0_iter6_reg;
        trunc_ln121_reg_1031_pp0_iter8_reg <= trunc_ln121_reg_1031_pp0_iter7_reg;
        trunc_ln121_reg_1031_pp0_iter9_reg <= trunc_ln121_reg_1031_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        gmem_addr_7_read_reg_1075 <= m_axi_gmem_RDATA;
        tmp_31_reg_967 <= {{mul_ln121_fu_506_p2[38:22]}};
        tmp_31_reg_967_pp0_iter10_reg <= tmp_31_reg_967_pp0_iter9_reg;
        tmp_31_reg_967_pp0_iter11_reg <= tmp_31_reg_967_pp0_iter10_reg;
        tmp_31_reg_967_pp0_iter12_reg <= tmp_31_reg_967_pp0_iter11_reg;
        tmp_31_reg_967_pp0_iter13_reg <= tmp_31_reg_967_pp0_iter12_reg;
        tmp_31_reg_967_pp0_iter14_reg <= tmp_31_reg_967_pp0_iter13_reg;
        tmp_31_reg_967_pp0_iter15_reg <= tmp_31_reg_967_pp0_iter14_reg;
        tmp_31_reg_967_pp0_iter16_reg <= tmp_31_reg_967_pp0_iter15_reg;
        tmp_31_reg_967_pp0_iter17_reg <= tmp_31_reg_967_pp0_iter16_reg;
        tmp_31_reg_967_pp0_iter1_reg <= tmp_31_reg_967;
        tmp_31_reg_967_pp0_iter2_reg <= tmp_31_reg_967_pp0_iter1_reg;
        tmp_31_reg_967_pp0_iter3_reg <= tmp_31_reg_967_pp0_iter2_reg;
        tmp_31_reg_967_pp0_iter4_reg <= tmp_31_reg_967_pp0_iter3_reg;
        tmp_31_reg_967_pp0_iter5_reg <= tmp_31_reg_967_pp0_iter4_reg;
        tmp_31_reg_967_pp0_iter6_reg <= tmp_31_reg_967_pp0_iter5_reg;
        tmp_31_reg_967_pp0_iter7_reg <= tmp_31_reg_967_pp0_iter6_reg;
        tmp_31_reg_967_pp0_iter8_reg <= tmp_31_reg_967_pp0_iter7_reg;
        tmp_31_reg_967_pp0_iter9_reg <= tmp_31_reg_967_pp0_iter8_reg;
        trunc_ln117_10_reg_1070 <= trunc_ln117_10_fu_735_p1;
        trunc_ln117_2_reg_957 <= {{add_ln117_fu_484_p2[63:6]}};
        trunc_ln117_3_reg_962 <= trunc_ln117_3_fu_499_p1;
        trunc_ln117_3_reg_962_pp0_iter10_reg <= trunc_ln117_3_reg_962_pp0_iter9_reg;
        trunc_ln117_3_reg_962_pp0_iter11_reg <= trunc_ln117_3_reg_962_pp0_iter10_reg;
        trunc_ln117_3_reg_962_pp0_iter12_reg <= trunc_ln117_3_reg_962_pp0_iter11_reg;
        trunc_ln117_3_reg_962_pp0_iter13_reg <= trunc_ln117_3_reg_962_pp0_iter12_reg;
        trunc_ln117_3_reg_962_pp0_iter14_reg <= trunc_ln117_3_reg_962_pp0_iter13_reg;
        trunc_ln117_3_reg_962_pp0_iter1_reg <= trunc_ln117_3_reg_962;
        trunc_ln117_3_reg_962_pp0_iter2_reg <= trunc_ln117_3_reg_962_pp0_iter1_reg;
        trunc_ln117_3_reg_962_pp0_iter3_reg <= trunc_ln117_3_reg_962_pp0_iter2_reg;
        trunc_ln117_3_reg_962_pp0_iter4_reg <= trunc_ln117_3_reg_962_pp0_iter3_reg;
        trunc_ln117_3_reg_962_pp0_iter5_reg <= trunc_ln117_3_reg_962_pp0_iter4_reg;
        trunc_ln117_3_reg_962_pp0_iter6_reg <= trunc_ln117_3_reg_962_pp0_iter5_reg;
        trunc_ln117_3_reg_962_pp0_iter7_reg <= trunc_ln117_3_reg_962_pp0_iter6_reg;
        trunc_ln117_3_reg_962_pp0_iter8_reg <= trunc_ln117_3_reg_962_pp0_iter7_reg;
        trunc_ln117_3_reg_962_pp0_iter9_reg <= trunc_ln117_3_reg_962_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        gmem_addr_read_reg_1050 <= m_axi_gmem_RDATA;
        sub_ln117_reg_1055 <= sub_ln117_fu_693_p2;
        trunc_ln117_11_reg_1020 <= trunc_ln117_11_fu_628_p1;
        trunc_ln117_11_reg_1020_pp0_iter10_reg <= trunc_ln117_11_reg_1020_pp0_iter9_reg;
        trunc_ln117_11_reg_1020_pp0_iter11_reg <= trunc_ln117_11_reg_1020_pp0_iter10_reg;
        trunc_ln117_11_reg_1020_pp0_iter12_reg <= trunc_ln117_11_reg_1020_pp0_iter11_reg;
        trunc_ln117_11_reg_1020_pp0_iter13_reg <= trunc_ln117_11_reg_1020_pp0_iter12_reg;
        trunc_ln117_11_reg_1020_pp0_iter14_reg <= trunc_ln117_11_reg_1020_pp0_iter13_reg;
        trunc_ln117_11_reg_1020_pp0_iter15_reg <= trunc_ln117_11_reg_1020_pp0_iter14_reg;
        trunc_ln117_11_reg_1020_pp0_iter2_reg <= trunc_ln117_11_reg_1020;
        trunc_ln117_11_reg_1020_pp0_iter3_reg <= trunc_ln117_11_reg_1020_pp0_iter2_reg;
        trunc_ln117_11_reg_1020_pp0_iter4_reg <= trunc_ln117_11_reg_1020_pp0_iter3_reg;
        trunc_ln117_11_reg_1020_pp0_iter5_reg <= trunc_ln117_11_reg_1020_pp0_iter4_reg;
        trunc_ln117_11_reg_1020_pp0_iter6_reg <= trunc_ln117_11_reg_1020_pp0_iter5_reg;
        trunc_ln117_11_reg_1020_pp0_iter7_reg <= trunc_ln117_11_reg_1020_pp0_iter6_reg;
        trunc_ln117_11_reg_1020_pp0_iter8_reg <= trunc_ln117_11_reg_1020_pp0_iter7_reg;
        trunc_ln117_11_reg_1020_pp0_iter9_reg <= trunc_ln117_11_reg_1020_pp0_iter8_reg;
        trunc_ln117_8_reg_1015 <= {{add_ln117_2_fu_613_p2[63:6]}};
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone) & (icmp_ln108_reg_920 == 1'd1))) begin
        ap_condition_exit_pp0_iter0_stage4 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (icmp_ln108_reg_920_pp0_iter17_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
        ap_condition_exit_pp0_iter17_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter17_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone) & (ap_loop_exit_ready_pp0_iter17_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to16 = 1'b1;
    end else begin
        ap_idle_pp0_0to16 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to18 = 1'b1;
    end else begin
        ap_idle_pp0_1to18 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln108_reg_920 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4) & (icmp_ln108_reg_920 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3) & (icmp_ln108_reg_920 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (icmp_ln108_reg_920 == 1'd0)))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_522_ce = 1'b1;
    end else begin
        grp_fu_522_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_822_ce = 1'b1;
    end else begin
        grp_fu_822_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        image_gray_1_ce0_local = 1'b1;
    end else begin
        image_gray_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (trunc_ln121_reg_1031_pp0_iter17_reg == 3'd2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        image_gray_1_we0_local = 1'b1;
    end else begin
        image_gray_1_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        image_gray_2_ce0_local = 1'b1;
    end else begin
        image_gray_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (trunc_ln121_reg_1031_pp0_iter17_reg == 3'd3) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        image_gray_2_we0_local = 1'b1;
    end else begin
        image_gray_2_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        image_gray_3_ce0_local = 1'b1;
    end else begin
        image_gray_3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (trunc_ln121_reg_1031_pp0_iter17_reg == 3'd4) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        image_gray_3_we0_local = 1'b1;
    end else begin
        image_gray_3_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        image_gray_4_ce0_local = 1'b1;
    end else begin
        image_gray_4_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln121_reg_1031_pp0_iter17_reg == 3'd1) & ~(trunc_ln121_reg_1031_pp0_iter17_reg == 3'd2) & ~(trunc_ln121_reg_1031_pp0_iter17_reg == 3'd3) & ~(trunc_ln121_reg_1031_pp0_iter17_reg == 3'd4) & ~(trunc_ln121_reg_1031_pp0_iter17_reg == 3'd0) & (ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        image_gray_4_we0_local = 1'b1;
    end else begin
        image_gray_4_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        image_gray_5_ce0_local = 1'b1;
    end else begin
        image_gray_5_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (trunc_ln121_reg_1031_pp0_iter17_reg == 3'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        image_gray_5_we0_local = 1'b1;
    end else begin
        image_gray_5_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        image_gray_ce0_local = 1'b1;
    end else begin
        image_gray_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (trunc_ln121_reg_1031_pp0_iter17_reg == 3'd1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        image_gray_we0_local = 1'b1;
    end else begin
        image_gray_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        m_axi_gmem_ARADDR = sext_ln117_4_fu_632_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln108_reg_920 == 1'd0))) begin
        m_axi_gmem_ARADDR = sext_ln117_3_fu_594_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln108_reg_920 == 1'd0))) begin
        m_axi_gmem_ARADDR = sext_ln117_2_fu_565_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln108_reg_920 == 1'd0))) begin
        m_axi_gmem_ARADDR = sext_ln117_1_fu_527_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln108_reg_920 == 1'd0))) begin
        m_axi_gmem_ARADDR = sext_ln117_fu_474_p1;
    end else begin
        m_axi_gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln108_reg_920 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln108_reg_920 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln108_reg_920 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln108_reg_920 == 1'd0)))) begin
        m_axi_gmem_ARVALID = 1'b1;
    end else begin
        m_axi_gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)))) begin
        m_axi_gmem_RREADY = 1'b1;
    end else begin
        m_axi_gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to18 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if (((1'b1 == ap_condition_exit_pp0_iter17_stage2) & (ap_idle_pp0_0to16 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Ny_fu_828_p3 = {{select_ln120_fu_812_p3}, {8'd0}};

assign add_ln108_fu_330_p2 = (indvar_flatten34_fu_146 + 19'd1);

assign add_ln113_cast_fu_414_p1 = add_ln113_fu_408_p2;

assign add_ln113_fu_408_p2 = (zext_ln110_1_fu_404_p1 + empty_fu_394_p2);

assign add_ln117_1_fu_575_p2 = (empty_37_reg_978 + 64'd2);

assign add_ln117_2_fu_613_p2 = (zext_ln117_6_fu_609_p1 + output_r);

assign add_ln117_3_fu_604_p2 = (add_ln113_reg_924 + 19'd1281);

assign add_ln117_4_fu_790_p2 = ($signed(sext_ln117_6_fu_787_p1) + $signed(sext_ln117_5_fu_783_p1));

assign add_ln117_5_fu_796_p2 = (zext_ln117_5_fu_739_p1 + zext_ln117_8_fu_762_p1);

assign add_ln117_fu_484_p2 = (empty_36_reg_931 + 64'd2);

assign add_ln121_1_fu_453_p2 = (zext_ln121_fu_449_p1 + empty_fu_394_p2);

assign add_ln121_2_fu_443_p2 = (zext_ln110_fu_400_p1 + 11'd641);

assign add_ln121_fu_437_p2 = (select_ln81_fu_348_p3 + 10'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state6_io)) | ((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_block_state76_pp0_stage0_iter15)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state6_io)) | ((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_block_state76_pp0_stage0_iter15)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem_ARREADY == 1'b0)) | ((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_block_state77_pp0_stage1_iter15)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem_ARREADY == 1'b0)) | ((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_block_state77_pp0_stage1_iter15)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_block_state78_pp0_stage2_iter15)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_io)));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_block_state78_pp0_stage2_iter15)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_io)));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001 = (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_block_state74_pp0_stage3_iter14)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state4_io)));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_block_state74_pp0_stage3_iter14)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state4_io)));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_11001 = (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_block_state75_pp0_stage4_iter14)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state5_io)));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_block_state75_pp0_stage4_iter14)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state5_io)));
end

always @ (*) begin
    ap_block_state3_io = ((icmp_ln108_reg_920 == 1'd0) & (m_axi_gmem_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state4_io = ((icmp_ln108_reg_920 == 1'd0) & (m_axi_gmem_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state5_io = ((icmp_ln108_reg_920 == 1'd0) & (m_axi_gmem_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state6_io = ((icmp_ln108_reg_920 == 1'd0) & (m_axi_gmem_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state74_pp0_stage3_iter14 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state75_pp0_stage4_iter14 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state76_pp0_stage0_iter15 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state77_pp0_stage1_iter15 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state78_pp0_stage2_iter15 = (m_axi_gmem_RVALID == 1'b0);
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage4;

assign ap_ready = ap_ready_sig;

assign empty_36_fu_418_p2 = (add_ln113_cast_fu_414_p1 + output_r);

assign empty_37_fu_546_p2 = (tmp16_cast_fu_542_p1 + output_r);

assign empty_fu_394_p2 = (p_shl30_fu_378_p1 + p_shl31_fu_390_p1);

assign grp_fu_522_p1 = 19'd6;

assign grp_fu_822_p1 = grp_fu_822_p10;

assign grp_fu_822_p10 = select_ln120_fu_812_p3;

assign icmp_ln108_fu_324_p2 = ((indvar_flatten34_fu_146 == 19'd304964) ? 1'b1 : 1'b0);

assign icmp_ln110_fu_342_p2 = ((c_fu_138 == 10'd638) ? 1'b1 : 1'b0);

assign icmp_ln120_fu_844_p2 = (($signed(sext_ln120_fu_840_p1) < $signed(zext_ln120_1_fu_836_p1)) ? 1'b1 : 1'b0);

assign image_gray_1_address0 = zext_ln121_1_fu_873_p1;

assign image_gray_1_ce0 = image_gray_1_ce0_local;

assign image_gray_1_d0 = pixel_fu_859_p3;

assign image_gray_1_we0 = image_gray_1_we0_local;

assign image_gray_2_address0 = zext_ln121_1_fu_873_p1;

assign image_gray_2_ce0 = image_gray_2_ce0_local;

assign image_gray_2_d0 = pixel_fu_859_p3;

assign image_gray_2_we0 = image_gray_2_we0_local;

assign image_gray_3_address0 = zext_ln121_1_fu_873_p1;

assign image_gray_3_ce0 = image_gray_3_ce0_local;

assign image_gray_3_d0 = pixel_fu_859_p3;

assign image_gray_3_we0 = image_gray_3_we0_local;

assign image_gray_4_address0 = zext_ln121_1_fu_873_p1;

assign image_gray_4_ce0 = image_gray_4_ce0_local;

assign image_gray_4_d0 = pixel_fu_859_p3;

assign image_gray_4_we0 = image_gray_4_we0_local;

assign image_gray_5_address0 = zext_ln121_1_fu_873_p1;

assign image_gray_5_ce0 = image_gray_5_ce0_local;

assign image_gray_5_d0 = pixel_fu_859_p3;

assign image_gray_5_we0 = image_gray_5_we0_local;

assign image_gray_address0 = zext_ln121_1_fu_873_p1;

assign image_gray_ce0 = image_gray_ce0_local;

assign image_gray_d0 = pixel_fu_859_p3;

assign image_gray_we0 = image_gray_we0_local;

assign indvars_iv_next25_i28100_fu_356_p2 = (r_fu_142 + 9'd1);

assign lshr_ln117_1_fu_680_p2 = gmem_addr_5_read_reg_1045 >> zext_ln117_2_fu_676_p1;

assign lshr_ln117_2_fu_710_p2 = gmem_addr_read_reg_1050 >> zext_ln117_3_fu_706_p1;

assign lshr_ln117_3_fu_730_p2 = gmem_addr_6_read_reg_1060 >> zext_ln117_4_fu_726_p1;

assign lshr_ln117_4_fu_753_p2 = gmem_addr_7_read_reg_1075 >> zext_ln117_7_fu_749_p1;

assign lshr_ln117_fu_657_p2 = gmem_addr_4_read_reg_1035 >> zext_ln117_fu_653_p1;

assign m_axi_gmem_ARBURST = 2'd0;

assign m_axi_gmem_ARCACHE = 4'd0;

assign m_axi_gmem_ARID = 1'd0;

assign m_axi_gmem_ARLEN = 64'd1;

assign m_axi_gmem_ARLOCK = 2'd0;

assign m_axi_gmem_ARPROT = 3'd0;

assign m_axi_gmem_ARQOS = 4'd0;

assign m_axi_gmem_ARREGION = 4'd0;

assign m_axi_gmem_ARSIZE = 3'd0;

assign m_axi_gmem_ARUSER = 1'd0;

assign m_axi_gmem_AWADDR = 64'd0;

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLEN = 32'd0;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_AWVALID = 1'b0;

assign m_axi_gmem_BREADY = 1'b0;

assign m_axi_gmem_WDATA = 512'd0;

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WSTRB = 64'd0;

assign m_axi_gmem_WUSER = 1'd0;

assign m_axi_gmem_WVALID = 1'b0;

assign mul_ln121_fu_506_p0 = mul_ln121_fu_506_p00;

assign mul_ln121_fu_506_p00 = add_ln121_1_reg_946;

assign mul_ln121_fu_506_p1 = 39'd699051;

assign p_shl30_fu_378_p1 = tmp_fu_370_p3;

assign p_shl31_fu_390_p1 = tmp_29_fu_382_p3;

assign pixel_fu_859_p3 = ((xor_ln120_fu_850_p2[0:0] == 1'b1) ? 8'd255 : trunc_ln120_fu_855_p1);

assign select_ln108_fu_362_p3 = ((icmp_ln110_fu_342_p2[0:0] == 1'b1) ? indvars_iv_next25_i28100_fu_356_p2 : r_fu_142);

assign select_ln120_fu_812_p3 = ((icmp_ln105[0:0] == 1'b1) ? 5'd1 : normal_factor_5_reload);

assign select_ln81_fu_348_p3 = ((icmp_ln110_fu_342_p2[0:0] == 1'b1) ? 10'd0 : c_fu_138);

assign sext_ln117_1_fu_527_p1 = $signed(trunc_ln117_2_reg_957);

assign sext_ln117_2_fu_565_p1 = $signed(trunc_ln117_4_reg_983);

assign sext_ln117_3_fu_594_p1 = $signed(trunc_ln117_6_reg_999);

assign sext_ln117_4_fu_632_p1 = $signed(trunc_ln117_8_reg_1015);

assign sext_ln117_5_fu_783_p1 = $signed(sub_ln117_1_fu_777_p2);

assign sext_ln117_6_fu_787_p1 = $signed(sub_ln117_reg_1055);

assign sext_ln117_fu_474_p1 = $signed(trunc_ln117_s_reg_936);

assign sext_ln120_fu_840_p1 = sum_fu_806_p2;

assign shl_ln117_1_fu_669_p3 = {{trunc_ln117_3_reg_962_pp0_iter14_reg}, {3'd0}};

assign shl_ln117_2_fu_699_p3 = {{trunc_ln117_7_reg_988_pp0_iter14_reg}, {3'd0}};

assign shl_ln117_3_fu_719_p3 = {{trunc_ln117_9_reg_1004_pp0_iter14_reg}, {3'd0}};

assign shl_ln117_4_fu_742_p3 = {{trunc_ln117_11_reg_1020_pp0_iter15_reg}, {3'd0}};

assign shl_ln2_fu_646_p3 = {{trunc_ln117_reg_941_pp0_iter14_reg}, {3'd0}};

assign sub_ln117_1_fu_777_p2 = (10'd0 - zext_ln117_9_fu_773_p1);

assign sub_ln117_fu_693_p2 = (trunc_ln117_3_cast_fu_689_p1 - zext_ln117_1_fu_666_p1);

assign sum_fu_806_p2 = (zext_ln117_10_fu_802_p1 + add_ln117_4_fu_790_p2);

assign tmp16_cast_fu_542_p1 = tmp16_fu_537_p2;

assign tmp16_fu_537_p2 = (add_ln113_reg_924 + 19'd640);

assign tmp_29_fu_382_p3 = {{select_ln108_fu_362_p3}, {7'd0}};

assign tmp_30_fu_766_p3 = {{trunc_ln117_13_reg_1065}, {1'd0}};

assign tmp_fu_370_p3 = {{select_ln108_fu_362_p3}, {9'd0}};

assign trunc_ln117_10_fu_735_p1 = lshr_ln117_3_fu_730_p2[7:0];

assign trunc_ln117_11_fu_628_p1 = add_ln117_2_fu_613_p2[5:0];

assign trunc_ln117_12_fu_758_p1 = lshr_ln117_4_fu_753_p2[7:0];

assign trunc_ln117_13_fu_715_p1 = lshr_ln117_2_fu_710_p2[7:0];

assign trunc_ln117_1_fu_662_p1 = lshr_ln117_fu_657_p2[7:0];

assign trunc_ln117_3_cast_fu_689_p1 = trunc_ln117_5_fu_685_p1;

assign trunc_ln117_3_fu_499_p1 = add_ln117_fu_484_p2[5:0];

assign trunc_ln117_5_fu_685_p1 = lshr_ln117_1_fu_680_p2[7:0];

assign trunc_ln117_7_fu_561_p1 = empty_37_fu_546_p2[5:0];

assign trunc_ln117_9_fu_590_p1 = add_ln117_1_fu_575_p2[5:0];

assign trunc_ln117_fu_433_p1 = empty_36_fu_418_p2[5:0];

assign trunc_ln120_fu_855_p1 = grp_fu_822_p2[7:0];

assign trunc_ln121_fu_642_p1 = grp_fu_522_p2[2:0];

assign xor_ln120_fu_850_p2 = (icmp_ln120_reg_1090_pp0_iter17_reg ^ 1'd1);

assign zext_ln110_1_fu_404_p1 = select_ln81_fu_348_p3;

assign zext_ln110_fu_400_p1 = select_ln81_fu_348_p3;

assign zext_ln117_10_fu_802_p1 = add_ln117_5_fu_796_p2;

assign zext_ln117_1_fu_666_p1 = trunc_ln117_1_reg_1040;

assign zext_ln117_2_fu_676_p1 = shl_ln117_1_fu_669_p3;

assign zext_ln117_3_fu_706_p1 = shl_ln117_2_fu_699_p3;

assign zext_ln117_4_fu_726_p1 = shl_ln117_3_fu_719_p3;

assign zext_ln117_5_fu_739_p1 = trunc_ln117_10_reg_1070;

assign zext_ln117_6_fu_609_p1 = add_ln117_3_fu_604_p2;

assign zext_ln117_7_fu_749_p1 = shl_ln117_4_fu_742_p3;

assign zext_ln117_8_fu_762_p1 = trunc_ln117_12_fu_758_p1;

assign zext_ln117_9_fu_773_p1 = tmp_30_fu_766_p3;

assign zext_ln117_fu_653_p1 = shl_ln2_fu_646_p3;

assign zext_ln120_1_fu_836_p1 = Ny_fu_828_p3;

assign zext_ln121_1_fu_873_p1 = tmp_31_reg_967_pp0_iter17_reg;

assign zext_ln121_fu_449_p1 = add_ln121_2_fu_443_p2;

endmodule //edgedetect_edgedetect_Pipeline_VITIS_LOOP_108_3_VITIS_LOOP_110_4
