// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module edgedetect_edgedetect_Pipeline_VITIS_LOOP_60_4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        empty_28,
        image_gray_address0,
        image_gray_ce0,
        image_gray_q0,
        image_gray_address1,
        image_gray_ce1,
        image_gray_q1,
        image_gray_1_address0,
        image_gray_1_ce0,
        image_gray_1_q0,
        image_gray_1_address1,
        image_gray_1_ce1,
        image_gray_1_q1,
        image_gray_2_address0,
        image_gray_2_ce0,
        image_gray_2_q0,
        image_gray_2_address1,
        image_gray_2_ce1,
        image_gray_2_q1,
        image_gray_3_address0,
        image_gray_3_ce0,
        image_gray_3_q0,
        image_gray_3_address1,
        image_gray_3_ce1,
        image_gray_3_q1,
        image_gray_4_address0,
        image_gray_4_ce0,
        image_gray_4_q0,
        image_gray_4_address1,
        image_gray_4_ce1,
        image_gray_4_q1,
        image_gray_5_address0,
        image_gray_5_ce0,
        image_gray_5_q0,
        image_gray_5_address1,
        image_gray_5_ce1,
        image_gray_5_q1,
        empty_29,
        empty,
        normal_factor_2_reload,
        icmp_ln55,
        p_cast42,
        output_r
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [511:0] m_axi_gmem_WDATA;
output  [63:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [511:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [8:0] m_axi_gmem_RFIFONUM;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
input  [18:0] empty_28;
output  [15:0] image_gray_address0;
output   image_gray_ce0;
input  [7:0] image_gray_q0;
output  [15:0] image_gray_address1;
output   image_gray_ce1;
input  [7:0] image_gray_q1;
output  [15:0] image_gray_1_address0;
output   image_gray_1_ce0;
input  [7:0] image_gray_1_q0;
output  [15:0] image_gray_1_address1;
output   image_gray_1_ce1;
input  [7:0] image_gray_1_q1;
output  [15:0] image_gray_2_address0;
output   image_gray_2_ce0;
input  [7:0] image_gray_2_q0;
output  [15:0] image_gray_2_address1;
output   image_gray_2_ce1;
input  [7:0] image_gray_2_q1;
output  [15:0] image_gray_3_address0;
output   image_gray_3_ce0;
input  [7:0] image_gray_3_q0;
output  [15:0] image_gray_3_address1;
output   image_gray_3_ce1;
input  [7:0] image_gray_3_q1;
output  [15:0] image_gray_4_address0;
output   image_gray_4_ce0;
input  [7:0] image_gray_4_q0;
output  [15:0] image_gray_4_address1;
output   image_gray_4_ce1;
input  [7:0] image_gray_4_q1;
output  [15:0] image_gray_5_address0;
output   image_gray_5_ce0;
input  [7:0] image_gray_5_q0;
output  [15:0] image_gray_5_address1;
output   image_gray_5_ce1;
input  [7:0] image_gray_5_q1;
input  [18:0] empty_29;
input  [18:0] empty;
input  [5:0] normal_factor_2_reload;
input  [0:0] icmp_ln55;
input  [18:0] p_cast42;
input  [63:0] output_r;

reg ap_idle;
reg m_axi_gmem_AWVALID;
reg m_axi_gmem_WVALID;
reg m_axi_gmem_BREADY;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
reg    ap_enable_reg_pp0_iter42;
reg    ap_enable_reg_pp0_iter43;
reg    ap_enable_reg_pp0_iter44;
reg    ap_enable_reg_pp0_iter45;
reg    ap_enable_reg_pp0_iter46;
reg    ap_enable_reg_pp0_iter47;
reg    ap_enable_reg_pp0_iter48;
reg    ap_enable_reg_pp0_iter49;
reg    ap_enable_reg_pp0_iter50;
reg    ap_enable_reg_pp0_iter51;
reg    ap_enable_reg_pp0_iter52;
reg    ap_enable_reg_pp0_iter53;
reg    ap_enable_reg_pp0_iter54;
reg    ap_enable_reg_pp0_iter55;
reg    ap_enable_reg_pp0_iter56;
reg    ap_enable_reg_pp0_iter57;
reg    ap_enable_reg_pp0_iter58;
reg    ap_enable_reg_pp0_iter59;
reg    ap_enable_reg_pp0_iter60;
reg    ap_enable_reg_pp0_iter61;
reg    ap_enable_reg_pp0_iter62;
reg    ap_enable_reg_pp0_iter63;
reg    ap_enable_reg_pp0_iter64;
reg    ap_enable_reg_pp0_iter65;
reg    ap_enable_reg_pp0_iter66;
reg    ap_enable_reg_pp0_iter67;
reg    ap_enable_reg_pp0_iter68;
reg    ap_enable_reg_pp0_iter69;
reg    ap_enable_reg_pp0_iter70;
reg    ap_enable_reg_pp0_iter71;
reg    ap_enable_reg_pp0_iter72;
reg    ap_enable_reg_pp0_iter73;
reg    ap_enable_reg_pp0_iter74;
reg    ap_enable_reg_pp0_iter75;
reg    ap_enable_reg_pp0_iter76;
reg    ap_enable_reg_pp0_iter77;
reg    ap_enable_reg_pp0_iter78;
reg    ap_enable_reg_pp0_iter79;
reg    ap_enable_reg_pp0_iter80;
reg    ap_enable_reg_pp0_iter81;
reg    ap_enable_reg_pp0_iter82;
reg    ap_enable_reg_pp0_iter83;
reg    ap_enable_reg_pp0_iter84;
reg    ap_enable_reg_pp0_iter85;
reg    ap_enable_reg_pp0_iter86;
reg    ap_enable_reg_pp0_iter87;
reg    ap_enable_reg_pp0_iter88;
reg    ap_enable_reg_pp0_iter89;
reg    ap_enable_reg_pp0_iter90;
reg    ap_enable_reg_pp0_iter91;
reg    ap_enable_reg_pp0_iter92;
reg    ap_enable_reg_pp0_iter93;
reg    ap_enable_reg_pp0_iter94;
reg    ap_enable_reg_pp0_iter95;
reg    ap_enable_reg_pp0_iter96;
reg    ap_enable_reg_pp0_iter97;
reg    ap_enable_reg_pp0_iter98;
reg    ap_enable_reg_pp0_iter99;
reg    ap_enable_reg_pp0_iter100;
reg    ap_enable_reg_pp0_iter101;
reg    ap_enable_reg_pp0_iter102;
reg    ap_enable_reg_pp0_iter103;
reg    ap_enable_reg_pp0_iter104;
reg    ap_enable_reg_pp0_iter105;
reg    ap_enable_reg_pp0_iter106;
reg    ap_enable_reg_pp0_iter107;
reg    ap_enable_reg_pp0_iter108;
reg    ap_enable_reg_pp0_iter109;
reg    ap_idle_pp0;
reg    ap_block_state110_pp0_stage0_iter109;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln60_fu_699_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem_blk_n_AW;
wire    ap_block_pp0_stage0;
reg    gmem_blk_n_W;
reg    gmem_blk_n_B;
reg    ap_block_pp0_stage0_11001;
wire   [63:0] p_cast42_cast_fu_687_p1;
reg   [63:0] p_cast42_cast_reg_1620;
reg   [9:0] c_1_reg_1625;
reg   [9:0] c_1_reg_1625_pp0_iter1_reg;
reg   [9:0] c_1_reg_1625_pp0_iter2_reg;
reg   [9:0] c_1_reg_1625_pp0_iter3_reg;
reg   [9:0] c_1_reg_1625_pp0_iter4_reg;
reg   [9:0] c_1_reg_1625_pp0_iter5_reg;
reg   [9:0] c_1_reg_1625_pp0_iter6_reg;
reg   [9:0] c_1_reg_1625_pp0_iter7_reg;
reg   [9:0] c_1_reg_1625_pp0_iter8_reg;
reg   [9:0] c_1_reg_1625_pp0_iter9_reg;
reg   [9:0] c_1_reg_1625_pp0_iter10_reg;
reg   [9:0] c_1_reg_1625_pp0_iter11_reg;
reg   [9:0] c_1_reg_1625_pp0_iter12_reg;
reg   [9:0] c_1_reg_1625_pp0_iter13_reg;
reg   [9:0] c_1_reg_1625_pp0_iter14_reg;
reg   [9:0] c_1_reg_1625_pp0_iter15_reg;
reg   [9:0] c_1_reg_1625_pp0_iter16_reg;
reg   [9:0] c_1_reg_1625_pp0_iter17_reg;
reg   [9:0] c_1_reg_1625_pp0_iter18_reg;
reg   [9:0] c_1_reg_1625_pp0_iter19_reg;
reg   [9:0] c_1_reg_1625_pp0_iter20_reg;
reg   [9:0] c_1_reg_1625_pp0_iter21_reg;
reg   [9:0] c_1_reg_1625_pp0_iter22_reg;
reg   [9:0] c_1_reg_1625_pp0_iter23_reg;
reg   [9:0] c_1_reg_1625_pp0_iter24_reg;
reg   [9:0] c_1_reg_1625_pp0_iter25_reg;
reg   [9:0] c_1_reg_1625_pp0_iter26_reg;
reg   [9:0] c_1_reg_1625_pp0_iter27_reg;
reg   [9:0] c_1_reg_1625_pp0_iter28_reg;
reg   [9:0] c_1_reg_1625_pp0_iter29_reg;
reg   [9:0] c_1_reg_1625_pp0_iter30_reg;
reg   [9:0] c_1_reg_1625_pp0_iter31_reg;
reg   [9:0] c_1_reg_1625_pp0_iter32_reg;
reg   [9:0] c_1_reg_1625_pp0_iter33_reg;
reg   [9:0] c_1_reg_1625_pp0_iter34_reg;
reg   [9:0] c_1_reg_1625_pp0_iter35_reg;
reg   [9:0] c_1_reg_1625_pp0_iter36_reg;
reg   [9:0] c_1_reg_1625_pp0_iter37_reg;
reg   [9:0] c_1_reg_1625_pp0_iter38_reg;
wire   [9:0] add_ln67_1_fu_705_p2;
reg   [9:0] add_ln67_1_reg_1635;
reg   [9:0] add_ln67_1_reg_1635_pp0_iter1_reg;
reg   [9:0] add_ln67_1_reg_1635_pp0_iter2_reg;
reg   [9:0] add_ln67_1_reg_1635_pp0_iter3_reg;
reg   [9:0] add_ln67_1_reg_1635_pp0_iter4_reg;
reg   [9:0] add_ln67_1_reg_1635_pp0_iter5_reg;
reg   [9:0] add_ln67_1_reg_1635_pp0_iter6_reg;
reg   [9:0] add_ln67_1_reg_1635_pp0_iter7_reg;
reg   [9:0] add_ln67_1_reg_1635_pp0_iter8_reg;
reg   [9:0] add_ln67_1_reg_1635_pp0_iter9_reg;
reg   [9:0] add_ln67_1_reg_1635_pp0_iter10_reg;
reg   [9:0] add_ln67_1_reg_1635_pp0_iter11_reg;
reg   [9:0] add_ln67_1_reg_1635_pp0_iter12_reg;
reg   [9:0] add_ln67_1_reg_1635_pp0_iter13_reg;
reg   [9:0] add_ln67_1_reg_1635_pp0_iter14_reg;
reg   [9:0] add_ln67_1_reg_1635_pp0_iter15_reg;
reg   [9:0] add_ln67_1_reg_1635_pp0_iter16_reg;
reg   [9:0] add_ln67_1_reg_1635_pp0_iter17_reg;
reg   [9:0] add_ln67_1_reg_1635_pp0_iter18_reg;
reg   [9:0] add_ln67_1_reg_1635_pp0_iter19_reg;
reg   [9:0] add_ln67_1_reg_1635_pp0_iter20_reg;
reg   [9:0] add_ln67_1_reg_1635_pp0_iter21_reg;
reg   [9:0] add_ln67_1_reg_1635_pp0_iter22_reg;
wire   [18:0] zext_ln60_1_fu_711_p1;
reg   [18:0] zext_ln60_1_reg_1640;
reg   [18:0] zext_ln60_1_reg_1640_pp0_iter1_reg;
reg   [18:0] zext_ln60_1_reg_1640_pp0_iter2_reg;
reg   [18:0] zext_ln60_1_reg_1640_pp0_iter3_reg;
reg   [18:0] zext_ln60_1_reg_1640_pp0_iter4_reg;
reg   [18:0] zext_ln60_1_reg_1640_pp0_iter5_reg;
reg   [18:0] zext_ln60_1_reg_1640_pp0_iter6_reg;
reg   [18:0] zext_ln60_1_reg_1640_pp0_iter7_reg;
reg   [18:0] zext_ln60_1_reg_1640_pp0_iter8_reg;
reg   [18:0] zext_ln60_1_reg_1640_pp0_iter9_reg;
reg   [18:0] zext_ln60_1_reg_1640_pp0_iter10_reg;
reg   [18:0] zext_ln60_1_reg_1640_pp0_iter11_reg;
reg   [18:0] zext_ln60_1_reg_1640_pp0_iter12_reg;
reg   [18:0] zext_ln60_1_reg_1640_pp0_iter13_reg;
reg   [18:0] zext_ln60_1_reg_1640_pp0_iter14_reg;
reg   [18:0] zext_ln60_1_reg_1640_pp0_iter15_reg;
reg   [18:0] zext_ln60_1_reg_1640_pp0_iter16_reg;
reg   [18:0] zext_ln60_1_reg_1640_pp0_iter17_reg;
reg   [18:0] zext_ln60_1_reg_1640_pp0_iter18_reg;
reg   [18:0] zext_ln60_1_reg_1640_pp0_iter19_reg;
reg   [18:0] zext_ln60_1_reg_1640_pp0_iter20_reg;
reg   [18:0] zext_ln60_1_reg_1640_pp0_iter21_reg;
reg   [18:0] zext_ln60_1_reg_1640_pp0_iter22_reg;
wire   [18:0] add_ln67_fu_715_p2;
reg   [16:0] tmp_11_reg_1651;
reg   [16:0] tmp_11_reg_1651_pp0_iter1_reg;
reg   [16:0] tmp_11_reg_1651_pp0_iter2_reg;
reg   [16:0] tmp_11_reg_1651_pp0_iter3_reg;
reg   [16:0] tmp_11_reg_1651_pp0_iter4_reg;
reg   [16:0] tmp_11_reg_1651_pp0_iter5_reg;
reg   [16:0] tmp_11_reg_1651_pp0_iter6_reg;
reg   [16:0] tmp_11_reg_1651_pp0_iter7_reg;
reg   [16:0] tmp_11_reg_1651_pp0_iter8_reg;
reg   [16:0] tmp_11_reg_1651_pp0_iter9_reg;
reg   [16:0] tmp_11_reg_1651_pp0_iter10_reg;
reg   [16:0] tmp_11_reg_1651_pp0_iter11_reg;
reg   [16:0] tmp_11_reg_1651_pp0_iter12_reg;
reg   [16:0] tmp_11_reg_1651_pp0_iter13_reg;
reg   [16:0] tmp_11_reg_1651_pp0_iter14_reg;
reg   [16:0] tmp_11_reg_1651_pp0_iter15_reg;
reg   [16:0] tmp_11_reg_1651_pp0_iter16_reg;
reg   [16:0] tmp_11_reg_1651_pp0_iter17_reg;
reg   [16:0] tmp_11_reg_1651_pp0_iter18_reg;
reg   [16:0] tmp_11_reg_1651_pp0_iter19_reg;
reg   [16:0] tmp_11_reg_1651_pp0_iter20_reg;
reg   [16:0] tmp_11_reg_1651_pp0_iter21_reg;
reg   [16:0] tmp_11_reg_1651_pp0_iter22_reg;
wire   [2:0] trunc_ln67_fu_752_p1;
reg   [2:0] trunc_ln67_reg_1656;
reg   [2:0] trunc_ln67_reg_1656_pp0_iter23_reg;
wire   [9:0] add_ln67_3_fu_756_p2;
reg   [9:0] add_ln67_3_reg_1669;
wire   [7:0] tmp_7_fu_1186_p15;
reg   [7:0] tmp_7_reg_1944;
wire   [11:0] add_ln67_11_fu_1403_p2;
reg   [11:0] add_ln67_11_reg_1949;
wire   [9:0] add_ln67_14_fu_1419_p2;
reg   [9:0] add_ln67_14_reg_1954;
wire   [11:0] sum_1_fu_1444_p2;
wire   [0:0] icmp_ln70_fu_1478_p2;
reg   [0:0] icmp_ln70_reg_1969;
reg   [0:0] icmp_ln70_reg_1969_pp0_iter26_reg;
reg   [0:0] icmp_ln70_reg_1969_pp0_iter27_reg;
reg   [0:0] icmp_ln70_reg_1969_pp0_iter28_reg;
reg   [0:0] icmp_ln70_reg_1969_pp0_iter29_reg;
reg   [0:0] icmp_ln70_reg_1969_pp0_iter30_reg;
reg   [0:0] icmp_ln70_reg_1969_pp0_iter31_reg;
reg   [0:0] icmp_ln70_reg_1969_pp0_iter32_reg;
reg   [0:0] icmp_ln70_reg_1969_pp0_iter33_reg;
reg   [0:0] icmp_ln70_reg_1969_pp0_iter34_reg;
reg   [0:0] icmp_ln70_reg_1969_pp0_iter35_reg;
reg   [0:0] icmp_ln70_reg_1969_pp0_iter36_reg;
reg   [0:0] icmp_ln70_reg_1969_pp0_iter37_reg;
reg   [0:0] icmp_ln70_reg_1969_pp0_iter38_reg;
reg   [0:0] icmp_ln70_reg_1969_pp0_iter39_reg;
wire   [5:0] trunc_ln71_fu_1507_p1;
reg   [5:0] trunc_ln71_reg_1974;
reg   [57:0] trunc_ln71_1_reg_1980;
wire   [63:0] shl_ln71_fu_1545_p2;
reg   [63:0] shl_ln71_reg_1985;
wire   [511:0] shl_ln71_1_fu_1562_p2;
reg   [511:0] shl_ln71_1_reg_1990;
wire   [63:0] zext_ln67_fu_761_p1;
wire   [63:0] zext_ln67_2_fu_798_p1;
wire   [63:0] zext_ln67_4_fu_836_p1;
wire   [63:0] zext_ln67_6_fu_870_p1;
wire   [63:0] zext_ln67_7_fu_905_p1;
wire   [63:0] zext_ln67_9_fu_940_p1;
wire   [63:0] zext_ln67_10_fu_974_p1;
wire   [63:0] zext_ln67_12_fu_1009_p1;
wire   [63:0] zext_ln67_13_fu_1044_p1;
wire  signed [63:0] sext_ln71_fu_1568_p1;
reg    ap_block_pp0_stage0_01001;
reg   [9:0] c_fu_140;
wire    ap_loop_init;
reg   [9:0] ap_sig_allocacmp_c_1;
reg    image_gray_ce1_local;
reg   [15:0] image_gray_address1_local;
reg    image_gray_ce0_local;
reg   [15:0] image_gray_address0_local;
reg    image_gray_1_ce1_local;
reg   [15:0] image_gray_1_address1_local;
reg    image_gray_1_ce0_local;
reg   [15:0] image_gray_1_address0_local;
reg    image_gray_2_ce1_local;
reg   [15:0] image_gray_2_address1_local;
reg    image_gray_2_ce0_local;
reg   [15:0] image_gray_2_address0_local;
reg    image_gray_3_ce1_local;
reg   [15:0] image_gray_3_address1_local;
reg    image_gray_3_ce0_local;
reg   [15:0] image_gray_3_address0_local;
reg    image_gray_4_ce1_local;
reg   [15:0] image_gray_4_address1_local;
reg    image_gray_4_ce0_local;
reg   [15:0] image_gray_4_address0_local;
reg    image_gray_5_ce1_local;
reg   [15:0] image_gray_5_address1_local;
reg    image_gray_5_ce0_local;
reg   [15:0] image_gray_5_address0_local;
wire   [18:0] mul_ln67_fu_725_p0;
wire   [20:0] mul_ln67_fu_725_p1;
wire   [38:0] mul_ln67_fu_725_p2;
wire   [3:0] grp_fu_741_p1;
wire   [2:0] grp_fu_741_p2;
wire   [18:0] zext_ln67_1_fu_770_p1;
wire   [18:0] add_ln67_2_fu_773_p2;
wire   [18:0] mul_ln67_1_fu_782_p0;
wire   [20:0] mul_ln67_1_fu_782_p1;
wire   [38:0] mul_ln67_1_fu_782_p2;
wire   [16:0] tmp_12_fu_788_p4;
wire   [18:0] zext_ln67_3_fu_808_p1;
wire   [18:0] add_ln67_4_fu_811_p2;
wire   [18:0] mul_ln67_2_fu_820_p0;
wire   [20:0] mul_ln67_2_fu_820_p1;
wire   [38:0] mul_ln67_2_fu_820_p2;
wire   [16:0] tmp_13_fu_826_p4;
wire   [18:0] add_ln67_5_fu_846_p2;
wire   [18:0] mul_ln67_3_fu_854_p0;
wire   [20:0] mul_ln67_3_fu_854_p1;
wire   [38:0] mul_ln67_3_fu_854_p2;
wire   [16:0] tmp_14_fu_860_p4;
wire   [18:0] add_ln67_6_fu_880_p2;
wire   [18:0] mul_ln67_4_fu_889_p0;
wire   [20:0] mul_ln67_4_fu_889_p1;
wire   [38:0] mul_ln67_4_fu_889_p2;
wire   [16:0] tmp_15_fu_895_p4;
wire   [18:0] add_ln67_7_fu_915_p2;
wire   [18:0] mul_ln67_5_fu_924_p0;
wire   [20:0] mul_ln67_5_fu_924_p1;
wire   [38:0] mul_ln67_5_fu_924_p2;
wire   [16:0] tmp_16_fu_930_p4;
wire   [18:0] add_ln67_8_fu_950_p2;
wire   [18:0] mul_ln67_6_fu_958_p0;
wire   [20:0] mul_ln67_6_fu_958_p1;
wire   [38:0] mul_ln67_6_fu_958_p2;
wire   [16:0] tmp_17_fu_964_p4;
wire   [18:0] add_ln67_9_fu_984_p2;
wire   [18:0] mul_ln67_7_fu_993_p0;
wire   [20:0] mul_ln67_7_fu_993_p1;
wire   [38:0] mul_ln67_7_fu_993_p2;
wire   [16:0] tmp_18_fu_999_p4;
wire   [18:0] add_ln67_10_fu_1019_p2;
wire   [18:0] mul_ln67_8_fu_1028_p0;
wire   [20:0] mul_ln67_8_fu_1028_p1;
wire   [38:0] mul_ln67_8_fu_1028_p2;
wire   [16:0] tmp_19_fu_1034_p4;
wire   [7:0] sum_fu_1054_p13;
wire   [7:0] sum_fu_1054_p15;
wire   [7:0] tmp_4_fu_1089_p13;
wire   [7:0] tmp_5_fu_1120_p13;
wire   [7:0] tmp_5_fu_1120_p15;
wire   [7:0] tmp_6_fu_1155_p13;
wire   [7:0] tmp_7_fu_1186_p13;
wire   [7:0] tmp_8_fu_1217_p13;
wire   [7:0] tmp_9_fu_1248_p13;
wire   [7:0] tmp_9_fu_1248_p15;
wire   [7:0] tmp_1_fu_1283_p13;
wire   [7:0] tmp_2_fu_1314_p13;
wire   [7:0] tmp_2_fu_1314_p15;
wire   [7:0] tmp_4_fu_1089_p15;
wire   [7:0] tmp_6_fu_1155_p15;
wire   [7:0] tmp_8_fu_1217_p15;
wire   [7:0] tmp_1_fu_1283_p15;
wire   [8:0] tmp_6_cast_fu_1353_p1;
wire   [8:0] tmp_4_cast_fu_1349_p1;
wire   [8:0] tmp8_fu_1365_p2;
wire   [8:0] tmp_8_cast_fu_1357_p1;
wire   [8:0] tmp_1_cast_fu_1361_p1;
wire   [8:0] tmp9_fu_1375_p2;
wire   [9:0] tmp9_cast_fu_1381_p1;
wire   [9:0] tmp8_cast_fu_1371_p1;
wire   [9:0] tmp21_fu_1385_p2;
wire   [10:0] tmp3_fu_1391_p3;
wire   [11:0] zext_ln67_15_fu_1399_p1;
wire   [11:0] zext_ln67_5_fu_1151_p1;
wire   [8:0] zext_ln67_11_fu_1279_p1;
wire   [8:0] zext_ln67_14_fu_1345_p1;
wire   [8:0] add_ln67_13_fu_1409_p2;
wire   [9:0] zext_ln67_16_fu_1415_p1;
wire   [9:0] zext_ln33_fu_1085_p1;
wire   [9:0] shl_ln1_fu_1425_p3;
wire   [11:0] shl_ln67_cast_fu_1432_p1;
wire   [11:0] zext_ln67_17_fu_1441_p1;
wire   [11:0] add_ln67_12_fu_1436_p2;
wire   [5:0] select_ln70_fu_1450_p3;
wire   [5:0] grp_fu_1460_p1;
wire   [13:0] zext_ln70_1_fu_1474_p1;
wire   [13:0] p2y_fu_1466_p3;
wire   [10:0] zext_ln60_fu_1484_p1;
wire   [10:0] add_ln71_2_fu_1491_p2;
wire   [63:0] zext_ln71_fu_1497_p1;
wire   [63:0] add_ln71_1_fu_1487_p2;
wire   [63:0] add_ln71_fu_1501_p2;
wire   [7:0] grp_fu_1460_p2;
wire   [0:0] xor_ln70_fu_1521_p2;
wire   [7:0] trunc_ln70_fu_1526_p1;
wire   [7:0] pixel_fu_1530_p3;
wire   [63:0] zext_ln71_2_fu_1542_p1;
wire   [8:0] shl_ln71_2_fu_1551_p3;
wire   [511:0] zext_ln71_1_fu_1538_p1;
wire   [511:0] zext_ln71_3_fu_1558_p1;
reg    grp_fu_741_ce;
reg    grp_fu_1460_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg    ap_loop_exit_ready_pp0_iter34_reg;
reg    ap_loop_exit_ready_pp0_iter35_reg;
reg    ap_loop_exit_ready_pp0_iter36_reg;
reg    ap_loop_exit_ready_pp0_iter37_reg;
reg    ap_loop_exit_ready_pp0_iter38_reg;
reg    ap_loop_exit_ready_pp0_iter39_reg;
reg    ap_loop_exit_ready_pp0_iter40_reg;
reg    ap_loop_exit_ready_pp0_iter41_reg;
reg    ap_loop_exit_ready_pp0_iter42_reg;
reg    ap_loop_exit_ready_pp0_iter43_reg;
reg    ap_loop_exit_ready_pp0_iter44_reg;
reg    ap_loop_exit_ready_pp0_iter45_reg;
reg    ap_loop_exit_ready_pp0_iter46_reg;
reg    ap_loop_exit_ready_pp0_iter47_reg;
reg    ap_loop_exit_ready_pp0_iter48_reg;
reg    ap_loop_exit_ready_pp0_iter49_reg;
reg    ap_loop_exit_ready_pp0_iter50_reg;
reg    ap_loop_exit_ready_pp0_iter51_reg;
reg    ap_loop_exit_ready_pp0_iter52_reg;
reg    ap_loop_exit_ready_pp0_iter53_reg;
reg    ap_loop_exit_ready_pp0_iter54_reg;
reg    ap_loop_exit_ready_pp0_iter55_reg;
reg    ap_loop_exit_ready_pp0_iter56_reg;
reg    ap_loop_exit_ready_pp0_iter57_reg;
reg    ap_loop_exit_ready_pp0_iter58_reg;
reg    ap_loop_exit_ready_pp0_iter59_reg;
reg    ap_loop_exit_ready_pp0_iter60_reg;
reg    ap_loop_exit_ready_pp0_iter61_reg;
reg    ap_loop_exit_ready_pp0_iter62_reg;
reg    ap_loop_exit_ready_pp0_iter63_reg;
reg    ap_loop_exit_ready_pp0_iter64_reg;
reg    ap_loop_exit_ready_pp0_iter65_reg;
reg    ap_loop_exit_ready_pp0_iter66_reg;
reg    ap_loop_exit_ready_pp0_iter67_reg;
reg    ap_loop_exit_ready_pp0_iter68_reg;
reg    ap_loop_exit_ready_pp0_iter69_reg;
reg    ap_loop_exit_ready_pp0_iter70_reg;
reg    ap_loop_exit_ready_pp0_iter71_reg;
reg    ap_loop_exit_ready_pp0_iter72_reg;
reg    ap_loop_exit_ready_pp0_iter73_reg;
reg    ap_loop_exit_ready_pp0_iter74_reg;
reg    ap_loop_exit_ready_pp0_iter75_reg;
reg    ap_loop_exit_ready_pp0_iter76_reg;
reg    ap_loop_exit_ready_pp0_iter77_reg;
reg    ap_loop_exit_ready_pp0_iter78_reg;
reg    ap_loop_exit_ready_pp0_iter79_reg;
reg    ap_loop_exit_ready_pp0_iter80_reg;
reg    ap_loop_exit_ready_pp0_iter81_reg;
reg    ap_loop_exit_ready_pp0_iter82_reg;
reg    ap_loop_exit_ready_pp0_iter83_reg;
reg    ap_loop_exit_ready_pp0_iter84_reg;
reg    ap_loop_exit_ready_pp0_iter85_reg;
reg    ap_loop_exit_ready_pp0_iter86_reg;
reg    ap_loop_exit_ready_pp0_iter87_reg;
reg    ap_loop_exit_ready_pp0_iter88_reg;
reg    ap_loop_exit_ready_pp0_iter89_reg;
reg    ap_loop_exit_ready_pp0_iter90_reg;
reg    ap_loop_exit_ready_pp0_iter91_reg;
reg    ap_loop_exit_ready_pp0_iter92_reg;
reg    ap_loop_exit_ready_pp0_iter93_reg;
reg    ap_loop_exit_ready_pp0_iter94_reg;
reg    ap_loop_exit_ready_pp0_iter95_reg;
reg    ap_loop_exit_ready_pp0_iter96_reg;
reg    ap_loop_exit_ready_pp0_iter97_reg;
reg    ap_loop_exit_ready_pp0_iter98_reg;
reg    ap_loop_exit_ready_pp0_iter99_reg;
reg    ap_loop_exit_ready_pp0_iter100_reg;
reg    ap_loop_exit_ready_pp0_iter101_reg;
reg    ap_loop_exit_ready_pp0_iter102_reg;
reg    ap_loop_exit_ready_pp0_iter103_reg;
reg    ap_loop_exit_ready_pp0_iter104_reg;
reg    ap_loop_exit_ready_pp0_iter105_reg;
reg    ap_loop_exit_ready_pp0_iter106_reg;
reg    ap_loop_exit_ready_pp0_iter107_reg;
reg    ap_loop_exit_ready_pp0_iter108_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire   [11:0] grp_fu_1460_p10;
wire   [38:0] mul_ln67_1_fu_782_p00;
wire   [38:0] mul_ln67_2_fu_820_p00;
wire   [38:0] mul_ln67_3_fu_854_p00;
wire   [38:0] mul_ln67_4_fu_889_p00;
wire   [38:0] mul_ln67_5_fu_924_p00;
wire   [38:0] mul_ln67_6_fu_958_p00;
wire   [38:0] mul_ln67_7_fu_993_p00;
wire   [38:0] mul_ln67_8_fu_1028_p00;
wire   [38:0] mul_ln67_fu_725_p00;
wire   [2:0] sum_fu_1054_p1;
wire   [2:0] sum_fu_1054_p3;
wire   [2:0] sum_fu_1054_p5;
wire   [2:0] sum_fu_1054_p7;
wire  signed [2:0] sum_fu_1054_p9;
wire  signed [2:0] sum_fu_1054_p11;
wire  signed [2:0] tmp_4_fu_1089_p1;
wire   [2:0] tmp_4_fu_1089_p3;
wire   [2:0] tmp_4_fu_1089_p5;
wire   [2:0] tmp_4_fu_1089_p7;
wire   [2:0] tmp_4_fu_1089_p9;
wire  signed [2:0] tmp_4_fu_1089_p11;
wire  signed [2:0] tmp_5_fu_1120_p1;
wire  signed [2:0] tmp_5_fu_1120_p3;
wire   [2:0] tmp_5_fu_1120_p5;
wire   [2:0] tmp_5_fu_1120_p7;
wire   [2:0] tmp_5_fu_1120_p9;
wire   [2:0] tmp_5_fu_1120_p11;
wire   [2:0] tmp_6_fu_1155_p1;
wire   [2:0] tmp_6_fu_1155_p3;
wire  signed [2:0] tmp_6_fu_1155_p5;
wire  signed [2:0] tmp_6_fu_1155_p7;
wire   [2:0] tmp_6_fu_1155_p9;
wire   [2:0] tmp_6_fu_1155_p11;
wire   [2:0] tmp_7_fu_1186_p1;
wire   [2:0] tmp_7_fu_1186_p3;
wire   [2:0] tmp_7_fu_1186_p5;
wire  signed [2:0] tmp_7_fu_1186_p7;
wire  signed [2:0] tmp_7_fu_1186_p9;
wire   [2:0] tmp_7_fu_1186_p11;
wire   [2:0] tmp_8_fu_1217_p1;
wire   [2:0] tmp_8_fu_1217_p3;
wire   [2:0] tmp_8_fu_1217_p5;
wire   [2:0] tmp_8_fu_1217_p7;
wire  signed [2:0] tmp_8_fu_1217_p9;
wire  signed [2:0] tmp_8_fu_1217_p11;
wire  signed [2:0] tmp_9_fu_1248_p1;
wire  signed [2:0] tmp_9_fu_1248_p3;
wire   [2:0] tmp_9_fu_1248_p5;
wire   [2:0] tmp_9_fu_1248_p7;
wire   [2:0] tmp_9_fu_1248_p9;
wire   [2:0] tmp_9_fu_1248_p11;
wire   [2:0] tmp_1_fu_1283_p1;
wire  signed [2:0] tmp_1_fu_1283_p3;
wire  signed [2:0] tmp_1_fu_1283_p5;
wire   [2:0] tmp_1_fu_1283_p7;
wire   [2:0] tmp_1_fu_1283_p9;
wire   [2:0] tmp_1_fu_1283_p11;
wire   [2:0] tmp_2_fu_1314_p1;
wire   [2:0] tmp_2_fu_1314_p3;
wire  signed [2:0] tmp_2_fu_1314_p5;
wire  signed [2:0] tmp_2_fu_1314_p7;
wire   [2:0] tmp_2_fu_1314_p9;
wire   [2:0] tmp_2_fu_1314_p11;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
#0 ap_enable_reg_pp0_iter43 = 1'b0;
#0 ap_enable_reg_pp0_iter44 = 1'b0;
#0 ap_enable_reg_pp0_iter45 = 1'b0;
#0 ap_enable_reg_pp0_iter46 = 1'b0;
#0 ap_enable_reg_pp0_iter47 = 1'b0;
#0 ap_enable_reg_pp0_iter48 = 1'b0;
#0 ap_enable_reg_pp0_iter49 = 1'b0;
#0 ap_enable_reg_pp0_iter50 = 1'b0;
#0 ap_enable_reg_pp0_iter51 = 1'b0;
#0 ap_enable_reg_pp0_iter52 = 1'b0;
#0 ap_enable_reg_pp0_iter53 = 1'b0;
#0 ap_enable_reg_pp0_iter54 = 1'b0;
#0 ap_enable_reg_pp0_iter55 = 1'b0;
#0 ap_enable_reg_pp0_iter56 = 1'b0;
#0 ap_enable_reg_pp0_iter57 = 1'b0;
#0 ap_enable_reg_pp0_iter58 = 1'b0;
#0 ap_enable_reg_pp0_iter59 = 1'b0;
#0 ap_enable_reg_pp0_iter60 = 1'b0;
#0 ap_enable_reg_pp0_iter61 = 1'b0;
#0 ap_enable_reg_pp0_iter62 = 1'b0;
#0 ap_enable_reg_pp0_iter63 = 1'b0;
#0 ap_enable_reg_pp0_iter64 = 1'b0;
#0 ap_enable_reg_pp0_iter65 = 1'b0;
#0 ap_enable_reg_pp0_iter66 = 1'b0;
#0 ap_enable_reg_pp0_iter67 = 1'b0;
#0 ap_enable_reg_pp0_iter68 = 1'b0;
#0 ap_enable_reg_pp0_iter69 = 1'b0;
#0 ap_enable_reg_pp0_iter70 = 1'b0;
#0 ap_enable_reg_pp0_iter71 = 1'b0;
#0 ap_enable_reg_pp0_iter72 = 1'b0;
#0 ap_enable_reg_pp0_iter73 = 1'b0;
#0 ap_enable_reg_pp0_iter74 = 1'b0;
#0 ap_enable_reg_pp0_iter75 = 1'b0;
#0 ap_enable_reg_pp0_iter76 = 1'b0;
#0 ap_enable_reg_pp0_iter77 = 1'b0;
#0 ap_enable_reg_pp0_iter78 = 1'b0;
#0 ap_enable_reg_pp0_iter79 = 1'b0;
#0 ap_enable_reg_pp0_iter80 = 1'b0;
#0 ap_enable_reg_pp0_iter81 = 1'b0;
#0 ap_enable_reg_pp0_iter82 = 1'b0;
#0 ap_enable_reg_pp0_iter83 = 1'b0;
#0 ap_enable_reg_pp0_iter84 = 1'b0;
#0 ap_enable_reg_pp0_iter85 = 1'b0;
#0 ap_enable_reg_pp0_iter86 = 1'b0;
#0 ap_enable_reg_pp0_iter87 = 1'b0;
#0 ap_enable_reg_pp0_iter88 = 1'b0;
#0 ap_enable_reg_pp0_iter89 = 1'b0;
#0 ap_enable_reg_pp0_iter90 = 1'b0;
#0 ap_enable_reg_pp0_iter91 = 1'b0;
#0 ap_enable_reg_pp0_iter92 = 1'b0;
#0 ap_enable_reg_pp0_iter93 = 1'b0;
#0 ap_enable_reg_pp0_iter94 = 1'b0;
#0 ap_enable_reg_pp0_iter95 = 1'b0;
#0 ap_enable_reg_pp0_iter96 = 1'b0;
#0 ap_enable_reg_pp0_iter97 = 1'b0;
#0 ap_enable_reg_pp0_iter98 = 1'b0;
#0 ap_enable_reg_pp0_iter99 = 1'b0;
#0 ap_enable_reg_pp0_iter100 = 1'b0;
#0 ap_enable_reg_pp0_iter101 = 1'b0;
#0 ap_enable_reg_pp0_iter102 = 1'b0;
#0 ap_enable_reg_pp0_iter103 = 1'b0;
#0 ap_enable_reg_pp0_iter104 = 1'b0;
#0 ap_enable_reg_pp0_iter105 = 1'b0;
#0 ap_enable_reg_pp0_iter106 = 1'b0;
#0 ap_enable_reg_pp0_iter107 = 1'b0;
#0 ap_enable_reg_pp0_iter108 = 1'b0;
#0 ap_enable_reg_pp0_iter109 = 1'b0;
#0 c_fu_140 = 10'd0;
#0 ap_done_reg = 1'b0;
end

edgedetect_mul_19ns_21ns_39_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 21 ),
    .dout_WIDTH( 39 ))
mul_19ns_21ns_39_1_1_U35(
    .din0(mul_ln67_fu_725_p0),
    .din1(mul_ln67_fu_725_p1),
    .dout(mul_ln67_fu_725_p2)
);

edgedetect_urem_19ns_4ns_3_23_1 #(
    .ID( 1 ),
    .NUM_STAGE( 23 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 3 ))
urem_19ns_4ns_3_23_1_U36(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(add_ln67_fu_715_p2),
    .din1(grp_fu_741_p1),
    .ce(grp_fu_741_ce),
    .dout(grp_fu_741_p2)
);

edgedetect_mul_19ns_21ns_39_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 21 ),
    .dout_WIDTH( 39 ))
mul_19ns_21ns_39_1_1_U37(
    .din0(mul_ln67_1_fu_782_p0),
    .din1(mul_ln67_1_fu_782_p1),
    .dout(mul_ln67_1_fu_782_p2)
);

edgedetect_mul_19ns_21ns_39_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 21 ),
    .dout_WIDTH( 39 ))
mul_19ns_21ns_39_1_1_U38(
    .din0(mul_ln67_2_fu_820_p0),
    .din1(mul_ln67_2_fu_820_p1),
    .dout(mul_ln67_2_fu_820_p2)
);

edgedetect_mul_19ns_21ns_39_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 21 ),
    .dout_WIDTH( 39 ))
mul_19ns_21ns_39_1_1_U39(
    .din0(mul_ln67_3_fu_854_p0),
    .din1(mul_ln67_3_fu_854_p1),
    .dout(mul_ln67_3_fu_854_p2)
);

edgedetect_mul_19ns_21ns_39_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 21 ),
    .dout_WIDTH( 39 ))
mul_19ns_21ns_39_1_1_U40(
    .din0(mul_ln67_4_fu_889_p0),
    .din1(mul_ln67_4_fu_889_p1),
    .dout(mul_ln67_4_fu_889_p2)
);

edgedetect_mul_19ns_21ns_39_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 21 ),
    .dout_WIDTH( 39 ))
mul_19ns_21ns_39_1_1_U41(
    .din0(mul_ln67_5_fu_924_p0),
    .din1(mul_ln67_5_fu_924_p1),
    .dout(mul_ln67_5_fu_924_p2)
);

edgedetect_mul_19ns_21ns_39_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 21 ),
    .dout_WIDTH( 39 ))
mul_19ns_21ns_39_1_1_U42(
    .din0(mul_ln67_6_fu_958_p0),
    .din1(mul_ln67_6_fu_958_p1),
    .dout(mul_ln67_6_fu_958_p2)
);

edgedetect_mul_19ns_21ns_39_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 21 ),
    .dout_WIDTH( 39 ))
mul_19ns_21ns_39_1_1_U43(
    .din0(mul_ln67_7_fu_993_p0),
    .din1(mul_ln67_7_fu_993_p1),
    .dout(mul_ln67_7_fu_993_p2)
);

edgedetect_mul_19ns_21ns_39_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 21 ),
    .dout_WIDTH( 39 ))
mul_19ns_21ns_39_1_1_U44(
    .din0(mul_ln67_8_fu_1028_p0),
    .din1(mul_ln67_8_fu_1028_p1),
    .dout(mul_ln67_8_fu_1028_p2)
);

(* dissolve_hierarchy = "yes" *) edgedetect_sparsemux_13_3_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h0 ),
    .din0_WIDTH( 8 ),
    .CASE1( 3'h1 ),
    .din1_WIDTH( 8 ),
    .CASE2( 3'h2 ),
    .din2_WIDTH( 8 ),
    .CASE3( 3'h3 ),
    .din3_WIDTH( 8 ),
    .CASE4( 3'h4 ),
    .din4_WIDTH( 8 ),
    .CASE5( 3'h5 ),
    .din5_WIDTH( 8 ),
    .def_WIDTH( 8 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
sparsemux_13_3_8_1_1_U45(
    .din0(image_gray_q1),
    .din1(image_gray_1_q1),
    .din2(image_gray_2_q1),
    .din3(image_gray_3_q1),
    .din4(image_gray_4_q1),
    .din5(image_gray_5_q1),
    .def(sum_fu_1054_p13),
    .sel(trunc_ln67_reg_1656_pp0_iter23_reg),
    .dout(sum_fu_1054_p15)
);

(* dissolve_hierarchy = "yes" *) edgedetect_sparsemux_13_3_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h5 ),
    .din0_WIDTH( 8 ),
    .CASE1( 3'h0 ),
    .din1_WIDTH( 8 ),
    .CASE2( 3'h1 ),
    .din2_WIDTH( 8 ),
    .CASE3( 3'h2 ),
    .din3_WIDTH( 8 ),
    .CASE4( 3'h3 ),
    .din4_WIDTH( 8 ),
    .CASE5( 3'h4 ),
    .din5_WIDTH( 8 ),
    .def_WIDTH( 8 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
sparsemux_13_3_8_1_1_U46(
    .din0(image_gray_q0),
    .din1(image_gray_1_q0),
    .din2(image_gray_2_q0),
    .din3(image_gray_3_q0),
    .din4(image_gray_4_q0),
    .din5(image_gray_5_q0),
    .def(tmp_4_fu_1089_p13),
    .sel(trunc_ln67_reg_1656_pp0_iter23_reg),
    .dout(tmp_4_fu_1089_p15)
);

(* dissolve_hierarchy = "yes" *) edgedetect_sparsemux_13_3_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h4 ),
    .din0_WIDTH( 8 ),
    .CASE1( 3'h5 ),
    .din1_WIDTH( 8 ),
    .CASE2( 3'h0 ),
    .din2_WIDTH( 8 ),
    .CASE3( 3'h1 ),
    .din3_WIDTH( 8 ),
    .CASE4( 3'h2 ),
    .din4_WIDTH( 8 ),
    .CASE5( 3'h3 ),
    .din5_WIDTH( 8 ),
    .def_WIDTH( 8 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
sparsemux_13_3_8_1_1_U47(
    .din0(image_gray_q1),
    .din1(image_gray_1_q1),
    .din2(image_gray_2_q1),
    .din3(image_gray_3_q1),
    .din4(image_gray_4_q1),
    .din5(image_gray_5_q1),
    .def(tmp_5_fu_1120_p13),
    .sel(trunc_ln67_reg_1656_pp0_iter23_reg),
    .dout(tmp_5_fu_1120_p15)
);

(* dissolve_hierarchy = "yes" *) edgedetect_sparsemux_13_3_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h2 ),
    .din0_WIDTH( 8 ),
    .CASE1( 3'h3 ),
    .din1_WIDTH( 8 ),
    .CASE2( 3'h4 ),
    .din2_WIDTH( 8 ),
    .CASE3( 3'h5 ),
    .din3_WIDTH( 8 ),
    .CASE4( 3'h0 ),
    .din4_WIDTH( 8 ),
    .CASE5( 3'h1 ),
    .din5_WIDTH( 8 ),
    .def_WIDTH( 8 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
sparsemux_13_3_8_1_1_U48(
    .din0(image_gray_q1),
    .din1(image_gray_1_q1),
    .din2(image_gray_2_q1),
    .din3(image_gray_3_q1),
    .din4(image_gray_4_q1),
    .din5(image_gray_5_q1),
    .def(tmp_6_fu_1155_p13),
    .sel(trunc_ln67_reg_1656_pp0_iter23_reg),
    .dout(tmp_6_fu_1155_p15)
);

(* dissolve_hierarchy = "yes" *) edgedetect_sparsemux_13_3_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h1 ),
    .din0_WIDTH( 8 ),
    .CASE1( 3'h2 ),
    .din1_WIDTH( 8 ),
    .CASE2( 3'h3 ),
    .din2_WIDTH( 8 ),
    .CASE3( 3'h4 ),
    .din3_WIDTH( 8 ),
    .CASE4( 3'h5 ),
    .din4_WIDTH( 8 ),
    .CASE5( 3'h0 ),
    .din5_WIDTH( 8 ),
    .def_WIDTH( 8 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
sparsemux_13_3_8_1_1_U49(
    .din0(image_gray_q0),
    .din1(image_gray_1_q0),
    .din2(image_gray_2_q0),
    .din3(image_gray_3_q0),
    .din4(image_gray_4_q0),
    .din5(image_gray_5_q0),
    .def(tmp_7_fu_1186_p13),
    .sel(trunc_ln67_reg_1656_pp0_iter23_reg),
    .dout(tmp_7_fu_1186_p15)
);

(* dissolve_hierarchy = "yes" *) edgedetect_sparsemux_13_3_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h0 ),
    .din0_WIDTH( 8 ),
    .CASE1( 3'h1 ),
    .din1_WIDTH( 8 ),
    .CASE2( 3'h2 ),
    .din2_WIDTH( 8 ),
    .CASE3( 3'h3 ),
    .din3_WIDTH( 8 ),
    .CASE4( 3'h4 ),
    .din4_WIDTH( 8 ),
    .CASE5( 3'h5 ),
    .din5_WIDTH( 8 ),
    .def_WIDTH( 8 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
sparsemux_13_3_8_1_1_U50(
    .din0(image_gray_q0),
    .din1(image_gray_1_q0),
    .din2(image_gray_2_q0),
    .din3(image_gray_3_q0),
    .din4(image_gray_4_q0),
    .din5(image_gray_5_q0),
    .def(tmp_8_fu_1217_p13),
    .sel(trunc_ln67_reg_1656_pp0_iter23_reg),
    .dout(tmp_8_fu_1217_p15)
);

(* dissolve_hierarchy = "yes" *) edgedetect_sparsemux_13_3_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h4 ),
    .din0_WIDTH( 8 ),
    .CASE1( 3'h5 ),
    .din1_WIDTH( 8 ),
    .CASE2( 3'h0 ),
    .din2_WIDTH( 8 ),
    .CASE3( 3'h1 ),
    .din3_WIDTH( 8 ),
    .CASE4( 3'h2 ),
    .din4_WIDTH( 8 ),
    .CASE5( 3'h3 ),
    .din5_WIDTH( 8 ),
    .def_WIDTH( 8 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
sparsemux_13_3_8_1_1_U51(
    .din0(image_gray_q0),
    .din1(image_gray_1_q0),
    .din2(image_gray_2_q0),
    .din3(image_gray_3_q0),
    .din4(image_gray_4_q0),
    .din5(image_gray_5_q0),
    .def(tmp_9_fu_1248_p13),
    .sel(trunc_ln67_reg_1656_pp0_iter23_reg),
    .dout(tmp_9_fu_1248_p15)
);

(* dissolve_hierarchy = "yes" *) edgedetect_sparsemux_13_3_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h3 ),
    .din0_WIDTH( 8 ),
    .CASE1( 3'h4 ),
    .din1_WIDTH( 8 ),
    .CASE2( 3'h5 ),
    .din2_WIDTH( 8 ),
    .CASE3( 3'h0 ),
    .din3_WIDTH( 8 ),
    .CASE4( 3'h1 ),
    .din4_WIDTH( 8 ),
    .CASE5( 3'h2 ),
    .din5_WIDTH( 8 ),
    .def_WIDTH( 8 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
sparsemux_13_3_8_1_1_U52(
    .din0(image_gray_q0),
    .din1(image_gray_1_q0),
    .din2(image_gray_2_q0),
    .din3(image_gray_3_q0),
    .din4(image_gray_4_q0),
    .din5(image_gray_5_q0),
    .def(tmp_1_fu_1283_p13),
    .sel(trunc_ln67_reg_1656_pp0_iter23_reg),
    .dout(tmp_1_fu_1283_p15)
);

(* dissolve_hierarchy = "yes" *) edgedetect_sparsemux_13_3_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h2 ),
    .din0_WIDTH( 8 ),
    .CASE1( 3'h3 ),
    .din1_WIDTH( 8 ),
    .CASE2( 3'h4 ),
    .din2_WIDTH( 8 ),
    .CASE3( 3'h5 ),
    .din3_WIDTH( 8 ),
    .CASE4( 3'h0 ),
    .din4_WIDTH( 8 ),
    .CASE5( 3'h1 ),
    .din5_WIDTH( 8 ),
    .def_WIDTH( 8 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
sparsemux_13_3_8_1_1_U53(
    .din0(image_gray_q0),
    .din1(image_gray_1_q0),
    .din2(image_gray_2_q0),
    .din3(image_gray_3_q0),
    .din4(image_gray_4_q0),
    .din5(image_gray_5_q0),
    .def(tmp_2_fu_1314_p13),
    .sel(trunc_ln67_reg_1656_pp0_iter23_reg),
    .dout(tmp_2_fu_1314_p15)
);

edgedetect_udiv_12ns_6ns_8_16_1 #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 8 ))
udiv_12ns_6ns_8_16_1_U54(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sum_1_fu_1444_p2),
    .din1(grp_fu_1460_p1),
    .ce(grp_fu_1460_ce),
    .dout(grp_fu_1460_p2)
);

edgedetect_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter108_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter100 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter100 <= ap_enable_reg_pp0_iter99;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter101 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter101 <= ap_enable_reg_pp0_iter100;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter102 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter102 <= ap_enable_reg_pp0_iter101;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter103 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter103 <= ap_enable_reg_pp0_iter102;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter104 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter104 <= ap_enable_reg_pp0_iter103;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter105 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter105 <= ap_enable_reg_pp0_iter104;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter106 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter106 <= ap_enable_reg_pp0_iter105;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter107 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter107 <= ap_enable_reg_pp0_iter106;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter108 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter108 <= ap_enable_reg_pp0_iter107;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter109 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter109 <= ap_enable_reg_pp0_iter108;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter44 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter44 <= ap_enable_reg_pp0_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter45 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter45 <= ap_enable_reg_pp0_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter46 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter46 <= ap_enable_reg_pp0_iter45;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter47 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter47 <= ap_enable_reg_pp0_iter46;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter48 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter48 <= ap_enable_reg_pp0_iter47;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter49 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter49 <= ap_enable_reg_pp0_iter48;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter50 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter50 <= ap_enable_reg_pp0_iter49;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter51 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter51 <= ap_enable_reg_pp0_iter50;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter52 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter52 <= ap_enable_reg_pp0_iter51;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter53 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter53 <= ap_enable_reg_pp0_iter52;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter54 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter54 <= ap_enable_reg_pp0_iter53;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter55 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter55 <= ap_enable_reg_pp0_iter54;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter56 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter56 <= ap_enable_reg_pp0_iter55;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter57 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter57 <= ap_enable_reg_pp0_iter56;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter58 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter58 <= ap_enable_reg_pp0_iter57;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter59 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter59 <= ap_enable_reg_pp0_iter58;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter60 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter60 <= ap_enable_reg_pp0_iter59;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter61 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter61 <= ap_enable_reg_pp0_iter60;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter62 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter62 <= ap_enable_reg_pp0_iter61;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter63 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter63 <= ap_enable_reg_pp0_iter62;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter64 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter64 <= ap_enable_reg_pp0_iter63;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter65 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter65 <= ap_enable_reg_pp0_iter64;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter66 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter66 <= ap_enable_reg_pp0_iter65;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter67 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter67 <= ap_enable_reg_pp0_iter66;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter68 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter68 <= ap_enable_reg_pp0_iter67;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter69 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter69 <= ap_enable_reg_pp0_iter68;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter70 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter70 <= ap_enable_reg_pp0_iter69;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter71 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter71 <= ap_enable_reg_pp0_iter70;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter72 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter72 <= ap_enable_reg_pp0_iter71;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter73 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter73 <= ap_enable_reg_pp0_iter72;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter74 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter74 <= ap_enable_reg_pp0_iter73;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter75 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter75 <= ap_enable_reg_pp0_iter74;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter76 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter76 <= ap_enable_reg_pp0_iter75;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter77 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter77 <= ap_enable_reg_pp0_iter76;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter78 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter78 <= ap_enable_reg_pp0_iter77;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter79 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter79 <= ap_enable_reg_pp0_iter78;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter80 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter80 <= ap_enable_reg_pp0_iter79;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter81 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter81 <= ap_enable_reg_pp0_iter80;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter82 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter82 <= ap_enable_reg_pp0_iter81;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter83 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter83 <= ap_enable_reg_pp0_iter82;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter84 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter84 <= ap_enable_reg_pp0_iter83;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter85 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter85 <= ap_enable_reg_pp0_iter84;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter86 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter86 <= ap_enable_reg_pp0_iter85;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter87 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter87 <= ap_enable_reg_pp0_iter86;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter88 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter88 <= ap_enable_reg_pp0_iter87;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter89 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter89 <= ap_enable_reg_pp0_iter88;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter90 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter90 <= ap_enable_reg_pp0_iter89;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter91 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter91 <= ap_enable_reg_pp0_iter90;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter92 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter92 <= ap_enable_reg_pp0_iter91;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter93 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter93 <= ap_enable_reg_pp0_iter92;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter94 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter94 <= ap_enable_reg_pp0_iter93;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter95 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter95 <= ap_enable_reg_pp0_iter94;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter96 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter96 <= ap_enable_reg_pp0_iter95;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter97 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter97 <= ap_enable_reg_pp0_iter96;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter98 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter98 <= ap_enable_reg_pp0_iter97;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter99 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter99 <= ap_enable_reg_pp0_iter98;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln60_fu_699_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            c_fu_140 <= add_ln67_1_fu_705_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            c_fu_140 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln67_11_reg_1949 <= add_ln67_11_fu_1403_p2;
        add_ln67_14_reg_1954 <= add_ln67_14_fu_1419_p2;
        add_ln67_1_reg_1635_pp0_iter10_reg <= add_ln67_1_reg_1635_pp0_iter9_reg;
        add_ln67_1_reg_1635_pp0_iter11_reg <= add_ln67_1_reg_1635_pp0_iter10_reg;
        add_ln67_1_reg_1635_pp0_iter12_reg <= add_ln67_1_reg_1635_pp0_iter11_reg;
        add_ln67_1_reg_1635_pp0_iter13_reg <= add_ln67_1_reg_1635_pp0_iter12_reg;
        add_ln67_1_reg_1635_pp0_iter14_reg <= add_ln67_1_reg_1635_pp0_iter13_reg;
        add_ln67_1_reg_1635_pp0_iter15_reg <= add_ln67_1_reg_1635_pp0_iter14_reg;
        add_ln67_1_reg_1635_pp0_iter16_reg <= add_ln67_1_reg_1635_pp0_iter15_reg;
        add_ln67_1_reg_1635_pp0_iter17_reg <= add_ln67_1_reg_1635_pp0_iter16_reg;
        add_ln67_1_reg_1635_pp0_iter18_reg <= add_ln67_1_reg_1635_pp0_iter17_reg;
        add_ln67_1_reg_1635_pp0_iter19_reg <= add_ln67_1_reg_1635_pp0_iter18_reg;
        add_ln67_1_reg_1635_pp0_iter20_reg <= add_ln67_1_reg_1635_pp0_iter19_reg;
        add_ln67_1_reg_1635_pp0_iter21_reg <= add_ln67_1_reg_1635_pp0_iter20_reg;
        add_ln67_1_reg_1635_pp0_iter22_reg <= add_ln67_1_reg_1635_pp0_iter21_reg;
        add_ln67_1_reg_1635_pp0_iter2_reg <= add_ln67_1_reg_1635_pp0_iter1_reg;
        add_ln67_1_reg_1635_pp0_iter3_reg <= add_ln67_1_reg_1635_pp0_iter2_reg;
        add_ln67_1_reg_1635_pp0_iter4_reg <= add_ln67_1_reg_1635_pp0_iter3_reg;
        add_ln67_1_reg_1635_pp0_iter5_reg <= add_ln67_1_reg_1635_pp0_iter4_reg;
        add_ln67_1_reg_1635_pp0_iter6_reg <= add_ln67_1_reg_1635_pp0_iter5_reg;
        add_ln67_1_reg_1635_pp0_iter7_reg <= add_ln67_1_reg_1635_pp0_iter6_reg;
        add_ln67_1_reg_1635_pp0_iter8_reg <= add_ln67_1_reg_1635_pp0_iter7_reg;
        add_ln67_1_reg_1635_pp0_iter9_reg <= add_ln67_1_reg_1635_pp0_iter8_reg;
        add_ln67_3_reg_1669 <= add_ln67_3_fu_756_p2;
        ap_loop_exit_ready_pp0_iter100_reg <= ap_loop_exit_ready_pp0_iter99_reg;
        ap_loop_exit_ready_pp0_iter101_reg <= ap_loop_exit_ready_pp0_iter100_reg;
        ap_loop_exit_ready_pp0_iter102_reg <= ap_loop_exit_ready_pp0_iter101_reg;
        ap_loop_exit_ready_pp0_iter103_reg <= ap_loop_exit_ready_pp0_iter102_reg;
        ap_loop_exit_ready_pp0_iter104_reg <= ap_loop_exit_ready_pp0_iter103_reg;
        ap_loop_exit_ready_pp0_iter105_reg <= ap_loop_exit_ready_pp0_iter104_reg;
        ap_loop_exit_ready_pp0_iter106_reg <= ap_loop_exit_ready_pp0_iter105_reg;
        ap_loop_exit_ready_pp0_iter107_reg <= ap_loop_exit_ready_pp0_iter106_reg;
        ap_loop_exit_ready_pp0_iter108_reg <= ap_loop_exit_ready_pp0_iter107_reg;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
        ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
        ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
        ap_loop_exit_ready_pp0_iter35_reg <= ap_loop_exit_ready_pp0_iter34_reg;
        ap_loop_exit_ready_pp0_iter36_reg <= ap_loop_exit_ready_pp0_iter35_reg;
        ap_loop_exit_ready_pp0_iter37_reg <= ap_loop_exit_ready_pp0_iter36_reg;
        ap_loop_exit_ready_pp0_iter38_reg <= ap_loop_exit_ready_pp0_iter37_reg;
        ap_loop_exit_ready_pp0_iter39_reg <= ap_loop_exit_ready_pp0_iter38_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter40_reg <= ap_loop_exit_ready_pp0_iter39_reg;
        ap_loop_exit_ready_pp0_iter41_reg <= ap_loop_exit_ready_pp0_iter40_reg;
        ap_loop_exit_ready_pp0_iter42_reg <= ap_loop_exit_ready_pp0_iter41_reg;
        ap_loop_exit_ready_pp0_iter43_reg <= ap_loop_exit_ready_pp0_iter42_reg;
        ap_loop_exit_ready_pp0_iter44_reg <= ap_loop_exit_ready_pp0_iter43_reg;
        ap_loop_exit_ready_pp0_iter45_reg <= ap_loop_exit_ready_pp0_iter44_reg;
        ap_loop_exit_ready_pp0_iter46_reg <= ap_loop_exit_ready_pp0_iter45_reg;
        ap_loop_exit_ready_pp0_iter47_reg <= ap_loop_exit_ready_pp0_iter46_reg;
        ap_loop_exit_ready_pp0_iter48_reg <= ap_loop_exit_ready_pp0_iter47_reg;
        ap_loop_exit_ready_pp0_iter49_reg <= ap_loop_exit_ready_pp0_iter48_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter50_reg <= ap_loop_exit_ready_pp0_iter49_reg;
        ap_loop_exit_ready_pp0_iter51_reg <= ap_loop_exit_ready_pp0_iter50_reg;
        ap_loop_exit_ready_pp0_iter52_reg <= ap_loop_exit_ready_pp0_iter51_reg;
        ap_loop_exit_ready_pp0_iter53_reg <= ap_loop_exit_ready_pp0_iter52_reg;
        ap_loop_exit_ready_pp0_iter54_reg <= ap_loop_exit_ready_pp0_iter53_reg;
        ap_loop_exit_ready_pp0_iter55_reg <= ap_loop_exit_ready_pp0_iter54_reg;
        ap_loop_exit_ready_pp0_iter56_reg <= ap_loop_exit_ready_pp0_iter55_reg;
        ap_loop_exit_ready_pp0_iter57_reg <= ap_loop_exit_ready_pp0_iter56_reg;
        ap_loop_exit_ready_pp0_iter58_reg <= ap_loop_exit_ready_pp0_iter57_reg;
        ap_loop_exit_ready_pp0_iter59_reg <= ap_loop_exit_ready_pp0_iter58_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter60_reg <= ap_loop_exit_ready_pp0_iter59_reg;
        ap_loop_exit_ready_pp0_iter61_reg <= ap_loop_exit_ready_pp0_iter60_reg;
        ap_loop_exit_ready_pp0_iter62_reg <= ap_loop_exit_ready_pp0_iter61_reg;
        ap_loop_exit_ready_pp0_iter63_reg <= ap_loop_exit_ready_pp0_iter62_reg;
        ap_loop_exit_ready_pp0_iter64_reg <= ap_loop_exit_ready_pp0_iter63_reg;
        ap_loop_exit_ready_pp0_iter65_reg <= ap_loop_exit_ready_pp0_iter64_reg;
        ap_loop_exit_ready_pp0_iter66_reg <= ap_loop_exit_ready_pp0_iter65_reg;
        ap_loop_exit_ready_pp0_iter67_reg <= ap_loop_exit_ready_pp0_iter66_reg;
        ap_loop_exit_ready_pp0_iter68_reg <= ap_loop_exit_ready_pp0_iter67_reg;
        ap_loop_exit_ready_pp0_iter69_reg <= ap_loop_exit_ready_pp0_iter68_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter70_reg <= ap_loop_exit_ready_pp0_iter69_reg;
        ap_loop_exit_ready_pp0_iter71_reg <= ap_loop_exit_ready_pp0_iter70_reg;
        ap_loop_exit_ready_pp0_iter72_reg <= ap_loop_exit_ready_pp0_iter71_reg;
        ap_loop_exit_ready_pp0_iter73_reg <= ap_loop_exit_ready_pp0_iter72_reg;
        ap_loop_exit_ready_pp0_iter74_reg <= ap_loop_exit_ready_pp0_iter73_reg;
        ap_loop_exit_ready_pp0_iter75_reg <= ap_loop_exit_ready_pp0_iter74_reg;
        ap_loop_exit_ready_pp0_iter76_reg <= ap_loop_exit_ready_pp0_iter75_reg;
        ap_loop_exit_ready_pp0_iter77_reg <= ap_loop_exit_ready_pp0_iter76_reg;
        ap_loop_exit_ready_pp0_iter78_reg <= ap_loop_exit_ready_pp0_iter77_reg;
        ap_loop_exit_ready_pp0_iter79_reg <= ap_loop_exit_ready_pp0_iter78_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter80_reg <= ap_loop_exit_ready_pp0_iter79_reg;
        ap_loop_exit_ready_pp0_iter81_reg <= ap_loop_exit_ready_pp0_iter80_reg;
        ap_loop_exit_ready_pp0_iter82_reg <= ap_loop_exit_ready_pp0_iter81_reg;
        ap_loop_exit_ready_pp0_iter83_reg <= ap_loop_exit_ready_pp0_iter82_reg;
        ap_loop_exit_ready_pp0_iter84_reg <= ap_loop_exit_ready_pp0_iter83_reg;
        ap_loop_exit_ready_pp0_iter85_reg <= ap_loop_exit_ready_pp0_iter84_reg;
        ap_loop_exit_ready_pp0_iter86_reg <= ap_loop_exit_ready_pp0_iter85_reg;
        ap_loop_exit_ready_pp0_iter87_reg <= ap_loop_exit_ready_pp0_iter86_reg;
        ap_loop_exit_ready_pp0_iter88_reg <= ap_loop_exit_ready_pp0_iter87_reg;
        ap_loop_exit_ready_pp0_iter89_reg <= ap_loop_exit_ready_pp0_iter88_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter90_reg <= ap_loop_exit_ready_pp0_iter89_reg;
        ap_loop_exit_ready_pp0_iter91_reg <= ap_loop_exit_ready_pp0_iter90_reg;
        ap_loop_exit_ready_pp0_iter92_reg <= ap_loop_exit_ready_pp0_iter91_reg;
        ap_loop_exit_ready_pp0_iter93_reg <= ap_loop_exit_ready_pp0_iter92_reg;
        ap_loop_exit_ready_pp0_iter94_reg <= ap_loop_exit_ready_pp0_iter93_reg;
        ap_loop_exit_ready_pp0_iter95_reg <= ap_loop_exit_ready_pp0_iter94_reg;
        ap_loop_exit_ready_pp0_iter96_reg <= ap_loop_exit_ready_pp0_iter95_reg;
        ap_loop_exit_ready_pp0_iter97_reg <= ap_loop_exit_ready_pp0_iter96_reg;
        ap_loop_exit_ready_pp0_iter98_reg <= ap_loop_exit_ready_pp0_iter97_reg;
        ap_loop_exit_ready_pp0_iter99_reg <= ap_loop_exit_ready_pp0_iter98_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        c_1_reg_1625_pp0_iter10_reg <= c_1_reg_1625_pp0_iter9_reg;
        c_1_reg_1625_pp0_iter11_reg <= c_1_reg_1625_pp0_iter10_reg;
        c_1_reg_1625_pp0_iter12_reg <= c_1_reg_1625_pp0_iter11_reg;
        c_1_reg_1625_pp0_iter13_reg <= c_1_reg_1625_pp0_iter12_reg;
        c_1_reg_1625_pp0_iter14_reg <= c_1_reg_1625_pp0_iter13_reg;
        c_1_reg_1625_pp0_iter15_reg <= c_1_reg_1625_pp0_iter14_reg;
        c_1_reg_1625_pp0_iter16_reg <= c_1_reg_1625_pp0_iter15_reg;
        c_1_reg_1625_pp0_iter17_reg <= c_1_reg_1625_pp0_iter16_reg;
        c_1_reg_1625_pp0_iter18_reg <= c_1_reg_1625_pp0_iter17_reg;
        c_1_reg_1625_pp0_iter19_reg <= c_1_reg_1625_pp0_iter18_reg;
        c_1_reg_1625_pp0_iter20_reg <= c_1_reg_1625_pp0_iter19_reg;
        c_1_reg_1625_pp0_iter21_reg <= c_1_reg_1625_pp0_iter20_reg;
        c_1_reg_1625_pp0_iter22_reg <= c_1_reg_1625_pp0_iter21_reg;
        c_1_reg_1625_pp0_iter23_reg <= c_1_reg_1625_pp0_iter22_reg;
        c_1_reg_1625_pp0_iter24_reg <= c_1_reg_1625_pp0_iter23_reg;
        c_1_reg_1625_pp0_iter25_reg <= c_1_reg_1625_pp0_iter24_reg;
        c_1_reg_1625_pp0_iter26_reg <= c_1_reg_1625_pp0_iter25_reg;
        c_1_reg_1625_pp0_iter27_reg <= c_1_reg_1625_pp0_iter26_reg;
        c_1_reg_1625_pp0_iter28_reg <= c_1_reg_1625_pp0_iter27_reg;
        c_1_reg_1625_pp0_iter29_reg <= c_1_reg_1625_pp0_iter28_reg;
        c_1_reg_1625_pp0_iter2_reg <= c_1_reg_1625_pp0_iter1_reg;
        c_1_reg_1625_pp0_iter30_reg <= c_1_reg_1625_pp0_iter29_reg;
        c_1_reg_1625_pp0_iter31_reg <= c_1_reg_1625_pp0_iter30_reg;
        c_1_reg_1625_pp0_iter32_reg <= c_1_reg_1625_pp0_iter31_reg;
        c_1_reg_1625_pp0_iter33_reg <= c_1_reg_1625_pp0_iter32_reg;
        c_1_reg_1625_pp0_iter34_reg <= c_1_reg_1625_pp0_iter33_reg;
        c_1_reg_1625_pp0_iter35_reg <= c_1_reg_1625_pp0_iter34_reg;
        c_1_reg_1625_pp0_iter36_reg <= c_1_reg_1625_pp0_iter35_reg;
        c_1_reg_1625_pp0_iter37_reg <= c_1_reg_1625_pp0_iter36_reg;
        c_1_reg_1625_pp0_iter38_reg <= c_1_reg_1625_pp0_iter37_reg;
        c_1_reg_1625_pp0_iter3_reg <= c_1_reg_1625_pp0_iter2_reg;
        c_1_reg_1625_pp0_iter4_reg <= c_1_reg_1625_pp0_iter3_reg;
        c_1_reg_1625_pp0_iter5_reg <= c_1_reg_1625_pp0_iter4_reg;
        c_1_reg_1625_pp0_iter6_reg <= c_1_reg_1625_pp0_iter5_reg;
        c_1_reg_1625_pp0_iter7_reg <= c_1_reg_1625_pp0_iter6_reg;
        c_1_reg_1625_pp0_iter8_reg <= c_1_reg_1625_pp0_iter7_reg;
        c_1_reg_1625_pp0_iter9_reg <= c_1_reg_1625_pp0_iter8_reg;
        icmp_ln70_reg_1969 <= icmp_ln70_fu_1478_p2;
        icmp_ln70_reg_1969_pp0_iter26_reg <= icmp_ln70_reg_1969;
        icmp_ln70_reg_1969_pp0_iter27_reg <= icmp_ln70_reg_1969_pp0_iter26_reg;
        icmp_ln70_reg_1969_pp0_iter28_reg <= icmp_ln70_reg_1969_pp0_iter27_reg;
        icmp_ln70_reg_1969_pp0_iter29_reg <= icmp_ln70_reg_1969_pp0_iter28_reg;
        icmp_ln70_reg_1969_pp0_iter30_reg <= icmp_ln70_reg_1969_pp0_iter29_reg;
        icmp_ln70_reg_1969_pp0_iter31_reg <= icmp_ln70_reg_1969_pp0_iter30_reg;
        icmp_ln70_reg_1969_pp0_iter32_reg <= icmp_ln70_reg_1969_pp0_iter31_reg;
        icmp_ln70_reg_1969_pp0_iter33_reg <= icmp_ln70_reg_1969_pp0_iter32_reg;
        icmp_ln70_reg_1969_pp0_iter34_reg <= icmp_ln70_reg_1969_pp0_iter33_reg;
        icmp_ln70_reg_1969_pp0_iter35_reg <= icmp_ln70_reg_1969_pp0_iter34_reg;
        icmp_ln70_reg_1969_pp0_iter36_reg <= icmp_ln70_reg_1969_pp0_iter35_reg;
        icmp_ln70_reg_1969_pp0_iter37_reg <= icmp_ln70_reg_1969_pp0_iter36_reg;
        icmp_ln70_reg_1969_pp0_iter38_reg <= icmp_ln70_reg_1969_pp0_iter37_reg;
        icmp_ln70_reg_1969_pp0_iter39_reg <= icmp_ln70_reg_1969_pp0_iter38_reg;
        shl_ln71_1_reg_1990 <= shl_ln71_1_fu_1562_p2;
        shl_ln71_reg_1985 <= shl_ln71_fu_1545_p2;
        tmp_11_reg_1651_pp0_iter10_reg <= tmp_11_reg_1651_pp0_iter9_reg;
        tmp_11_reg_1651_pp0_iter11_reg <= tmp_11_reg_1651_pp0_iter10_reg;
        tmp_11_reg_1651_pp0_iter12_reg <= tmp_11_reg_1651_pp0_iter11_reg;
        tmp_11_reg_1651_pp0_iter13_reg <= tmp_11_reg_1651_pp0_iter12_reg;
        tmp_11_reg_1651_pp0_iter14_reg <= tmp_11_reg_1651_pp0_iter13_reg;
        tmp_11_reg_1651_pp0_iter15_reg <= tmp_11_reg_1651_pp0_iter14_reg;
        tmp_11_reg_1651_pp0_iter16_reg <= tmp_11_reg_1651_pp0_iter15_reg;
        tmp_11_reg_1651_pp0_iter17_reg <= tmp_11_reg_1651_pp0_iter16_reg;
        tmp_11_reg_1651_pp0_iter18_reg <= tmp_11_reg_1651_pp0_iter17_reg;
        tmp_11_reg_1651_pp0_iter19_reg <= tmp_11_reg_1651_pp0_iter18_reg;
        tmp_11_reg_1651_pp0_iter20_reg <= tmp_11_reg_1651_pp0_iter19_reg;
        tmp_11_reg_1651_pp0_iter21_reg <= tmp_11_reg_1651_pp0_iter20_reg;
        tmp_11_reg_1651_pp0_iter22_reg <= tmp_11_reg_1651_pp0_iter21_reg;
        tmp_11_reg_1651_pp0_iter2_reg <= tmp_11_reg_1651_pp0_iter1_reg;
        tmp_11_reg_1651_pp0_iter3_reg <= tmp_11_reg_1651_pp0_iter2_reg;
        tmp_11_reg_1651_pp0_iter4_reg <= tmp_11_reg_1651_pp0_iter3_reg;
        tmp_11_reg_1651_pp0_iter5_reg <= tmp_11_reg_1651_pp0_iter4_reg;
        tmp_11_reg_1651_pp0_iter6_reg <= tmp_11_reg_1651_pp0_iter5_reg;
        tmp_11_reg_1651_pp0_iter7_reg <= tmp_11_reg_1651_pp0_iter6_reg;
        tmp_11_reg_1651_pp0_iter8_reg <= tmp_11_reg_1651_pp0_iter7_reg;
        tmp_11_reg_1651_pp0_iter9_reg <= tmp_11_reg_1651_pp0_iter8_reg;
        tmp_7_reg_1944 <= tmp_7_fu_1186_p15;
        trunc_ln67_reg_1656 <= trunc_ln67_fu_752_p1;
        trunc_ln67_reg_1656_pp0_iter23_reg <= trunc_ln67_reg_1656;
        trunc_ln71_1_reg_1980 <= {{add_ln71_fu_1501_p2[63:6]}};
        trunc_ln71_reg_1974 <= trunc_ln71_fu_1507_p1;
        zext_ln60_1_reg_1640_pp0_iter10_reg[9 : 0] <= zext_ln60_1_reg_1640_pp0_iter9_reg[9 : 0];
        zext_ln60_1_reg_1640_pp0_iter11_reg[9 : 0] <= zext_ln60_1_reg_1640_pp0_iter10_reg[9 : 0];
        zext_ln60_1_reg_1640_pp0_iter12_reg[9 : 0] <= zext_ln60_1_reg_1640_pp0_iter11_reg[9 : 0];
        zext_ln60_1_reg_1640_pp0_iter13_reg[9 : 0] <= zext_ln60_1_reg_1640_pp0_iter12_reg[9 : 0];
        zext_ln60_1_reg_1640_pp0_iter14_reg[9 : 0] <= zext_ln60_1_reg_1640_pp0_iter13_reg[9 : 0];
        zext_ln60_1_reg_1640_pp0_iter15_reg[9 : 0] <= zext_ln60_1_reg_1640_pp0_iter14_reg[9 : 0];
        zext_ln60_1_reg_1640_pp0_iter16_reg[9 : 0] <= zext_ln60_1_reg_1640_pp0_iter15_reg[9 : 0];
        zext_ln60_1_reg_1640_pp0_iter17_reg[9 : 0] <= zext_ln60_1_reg_1640_pp0_iter16_reg[9 : 0];
        zext_ln60_1_reg_1640_pp0_iter18_reg[9 : 0] <= zext_ln60_1_reg_1640_pp0_iter17_reg[9 : 0];
        zext_ln60_1_reg_1640_pp0_iter19_reg[9 : 0] <= zext_ln60_1_reg_1640_pp0_iter18_reg[9 : 0];
        zext_ln60_1_reg_1640_pp0_iter20_reg[9 : 0] <= zext_ln60_1_reg_1640_pp0_iter19_reg[9 : 0];
        zext_ln60_1_reg_1640_pp0_iter21_reg[9 : 0] <= zext_ln60_1_reg_1640_pp0_iter20_reg[9 : 0];
        zext_ln60_1_reg_1640_pp0_iter22_reg[9 : 0] <= zext_ln60_1_reg_1640_pp0_iter21_reg[9 : 0];
        zext_ln60_1_reg_1640_pp0_iter2_reg[9 : 0] <= zext_ln60_1_reg_1640_pp0_iter1_reg[9 : 0];
        zext_ln60_1_reg_1640_pp0_iter3_reg[9 : 0] <= zext_ln60_1_reg_1640_pp0_iter2_reg[9 : 0];
        zext_ln60_1_reg_1640_pp0_iter4_reg[9 : 0] <= zext_ln60_1_reg_1640_pp0_iter3_reg[9 : 0];
        zext_ln60_1_reg_1640_pp0_iter5_reg[9 : 0] <= zext_ln60_1_reg_1640_pp0_iter4_reg[9 : 0];
        zext_ln60_1_reg_1640_pp0_iter6_reg[9 : 0] <= zext_ln60_1_reg_1640_pp0_iter5_reg[9 : 0];
        zext_ln60_1_reg_1640_pp0_iter7_reg[9 : 0] <= zext_ln60_1_reg_1640_pp0_iter6_reg[9 : 0];
        zext_ln60_1_reg_1640_pp0_iter8_reg[9 : 0] <= zext_ln60_1_reg_1640_pp0_iter7_reg[9 : 0];
        zext_ln60_1_reg_1640_pp0_iter9_reg[9 : 0] <= zext_ln60_1_reg_1640_pp0_iter8_reg[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln67_1_reg_1635 <= add_ln67_1_fu_705_p2;
        add_ln67_1_reg_1635_pp0_iter1_reg <= add_ln67_1_reg_1635;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        c_1_reg_1625 <= ap_sig_allocacmp_c_1;
        c_1_reg_1625_pp0_iter1_reg <= c_1_reg_1625;
        p_cast42_cast_reg_1620[18 : 0] <= p_cast42_cast_fu_687_p1[18 : 0];
        tmp_11_reg_1651 <= {{mul_ln67_fu_725_p2[38:22]}};
        tmp_11_reg_1651_pp0_iter1_reg <= tmp_11_reg_1651;
        zext_ln60_1_reg_1640[9 : 0] <= zext_ln60_1_fu_711_p1[9 : 0];
        zext_ln60_1_reg_1640_pp0_iter1_reg[9 : 0] <= zext_ln60_1_reg_1640[9 : 0];
    end
end

always @ (*) begin
    if (((icmp_ln60_fu_699_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter108_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter109 == 1'b0) & (ap_enable_reg_pp0_iter108 == 1'b0) & (ap_enable_reg_pp0_iter107 == 1'b0) & (ap_enable_reg_pp0_iter106 == 1'b0) & (ap_enable_reg_pp0_iter105 == 1'b0) & (ap_enable_reg_pp0_iter104 
    == 1'b0) & (ap_enable_reg_pp0_iter103 == 1'b0) & (ap_enable_reg_pp0_iter102 == 1'b0) & (ap_enable_reg_pp0_iter101 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter100 == 1'b0) & (ap_enable_reg_pp0_iter99 == 1'b0) & (ap_enable_reg_pp0_iter98 == 1'b0) & (ap_enable_reg_pp0_iter97 == 1'b0) & (ap_enable_reg_pp0_iter96 == 1'b0) & (ap_enable_reg_pp0_iter95 == 1'b0) & (ap_enable_reg_pp0_iter94 == 1'b0) & (ap_enable_reg_pp0_iter93 == 1'b0) & (ap_enable_reg_pp0_iter92 == 1'b0) & (ap_enable_reg_pp0_iter91 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter90 == 1'b0) & (ap_enable_reg_pp0_iter89 == 1'b0) & (ap_enable_reg_pp0_iter88 == 1'b0) & (ap_enable_reg_pp0_iter87 == 1'b0) & (ap_enable_reg_pp0_iter86 == 1'b0) & (ap_enable_reg_pp0_iter85 == 1'b0) & (ap_enable_reg_pp0_iter84 == 1'b0) & (ap_enable_reg_pp0_iter83 == 1'b0) & (ap_enable_reg_pp0_iter82 == 1'b0) & (ap_enable_reg_pp0_iter81 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter80 == 1'b0) & (ap_enable_reg_pp0_iter79 
    == 1'b0) & (ap_enable_reg_pp0_iter78 == 1'b0) & (ap_enable_reg_pp0_iter77 == 1'b0) & (ap_enable_reg_pp0_iter76 == 1'b0) & (ap_enable_reg_pp0_iter75 == 1'b0) & (ap_enable_reg_pp0_iter74 == 1'b0) & (ap_enable_reg_pp0_iter73 == 1'b0) & (ap_enable_reg_pp0_iter72 == 1'b0) & (ap_enable_reg_pp0_iter71 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter70 == 1'b0) & (ap_enable_reg_pp0_iter69 == 1'b0) & (ap_enable_reg_pp0_iter68 == 1'b0) & (ap_enable_reg_pp0_iter67 == 1'b0) & (ap_enable_reg_pp0_iter66 == 1'b0) & (ap_enable_reg_pp0_iter65 == 1'b0) & (ap_enable_reg_pp0_iter64 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter63 == 1'b0) & (ap_enable_reg_pp0_iter62 == 1'b0) & (ap_enable_reg_pp0_iter61 == 1'b0) & (ap_enable_reg_pp0_iter60 == 1'b0) & (ap_enable_reg_pp0_iter59 == 1'b0) & (ap_enable_reg_pp0_iter58 == 1'b0) & (ap_enable_reg_pp0_iter57 == 1'b0) & (ap_enable_reg_pp0_iter56 == 1'b0) & (ap_enable_reg_pp0_iter55 == 1'b0) & (ap_enable_reg_pp0_iter54 == 1'b0) & (ap_enable_reg_pp0_iter53 
    == 1'b0) & (ap_enable_reg_pp0_iter52 == 1'b0) & (ap_enable_reg_pp0_iter51 == 1'b0) & (ap_enable_reg_pp0_iter50 == 1'b0) & (ap_enable_reg_pp0_iter49 == 1'b0) & (ap_enable_reg_pp0_iter48 == 1'b0) & (ap_enable_reg_pp0_iter47 == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b0) & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_c_1 = 10'd0;
    end else begin
        ap_sig_allocacmp_c_1 = c_fu_140;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter109 == 1'b1))) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter41 == 1'b1))) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1460_ce = 1'b1;
    end else begin
        grp_fu_1460_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_741_ce = 1'b1;
    end else begin
        grp_fu_741_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        if ((trunc_ln67_reg_1656 == 3'd3)) begin
            image_gray_1_address0_local = zext_ln67_13_fu_1044_p1;
        end else if ((trunc_ln67_reg_1656 == 3'd4)) begin
            image_gray_1_address0_local = zext_ln67_12_fu_1009_p1;
        end else if ((trunc_ln67_reg_1656 == 3'd5)) begin
            image_gray_1_address0_local = zext_ln67_10_fu_974_p1;
        end else if ((trunc_ln67_reg_1656 == 3'd1)) begin
            image_gray_1_address0_local = zext_ln67_9_fu_940_p1;
        end else if ((trunc_ln67_reg_1656 == 3'd2)) begin
            image_gray_1_address0_local = zext_ln67_7_fu_905_p1;
        end else if ((trunc_ln67_reg_1656 == 3'd0)) begin
            image_gray_1_address0_local = zext_ln67_2_fu_798_p1;
        end else begin
            image_gray_1_address0_local = 'bx;
        end
    end else begin
        image_gray_1_address0_local = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        if ((trunc_ln67_reg_1656 == 3'd3)) begin
            image_gray_1_address1_local = zext_ln67_6_fu_870_p1;
        end else if ((trunc_ln67_reg_1656 == 3'd5)) begin
            image_gray_1_address1_local = zext_ln67_4_fu_836_p1;
        end else if ((trunc_ln67_reg_1656 == 3'd1)) begin
            image_gray_1_address1_local = zext_ln67_fu_761_p1;
        end else begin
            image_gray_1_address1_local = 'bx;
        end
    end else begin
        image_gray_1_address1_local = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd5)) | ((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd4)) | ((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd3)) | ((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd2)) | ((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd1)) | ((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd0)))) begin
        image_gray_1_ce0_local = 1'b1;
    end else begin
        image_gray_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd5)) | ((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd3)) | ((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd1)))) begin
        image_gray_1_ce1_local = 1'b1;
    end else begin
        image_gray_1_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        if ((trunc_ln67_reg_1656 == 3'd4)) begin
            image_gray_2_address0_local = zext_ln67_13_fu_1044_p1;
        end else if ((trunc_ln67_reg_1656 == 3'd5)) begin
            image_gray_2_address0_local = zext_ln67_12_fu_1009_p1;
        end else if ((trunc_ln67_reg_1656 == 3'd0)) begin
            image_gray_2_address0_local = zext_ln67_10_fu_974_p1;
        end else if ((trunc_ln67_reg_1656 == 3'd2)) begin
            image_gray_2_address0_local = zext_ln67_9_fu_940_p1;
        end else if ((trunc_ln67_reg_1656 == 3'd3)) begin
            image_gray_2_address0_local = zext_ln67_7_fu_905_p1;
        end else if ((trunc_ln67_reg_1656 == 3'd1)) begin
            image_gray_2_address0_local = zext_ln67_2_fu_798_p1;
        end else begin
            image_gray_2_address0_local = 'bx;
        end
    end else begin
        image_gray_2_address0_local = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        if ((trunc_ln67_reg_1656 == 3'd4)) begin
            image_gray_2_address1_local = zext_ln67_6_fu_870_p1;
        end else if ((trunc_ln67_reg_1656 == 3'd0)) begin
            image_gray_2_address1_local = zext_ln67_4_fu_836_p1;
        end else if ((trunc_ln67_reg_1656 == 3'd2)) begin
            image_gray_2_address1_local = zext_ln67_fu_761_p1;
        end else begin
            image_gray_2_address1_local = 'bx;
        end
    end else begin
        image_gray_2_address1_local = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd5)) | ((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd4)) | ((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd3)) | ((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd2)) | ((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd1)) | ((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd0)))) begin
        image_gray_2_ce0_local = 1'b1;
    end else begin
        image_gray_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd4)) | ((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd2)) | ((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd0)))) begin
        image_gray_2_ce1_local = 1'b1;
    end else begin
        image_gray_2_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        if ((trunc_ln67_reg_1656 == 3'd5)) begin
            image_gray_3_address0_local = zext_ln67_13_fu_1044_p1;
        end else if ((trunc_ln67_reg_1656 == 3'd0)) begin
            image_gray_3_address0_local = zext_ln67_12_fu_1009_p1;
        end else if ((trunc_ln67_reg_1656 == 3'd1)) begin
            image_gray_3_address0_local = zext_ln67_10_fu_974_p1;
        end else if ((trunc_ln67_reg_1656 == 3'd3)) begin
            image_gray_3_address0_local = zext_ln67_9_fu_940_p1;
        end else if ((trunc_ln67_reg_1656 == 3'd4)) begin
            image_gray_3_address0_local = zext_ln67_7_fu_905_p1;
        end else if ((trunc_ln67_reg_1656 == 3'd2)) begin
            image_gray_3_address0_local = zext_ln67_2_fu_798_p1;
        end else begin
            image_gray_3_address0_local = 'bx;
        end
    end else begin
        image_gray_3_address0_local = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        if ((trunc_ln67_reg_1656 == 3'd5)) begin
            image_gray_3_address1_local = zext_ln67_6_fu_870_p1;
        end else if ((trunc_ln67_reg_1656 == 3'd1)) begin
            image_gray_3_address1_local = zext_ln67_4_fu_836_p1;
        end else if ((trunc_ln67_reg_1656 == 3'd3)) begin
            image_gray_3_address1_local = zext_ln67_fu_761_p1;
        end else begin
            image_gray_3_address1_local = 'bx;
        end
    end else begin
        image_gray_3_address1_local = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd5)) | ((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd4)) | ((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd3)) | ((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd2)) | ((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd1)) | ((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd0)))) begin
        image_gray_3_ce0_local = 1'b1;
    end else begin
        image_gray_3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd5)) | ((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd3)) | ((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd1)))) begin
        image_gray_3_ce1_local = 1'b1;
    end else begin
        image_gray_3_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        if ((trunc_ln67_reg_1656 == 3'd0)) begin
            image_gray_4_address0_local = zext_ln67_13_fu_1044_p1;
        end else if ((trunc_ln67_reg_1656 == 3'd1)) begin
            image_gray_4_address0_local = zext_ln67_12_fu_1009_p1;
        end else if ((trunc_ln67_reg_1656 == 3'd2)) begin
            image_gray_4_address0_local = zext_ln67_10_fu_974_p1;
        end else if ((trunc_ln67_reg_1656 == 3'd4)) begin
            image_gray_4_address0_local = zext_ln67_9_fu_940_p1;
        end else if ((trunc_ln67_reg_1656 == 3'd5)) begin
            image_gray_4_address0_local = zext_ln67_7_fu_905_p1;
        end else if ((trunc_ln67_reg_1656 == 3'd3)) begin
            image_gray_4_address0_local = zext_ln67_2_fu_798_p1;
        end else begin
            image_gray_4_address0_local = 'bx;
        end
    end else begin
        image_gray_4_address0_local = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        if ((trunc_ln67_reg_1656 == 3'd0)) begin
            image_gray_4_address1_local = zext_ln67_6_fu_870_p1;
        end else if ((trunc_ln67_reg_1656 == 3'd2)) begin
            image_gray_4_address1_local = zext_ln67_4_fu_836_p1;
        end else if ((trunc_ln67_reg_1656 == 3'd4)) begin
            image_gray_4_address1_local = zext_ln67_fu_761_p1;
        end else begin
            image_gray_4_address1_local = 'bx;
        end
    end else begin
        image_gray_4_address1_local = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd5)) | ((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd4)) | ((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd3)) | ((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd2)) | ((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd1)) | ((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd0)))) begin
        image_gray_4_ce0_local = 1'b1;
    end else begin
        image_gray_4_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd4)) | ((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd2)) | ((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd0)))) begin
        image_gray_4_ce1_local = 1'b1;
    end else begin
        image_gray_4_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        if ((trunc_ln67_reg_1656 == 3'd1)) begin
            image_gray_5_address0_local = zext_ln67_13_fu_1044_p1;
        end else if ((trunc_ln67_reg_1656 == 3'd2)) begin
            image_gray_5_address0_local = zext_ln67_12_fu_1009_p1;
        end else if ((trunc_ln67_reg_1656 == 3'd3)) begin
            image_gray_5_address0_local = zext_ln67_10_fu_974_p1;
        end else if ((trunc_ln67_reg_1656 == 3'd5)) begin
            image_gray_5_address0_local = zext_ln67_9_fu_940_p1;
        end else if ((trunc_ln67_reg_1656 == 3'd0)) begin
            image_gray_5_address0_local = zext_ln67_7_fu_905_p1;
        end else if ((trunc_ln67_reg_1656 == 3'd4)) begin
            image_gray_5_address0_local = zext_ln67_2_fu_798_p1;
        end else begin
            image_gray_5_address0_local = 'bx;
        end
    end else begin
        image_gray_5_address0_local = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        if ((trunc_ln67_reg_1656 == 3'd1)) begin
            image_gray_5_address1_local = zext_ln67_6_fu_870_p1;
        end else if ((trunc_ln67_reg_1656 == 3'd3)) begin
            image_gray_5_address1_local = zext_ln67_4_fu_836_p1;
        end else if ((trunc_ln67_reg_1656 == 3'd5)) begin
            image_gray_5_address1_local = zext_ln67_fu_761_p1;
        end else begin
            image_gray_5_address1_local = 'bx;
        end
    end else begin
        image_gray_5_address1_local = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd5)) | ((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd4)) | ((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd3)) | ((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd2)) | ((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd1)) | ((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd0)))) begin
        image_gray_5_ce0_local = 1'b1;
    end else begin
        image_gray_5_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd5)) | ((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd3)) | ((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd1)))) begin
        image_gray_5_ce1_local = 1'b1;
    end else begin
        image_gray_5_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        if ((trunc_ln67_reg_1656 == 3'd2)) begin
            image_gray_address0_local = zext_ln67_13_fu_1044_p1;
        end else if ((trunc_ln67_reg_1656 == 3'd3)) begin
            image_gray_address0_local = zext_ln67_12_fu_1009_p1;
        end else if ((trunc_ln67_reg_1656 == 3'd4)) begin
            image_gray_address0_local = zext_ln67_10_fu_974_p1;
        end else if ((trunc_ln67_reg_1656 == 3'd0)) begin
            image_gray_address0_local = zext_ln67_9_fu_940_p1;
        end else if ((trunc_ln67_reg_1656 == 3'd1)) begin
            image_gray_address0_local = zext_ln67_7_fu_905_p1;
        end else if ((trunc_ln67_reg_1656 == 3'd5)) begin
            image_gray_address0_local = zext_ln67_2_fu_798_p1;
        end else begin
            image_gray_address0_local = 'bx;
        end
    end else begin
        image_gray_address0_local = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        if ((trunc_ln67_reg_1656 == 3'd2)) begin
            image_gray_address1_local = zext_ln67_6_fu_870_p1;
        end else if ((trunc_ln67_reg_1656 == 3'd4)) begin
            image_gray_address1_local = zext_ln67_4_fu_836_p1;
        end else if ((trunc_ln67_reg_1656 == 3'd0)) begin
            image_gray_address1_local = zext_ln67_fu_761_p1;
        end else begin
            image_gray_address1_local = 'bx;
        end
    end else begin
        image_gray_address1_local = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd5)) | ((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd4)) | ((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd3)) | ((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd2)) | ((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd1)) | ((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd0)))) begin
        image_gray_ce0_local = 1'b1;
    end else begin
        image_gray_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd4)) | ((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd2)) | ((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln67_reg_1656 == 3'd0)))) begin
        image_gray_ce1_local = 1'b1;
    end else begin
        image_gray_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter40 == 1'b1))) begin
        m_axi_gmem_AWVALID = 1'b1;
    end else begin
        m_axi_gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter109 == 1'b1))) begin
        m_axi_gmem_BREADY = 1'b1;
    end else begin
        m_axi_gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter41 == 1'b1))) begin
        m_axi_gmem_WVALID = 1'b1;
    end else begin
        m_axi_gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln67_10_fu_1019_p2 = (zext_ln67_3_fu_808_p1 + empty);

assign add_ln67_11_fu_1403_p2 = (zext_ln67_15_fu_1399_p1 + zext_ln67_5_fu_1151_p1);

assign add_ln67_12_fu_1436_p2 = (add_ln67_11_reg_1949 + shl_ln67_cast_fu_1432_p1);

assign add_ln67_13_fu_1409_p2 = (zext_ln67_11_fu_1279_p1 + zext_ln67_14_fu_1345_p1);

assign add_ln67_14_fu_1419_p2 = (zext_ln67_16_fu_1415_p1 + zext_ln33_fu_1085_p1);

assign add_ln67_1_fu_705_p2 = (ap_sig_allocacmp_c_1 + 10'd1);

assign add_ln67_2_fu_773_p2 = (zext_ln67_1_fu_770_p1 + empty_28);

assign add_ln67_3_fu_756_p2 = (c_1_reg_1625_pp0_iter21_reg + 10'd2);

assign add_ln67_4_fu_811_p2 = (zext_ln67_3_fu_808_p1 + empty_28);

assign add_ln67_5_fu_846_p2 = (zext_ln60_1_reg_1640_pp0_iter22_reg + empty_29);

assign add_ln67_6_fu_880_p2 = (zext_ln67_1_fu_770_p1 + empty_29);

assign add_ln67_7_fu_915_p2 = (zext_ln67_3_fu_808_p1 + empty_29);

assign add_ln67_8_fu_950_p2 = (zext_ln60_1_reg_1640_pp0_iter22_reg + empty);

assign add_ln67_9_fu_984_p2 = (zext_ln67_1_fu_770_p1 + empty);

assign add_ln67_fu_715_p2 = (zext_ln60_1_fu_711_p1 + empty_28);

assign add_ln71_1_fu_1487_p2 = (p_cast42_cast_reg_1620 + output_r);

assign add_ln71_2_fu_1491_p2 = (zext_ln60_fu_1484_p1 + 11'd641);

assign add_ln71_fu_1501_p2 = (zext_ln71_fu_1497_p1 + add_ln71_1_fu_1487_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter109 == 1'b1) & (1'b1 == ap_block_state110_pp0_stage0_iter109));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter109 == 1'b1) & (1'b1 == ap_block_state110_pp0_stage0_iter109)) | ((m_axi_gmem_WREADY == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b1)) | ((m_axi_gmem_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter109 == 1'b1) & (1'b1 == ap_block_state110_pp0_stage0_iter109)) | ((m_axi_gmem_WREADY == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b1)) | ((m_axi_gmem_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b1)));
end

always @ (*) begin
    ap_block_state110_pp0_stage0_iter109 = (m_axi_gmem_BVALID == 1'b0);
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign grp_fu_1460_p1 = grp_fu_1460_p10;

assign grp_fu_1460_p10 = select_ln70_fu_1450_p3;

assign grp_fu_741_p1 = 19'd6;

assign icmp_ln60_fu_699_p2 = ((ap_sig_allocacmp_c_1 == 10'd638) ? 1'b1 : 1'b0);

assign icmp_ln70_fu_1478_p2 = ((zext_ln70_1_fu_1474_p1 < p2y_fu_1466_p3) ? 1'b1 : 1'b0);

assign image_gray_1_address0 = image_gray_1_address0_local;

assign image_gray_1_address1 = image_gray_1_address1_local;

assign image_gray_1_ce0 = image_gray_1_ce0_local;

assign image_gray_1_ce1 = image_gray_1_ce1_local;

assign image_gray_2_address0 = image_gray_2_address0_local;

assign image_gray_2_address1 = image_gray_2_address1_local;

assign image_gray_2_ce0 = image_gray_2_ce0_local;

assign image_gray_2_ce1 = image_gray_2_ce1_local;

assign image_gray_3_address0 = image_gray_3_address0_local;

assign image_gray_3_address1 = image_gray_3_address1_local;

assign image_gray_3_ce0 = image_gray_3_ce0_local;

assign image_gray_3_ce1 = image_gray_3_ce1_local;

assign image_gray_4_address0 = image_gray_4_address0_local;

assign image_gray_4_address1 = image_gray_4_address1_local;

assign image_gray_4_ce0 = image_gray_4_ce0_local;

assign image_gray_4_ce1 = image_gray_4_ce1_local;

assign image_gray_5_address0 = image_gray_5_address0_local;

assign image_gray_5_address1 = image_gray_5_address1_local;

assign image_gray_5_ce0 = image_gray_5_ce0_local;

assign image_gray_5_ce1 = image_gray_5_ce1_local;

assign image_gray_address0 = image_gray_address0_local;

assign image_gray_address1 = image_gray_address1_local;

assign image_gray_ce0 = image_gray_ce0_local;

assign image_gray_ce1 = image_gray_ce1_local;

assign m_axi_gmem_ARADDR = 64'd0;

assign m_axi_gmem_ARBURST = 2'd0;

assign m_axi_gmem_ARCACHE = 4'd0;

assign m_axi_gmem_ARID = 1'd0;

assign m_axi_gmem_ARLEN = 32'd0;

assign m_axi_gmem_ARLOCK = 2'd0;

assign m_axi_gmem_ARPROT = 3'd0;

assign m_axi_gmem_ARQOS = 4'd0;

assign m_axi_gmem_ARREGION = 4'd0;

assign m_axi_gmem_ARSIZE = 3'd0;

assign m_axi_gmem_ARUSER = 1'd0;

assign m_axi_gmem_ARVALID = 1'b0;

assign m_axi_gmem_AWADDR = sext_ln71_fu_1568_p1;

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLEN = 64'd1;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_RREADY = 1'b0;

assign m_axi_gmem_WDATA = shl_ln71_1_reg_1990;

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WSTRB = shl_ln71_reg_1985;

assign m_axi_gmem_WUSER = 1'd0;

assign mul_ln67_1_fu_782_p0 = mul_ln67_1_fu_782_p00;

assign mul_ln67_1_fu_782_p00 = add_ln67_2_fu_773_p2;

assign mul_ln67_1_fu_782_p1 = 39'd699051;

assign mul_ln67_2_fu_820_p0 = mul_ln67_2_fu_820_p00;

assign mul_ln67_2_fu_820_p00 = add_ln67_4_fu_811_p2;

assign mul_ln67_2_fu_820_p1 = 39'd699051;

assign mul_ln67_3_fu_854_p0 = mul_ln67_3_fu_854_p00;

assign mul_ln67_3_fu_854_p00 = add_ln67_5_fu_846_p2;

assign mul_ln67_3_fu_854_p1 = 39'd699051;

assign mul_ln67_4_fu_889_p0 = mul_ln67_4_fu_889_p00;

assign mul_ln67_4_fu_889_p00 = add_ln67_6_fu_880_p2;

assign mul_ln67_4_fu_889_p1 = 39'd699051;

assign mul_ln67_5_fu_924_p0 = mul_ln67_5_fu_924_p00;

assign mul_ln67_5_fu_924_p00 = add_ln67_7_fu_915_p2;

assign mul_ln67_5_fu_924_p1 = 39'd699051;

assign mul_ln67_6_fu_958_p0 = mul_ln67_6_fu_958_p00;

assign mul_ln67_6_fu_958_p00 = add_ln67_8_fu_950_p2;

assign mul_ln67_6_fu_958_p1 = 39'd699051;

assign mul_ln67_7_fu_993_p0 = mul_ln67_7_fu_993_p00;

assign mul_ln67_7_fu_993_p00 = add_ln67_9_fu_984_p2;

assign mul_ln67_7_fu_993_p1 = 39'd699051;

assign mul_ln67_8_fu_1028_p0 = mul_ln67_8_fu_1028_p00;

assign mul_ln67_8_fu_1028_p00 = add_ln67_10_fu_1019_p2;

assign mul_ln67_8_fu_1028_p1 = 39'd699051;

assign mul_ln67_fu_725_p0 = mul_ln67_fu_725_p00;

assign mul_ln67_fu_725_p00 = add_ln67_fu_715_p2;

assign mul_ln67_fu_725_p1 = 39'd699051;

assign p2y_fu_1466_p3 = {{select_ln70_fu_1450_p3}, {8'd0}};

assign p_cast42_cast_fu_687_p1 = p_cast42;

assign pixel_fu_1530_p3 = ((xor_ln70_fu_1521_p2[0:0] == 1'b1) ? 8'd255 : trunc_ln70_fu_1526_p1);

assign select_ln70_fu_1450_p3 = ((icmp_ln55[0:0] == 1'b1) ? 6'd1 : normal_factor_2_reload);

assign sext_ln71_fu_1568_p1 = $signed(trunc_ln71_1_reg_1980);

assign shl_ln1_fu_1425_p3 = {{tmp_7_reg_1944}, {2'd0}};

assign shl_ln67_cast_fu_1432_p1 = shl_ln1_fu_1425_p3;

assign shl_ln71_1_fu_1562_p2 = zext_ln71_1_fu_1538_p1 << zext_ln71_3_fu_1558_p1;

assign shl_ln71_2_fu_1551_p3 = {{trunc_ln71_reg_1974}, {3'd0}};

assign shl_ln71_fu_1545_p2 = 64'd1 << zext_ln71_2_fu_1542_p1;

assign sum_1_fu_1444_p2 = (zext_ln67_17_fu_1441_p1 + add_ln67_12_fu_1436_p2);

assign sum_fu_1054_p13 = 'bx;

assign tmp21_fu_1385_p2 = (tmp9_cast_fu_1381_p1 + tmp8_cast_fu_1371_p1);

assign tmp3_fu_1391_p3 = {{tmp21_fu_1385_p2}, {1'd0}};

assign tmp8_cast_fu_1371_p1 = tmp8_fu_1365_p2;

assign tmp8_fu_1365_p2 = (tmp_6_cast_fu_1353_p1 + tmp_4_cast_fu_1349_p1);

assign tmp9_cast_fu_1381_p1 = tmp9_fu_1375_p2;

assign tmp9_fu_1375_p2 = (tmp_8_cast_fu_1357_p1 + tmp_1_cast_fu_1361_p1);

assign tmp_12_fu_788_p4 = {{mul_ln67_1_fu_782_p2[38:22]}};

assign tmp_13_fu_826_p4 = {{mul_ln67_2_fu_820_p2[38:22]}};

assign tmp_14_fu_860_p4 = {{mul_ln67_3_fu_854_p2[38:22]}};

assign tmp_15_fu_895_p4 = {{mul_ln67_4_fu_889_p2[38:22]}};

assign tmp_16_fu_930_p4 = {{mul_ln67_5_fu_924_p2[38:22]}};

assign tmp_17_fu_964_p4 = {{mul_ln67_6_fu_958_p2[38:22]}};

assign tmp_18_fu_999_p4 = {{mul_ln67_7_fu_993_p2[38:22]}};

assign tmp_19_fu_1034_p4 = {{mul_ln67_8_fu_1028_p2[38:22]}};

assign tmp_1_cast_fu_1361_p1 = tmp_1_fu_1283_p15;

assign tmp_1_fu_1283_p13 = 'bx;

assign tmp_2_fu_1314_p13 = 'bx;

assign tmp_4_cast_fu_1349_p1 = tmp_4_fu_1089_p15;

assign tmp_4_fu_1089_p13 = 'bx;

assign tmp_5_fu_1120_p13 = 'bx;

assign tmp_6_cast_fu_1353_p1 = tmp_6_fu_1155_p15;

assign tmp_6_fu_1155_p13 = 'bx;

assign tmp_7_fu_1186_p13 = 'bx;

assign tmp_8_cast_fu_1357_p1 = tmp_8_fu_1217_p15;

assign tmp_8_fu_1217_p13 = 'bx;

assign tmp_9_fu_1248_p13 = 'bx;

assign trunc_ln67_fu_752_p1 = grp_fu_741_p2[2:0];

assign trunc_ln70_fu_1526_p1 = grp_fu_1460_p2[7:0];

assign trunc_ln71_fu_1507_p1 = add_ln71_fu_1501_p2[5:0];

assign xor_ln70_fu_1521_p2 = (icmp_ln70_reg_1969_pp0_iter39_reg ^ 1'd1);

assign zext_ln33_fu_1085_p1 = sum_fu_1054_p15;

assign zext_ln60_1_fu_711_p1 = ap_sig_allocacmp_c_1;

assign zext_ln60_fu_1484_p1 = c_1_reg_1625_pp0_iter38_reg;

assign zext_ln67_10_fu_974_p1 = tmp_17_fu_964_p4;

assign zext_ln67_11_fu_1279_p1 = tmp_9_fu_1248_p15;

assign zext_ln67_12_fu_1009_p1 = tmp_18_fu_999_p4;

assign zext_ln67_13_fu_1044_p1 = tmp_19_fu_1034_p4;

assign zext_ln67_14_fu_1345_p1 = tmp_2_fu_1314_p15;

assign zext_ln67_15_fu_1399_p1 = tmp3_fu_1391_p3;

assign zext_ln67_16_fu_1415_p1 = add_ln67_13_fu_1409_p2;

assign zext_ln67_17_fu_1441_p1 = add_ln67_14_reg_1954;

assign zext_ln67_1_fu_770_p1 = add_ln67_1_reg_1635_pp0_iter22_reg;

assign zext_ln67_2_fu_798_p1 = tmp_12_fu_788_p4;

assign zext_ln67_3_fu_808_p1 = add_ln67_3_reg_1669;

assign zext_ln67_4_fu_836_p1 = tmp_13_fu_826_p4;

assign zext_ln67_5_fu_1151_p1 = tmp_5_fu_1120_p15;

assign zext_ln67_6_fu_870_p1 = tmp_14_fu_860_p4;

assign zext_ln67_7_fu_905_p1 = tmp_15_fu_895_p4;

assign zext_ln67_9_fu_940_p1 = tmp_16_fu_930_p4;

assign zext_ln67_fu_761_p1 = tmp_11_reg_1651_pp0_iter22_reg;

assign zext_ln70_1_fu_1474_p1 = sum_1_fu_1444_p2;

assign zext_ln71_1_fu_1538_p1 = pixel_fu_1530_p3;

assign zext_ln71_2_fu_1542_p1 = trunc_ln71_reg_1974;

assign zext_ln71_3_fu_1558_p1 = shl_ln71_2_fu_1551_p3;

assign zext_ln71_fu_1497_p1 = add_ln71_2_fu_1491_p2;

always @ (posedge ap_clk) begin
    p_cast42_cast_reg_1620[63:19] <= 45'b000000000000000000000000000000000000000000000;
    zext_ln60_1_reg_1640[18:10] <= 9'b000000000;
    zext_ln60_1_reg_1640_pp0_iter1_reg[18:10] <= 9'b000000000;
    zext_ln60_1_reg_1640_pp0_iter2_reg[18:10] <= 9'b000000000;
    zext_ln60_1_reg_1640_pp0_iter3_reg[18:10] <= 9'b000000000;
    zext_ln60_1_reg_1640_pp0_iter4_reg[18:10] <= 9'b000000000;
    zext_ln60_1_reg_1640_pp0_iter5_reg[18:10] <= 9'b000000000;
    zext_ln60_1_reg_1640_pp0_iter6_reg[18:10] <= 9'b000000000;
    zext_ln60_1_reg_1640_pp0_iter7_reg[18:10] <= 9'b000000000;
    zext_ln60_1_reg_1640_pp0_iter8_reg[18:10] <= 9'b000000000;
    zext_ln60_1_reg_1640_pp0_iter9_reg[18:10] <= 9'b000000000;
    zext_ln60_1_reg_1640_pp0_iter10_reg[18:10] <= 9'b000000000;
    zext_ln60_1_reg_1640_pp0_iter11_reg[18:10] <= 9'b000000000;
    zext_ln60_1_reg_1640_pp0_iter12_reg[18:10] <= 9'b000000000;
    zext_ln60_1_reg_1640_pp0_iter13_reg[18:10] <= 9'b000000000;
    zext_ln60_1_reg_1640_pp0_iter14_reg[18:10] <= 9'b000000000;
    zext_ln60_1_reg_1640_pp0_iter15_reg[18:10] <= 9'b000000000;
    zext_ln60_1_reg_1640_pp0_iter16_reg[18:10] <= 9'b000000000;
    zext_ln60_1_reg_1640_pp0_iter17_reg[18:10] <= 9'b000000000;
    zext_ln60_1_reg_1640_pp0_iter18_reg[18:10] <= 9'b000000000;
    zext_ln60_1_reg_1640_pp0_iter19_reg[18:10] <= 9'b000000000;
    zext_ln60_1_reg_1640_pp0_iter20_reg[18:10] <= 9'b000000000;
    zext_ln60_1_reg_1640_pp0_iter21_reg[18:10] <= 9'b000000000;
    zext_ln60_1_reg_1640_pp0_iter22_reg[18:10] <= 9'b000000000;
end

endmodule //edgedetect_edgedetect_Pipeline_VITIS_LOOP_60_4
