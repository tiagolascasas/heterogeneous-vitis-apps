// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module edgedetect_edgedetect_Pipeline_VITIS_LOOP_10_1_VITIS_LOOP_13_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        image_gray_5_address0,
        image_gray_5_ce0,
        image_gray_5_we0,
        image_gray_5_d0,
        image_gray_4_address0,
        image_gray_4_ce0,
        image_gray_4_we0,
        image_gray_4_d0,
        image_gray_3_address0,
        image_gray_3_ce0,
        image_gray_3_we0,
        image_gray_3_d0,
        image_gray_2_address0,
        image_gray_2_ce0,
        image_gray_2_we0,
        image_gray_2_d0,
        image_gray_1_address0,
        image_gray_1_ce0,
        image_gray_1_we0,
        image_gray_1_d0,
        image_gray_address0,
        image_gray_ce0,
        image_gray_we0,
        image_gray_d0,
        image_rgb
);

parameter    ap_ST_fsm_pp0_stage0 = 3'd1;
parameter    ap_ST_fsm_pp0_stage1 = 3'd2;
parameter    ap_ST_fsm_pp0_stage2 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [511:0] m_axi_gmem_WDATA;
output  [63:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [511:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [8:0] m_axi_gmem_RFIFONUM;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
output  [15:0] image_gray_5_address0;
output   image_gray_5_ce0;
output   image_gray_5_we0;
output  [7:0] image_gray_5_d0;
output  [15:0] image_gray_4_address0;
output   image_gray_4_ce0;
output   image_gray_4_we0;
output  [7:0] image_gray_4_d0;
output  [15:0] image_gray_3_address0;
output   image_gray_3_ce0;
output   image_gray_3_we0;
output  [7:0] image_gray_3_d0;
output  [15:0] image_gray_2_address0;
output   image_gray_2_ce0;
output   image_gray_2_we0;
output  [7:0] image_gray_2_d0;
output  [15:0] image_gray_1_address0;
output   image_gray_1_ce0;
output   image_gray_1_we0;
output  [7:0] image_gray_1_d0;
output  [15:0] image_gray_address0;
output   image_gray_ce0;
output   image_gray_we0;
output  [7:0] image_gray_d0;
input  [63:0] image_rgb;

reg ap_idle;
reg m_axi_gmem_ARVALID;
reg[63:0] m_axi_gmem_ARADDR;
reg m_axi_gmem_RREADY;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage2;
reg   [0:0] icmp_ln10_reg_1160;
reg    ap_block_state3_io;
reg    ap_block_state75_pp0_stage2_iter24;
reg    ap_block_pp0_stage2_subdone;
reg    ap_condition_exit_pp0_iter0_stage2;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [5:0] mask_table_address0;
wire   [51:0] mask_table_q0;
reg    gmem_blk_n_AR;
wire    ap_block_pp0_stage2;
reg    gmem_blk_n_R;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage0;
reg    ap_block_state4_io;
reg    ap_block_state76_pp0_stage0_iter25;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln10_fu_380_p2;
reg    ap_block_state74_pp0_stage1_iter24;
reg    ap_block_pp0_stage1_11001;
reg   [18:0] tmp_s_reg_1164;
reg   [17:0] tmp_2_reg_1169;
wire   [63:0] add_ln15_fu_517_p2;
reg   [63:0] add_ln15_reg_1174;
reg   [57:0] trunc_ln15_1_reg_1180;
wire   [5:0] trunc_ln15_fu_538_p1;
reg   [5:0] trunc_ln15_reg_1185;
reg   [5:0] trunc_ln15_reg_1185_pp0_iter1_reg;
reg   [5:0] trunc_ln15_reg_1185_pp0_iter2_reg;
reg   [5:0] trunc_ln15_reg_1185_pp0_iter3_reg;
reg   [5:0] trunc_ln15_reg_1185_pp0_iter4_reg;
reg   [5:0] trunc_ln15_reg_1185_pp0_iter5_reg;
reg   [5:0] trunc_ln15_reg_1185_pp0_iter6_reg;
reg   [5:0] trunc_ln15_reg_1185_pp0_iter7_reg;
reg   [5:0] trunc_ln15_reg_1185_pp0_iter8_reg;
reg   [5:0] trunc_ln15_reg_1185_pp0_iter9_reg;
reg   [5:0] trunc_ln15_reg_1185_pp0_iter10_reg;
reg   [5:0] trunc_ln15_reg_1185_pp0_iter11_reg;
reg   [5:0] trunc_ln15_reg_1185_pp0_iter12_reg;
reg   [5:0] trunc_ln15_reg_1185_pp0_iter13_reg;
reg   [5:0] trunc_ln15_reg_1185_pp0_iter14_reg;
reg   [5:0] trunc_ln15_reg_1185_pp0_iter15_reg;
reg   [5:0] trunc_ln15_reg_1185_pp0_iter16_reg;
reg   [5:0] trunc_ln15_reg_1185_pp0_iter17_reg;
reg   [5:0] trunc_ln15_reg_1185_pp0_iter18_reg;
reg   [5:0] trunc_ln15_reg_1185_pp0_iter19_reg;
reg   [5:0] trunc_ln15_reg_1185_pp0_iter20_reg;
reg   [5:0] trunc_ln15_reg_1185_pp0_iter21_reg;
reg   [5:0] trunc_ln15_reg_1185_pp0_iter22_reg;
reg   [5:0] trunc_ln15_reg_1185_pp0_iter23_reg;
reg   [5:0] trunc_ln15_reg_1185_pp0_iter24_reg;
wire   [18:0] add_ln21_fu_548_p2;
reg   [18:0] add_ln21_reg_1190;
reg    ap_block_pp0_stage2_11001;
reg   [57:0] trunc_ln15_5_reg_1202;
wire   [5:0] trunc_ln15_3_fu_633_p1;
reg   [5:0] trunc_ln15_3_reg_1207;
reg   [5:0] trunc_ln15_3_reg_1207_pp0_iter1_reg;
reg   [5:0] trunc_ln15_3_reg_1207_pp0_iter2_reg;
reg   [5:0] trunc_ln15_3_reg_1207_pp0_iter3_reg;
reg   [5:0] trunc_ln15_3_reg_1207_pp0_iter4_reg;
reg   [5:0] trunc_ln15_3_reg_1207_pp0_iter5_reg;
reg   [5:0] trunc_ln15_3_reg_1207_pp0_iter6_reg;
reg   [5:0] trunc_ln15_3_reg_1207_pp0_iter7_reg;
reg   [5:0] trunc_ln15_3_reg_1207_pp0_iter8_reg;
reg   [5:0] trunc_ln15_3_reg_1207_pp0_iter9_reg;
reg   [5:0] trunc_ln15_3_reg_1207_pp0_iter10_reg;
reg   [5:0] trunc_ln15_3_reg_1207_pp0_iter11_reg;
reg   [5:0] trunc_ln15_3_reg_1207_pp0_iter12_reg;
reg   [5:0] trunc_ln15_3_reg_1207_pp0_iter13_reg;
reg   [5:0] trunc_ln15_3_reg_1207_pp0_iter14_reg;
reg   [5:0] trunc_ln15_3_reg_1207_pp0_iter15_reg;
reg   [5:0] trunc_ln15_3_reg_1207_pp0_iter16_reg;
reg   [5:0] trunc_ln15_3_reg_1207_pp0_iter17_reg;
reg   [5:0] trunc_ln15_3_reg_1207_pp0_iter18_reg;
reg   [5:0] trunc_ln15_3_reg_1207_pp0_iter19_reg;
reg   [5:0] trunc_ln15_3_reg_1207_pp0_iter20_reg;
reg   [5:0] trunc_ln15_3_reg_1207_pp0_iter21_reg;
reg   [5:0] trunc_ln15_3_reg_1207_pp0_iter22_reg;
reg   [5:0] trunc_ln15_3_reg_1207_pp0_iter23_reg;
reg   [5:0] trunc_ln15_3_reg_1207_pp0_iter24_reg;
reg   [57:0] trunc_ln15_7_reg_1212;
wire   [5:0] trunc_ln15_6_fu_652_p1;
reg   [5:0] trunc_ln15_6_reg_1217;
reg   [5:0] trunc_ln15_6_reg_1217_pp0_iter1_reg;
reg   [5:0] trunc_ln15_6_reg_1217_pp0_iter2_reg;
reg   [5:0] trunc_ln15_6_reg_1217_pp0_iter3_reg;
reg   [5:0] trunc_ln15_6_reg_1217_pp0_iter4_reg;
reg   [5:0] trunc_ln15_6_reg_1217_pp0_iter5_reg;
reg   [5:0] trunc_ln15_6_reg_1217_pp0_iter6_reg;
reg   [5:0] trunc_ln15_6_reg_1217_pp0_iter7_reg;
reg   [5:0] trunc_ln15_6_reg_1217_pp0_iter8_reg;
reg   [5:0] trunc_ln15_6_reg_1217_pp0_iter9_reg;
reg   [5:0] trunc_ln15_6_reg_1217_pp0_iter10_reg;
reg   [5:0] trunc_ln15_6_reg_1217_pp0_iter11_reg;
reg   [5:0] trunc_ln15_6_reg_1217_pp0_iter12_reg;
reg   [5:0] trunc_ln15_6_reg_1217_pp0_iter13_reg;
reg   [5:0] trunc_ln15_6_reg_1217_pp0_iter14_reg;
reg   [5:0] trunc_ln15_6_reg_1217_pp0_iter15_reg;
reg   [5:0] trunc_ln15_6_reg_1217_pp0_iter16_reg;
reg   [5:0] trunc_ln15_6_reg_1217_pp0_iter17_reg;
reg   [5:0] trunc_ln15_6_reg_1217_pp0_iter18_reg;
reg   [5:0] trunc_ln15_6_reg_1217_pp0_iter19_reg;
reg   [5:0] trunc_ln15_6_reg_1217_pp0_iter20_reg;
reg   [5:0] trunc_ln15_6_reg_1217_pp0_iter21_reg;
reg   [5:0] trunc_ln15_6_reg_1217_pp0_iter22_reg;
reg   [5:0] trunc_ln15_6_reg_1217_pp0_iter23_reg;
reg   [5:0] trunc_ln15_6_reg_1217_pp0_iter24_reg;
reg   [16:0] tmp_28_reg_1222;
reg   [16:0] tmp_28_reg_1222_pp0_iter1_reg;
reg   [16:0] tmp_28_reg_1222_pp0_iter2_reg;
reg   [16:0] tmp_28_reg_1222_pp0_iter3_reg;
reg   [16:0] tmp_28_reg_1222_pp0_iter4_reg;
reg   [16:0] tmp_28_reg_1222_pp0_iter5_reg;
reg   [16:0] tmp_28_reg_1222_pp0_iter6_reg;
reg   [16:0] tmp_28_reg_1222_pp0_iter7_reg;
reg   [16:0] tmp_28_reg_1222_pp0_iter8_reg;
reg   [16:0] tmp_28_reg_1222_pp0_iter9_reg;
reg   [16:0] tmp_28_reg_1222_pp0_iter10_reg;
reg   [16:0] tmp_28_reg_1222_pp0_iter11_reg;
reg   [16:0] tmp_28_reg_1222_pp0_iter12_reg;
reg   [16:0] tmp_28_reg_1222_pp0_iter13_reg;
reg   [16:0] tmp_28_reg_1222_pp0_iter14_reg;
reg   [16:0] tmp_28_reg_1222_pp0_iter15_reg;
reg   [16:0] tmp_28_reg_1222_pp0_iter16_reg;
reg   [16:0] tmp_28_reg_1222_pp0_iter17_reg;
reg   [16:0] tmp_28_reg_1222_pp0_iter18_reg;
reg   [16:0] tmp_28_reg_1222_pp0_iter19_reg;
reg   [16:0] tmp_28_reg_1222_pp0_iter20_reg;
reg   [16:0] tmp_28_reg_1222_pp0_iter21_reg;
reg   [16:0] tmp_28_reg_1222_pp0_iter22_reg;
reg   [16:0] tmp_28_reg_1222_pp0_iter23_reg;
reg   [16:0] tmp_28_reg_1222_pp0_iter24_reg;
reg   [16:0] tmp_28_reg_1222_pp0_iter25_reg;
reg   [16:0] tmp_28_reg_1222_pp0_iter26_reg;
reg   [16:0] tmp_28_reg_1222_pp0_iter27_reg;
reg   [16:0] tmp_28_reg_1222_pp0_iter28_reg;
reg   [16:0] tmp_28_reg_1222_pp0_iter29_reg;
reg   [16:0] tmp_28_reg_1222_pp0_iter30_reg;
reg   [16:0] tmp_28_reg_1222_pp0_iter31_reg;
reg   [16:0] tmp_28_reg_1222_pp0_iter32_reg;
reg   [16:0] tmp_28_reg_1222_pp0_iter33_reg;
reg   [16:0] tmp_28_reg_1222_pp0_iter34_reg;
reg   [16:0] tmp_28_reg_1222_pp0_iter35_reg;
wire   [2:0] trunc_ln21_fu_695_p1;
reg   [2:0] trunc_ln21_reg_1239;
reg   [2:0] trunc_ln21_reg_1239_pp0_iter8_reg;
reg   [2:0] trunc_ln21_reg_1239_pp0_iter9_reg;
reg   [2:0] trunc_ln21_reg_1239_pp0_iter10_reg;
reg   [2:0] trunc_ln21_reg_1239_pp0_iter11_reg;
reg   [2:0] trunc_ln21_reg_1239_pp0_iter12_reg;
reg   [2:0] trunc_ln21_reg_1239_pp0_iter13_reg;
reg   [2:0] trunc_ln21_reg_1239_pp0_iter14_reg;
reg   [2:0] trunc_ln21_reg_1239_pp0_iter15_reg;
reg   [2:0] trunc_ln21_reg_1239_pp0_iter16_reg;
reg   [2:0] trunc_ln21_reg_1239_pp0_iter17_reg;
reg   [2:0] trunc_ln21_reg_1239_pp0_iter18_reg;
reg   [2:0] trunc_ln21_reg_1239_pp0_iter19_reg;
reg   [2:0] trunc_ln21_reg_1239_pp0_iter20_reg;
reg   [2:0] trunc_ln21_reg_1239_pp0_iter21_reg;
reg   [2:0] trunc_ln21_reg_1239_pp0_iter22_reg;
reg   [2:0] trunc_ln21_reg_1239_pp0_iter23_reg;
reg   [2:0] trunc_ln21_reg_1239_pp0_iter24_reg;
reg   [2:0] trunc_ln21_reg_1239_pp0_iter25_reg;
reg   [2:0] trunc_ln21_reg_1239_pp0_iter26_reg;
reg   [2:0] trunc_ln21_reg_1239_pp0_iter27_reg;
reg   [2:0] trunc_ln21_reg_1239_pp0_iter28_reg;
reg   [2:0] trunc_ln21_reg_1239_pp0_iter29_reg;
reg   [2:0] trunc_ln21_reg_1239_pp0_iter30_reg;
reg   [2:0] trunc_ln21_reg_1239_pp0_iter31_reg;
reg   [2:0] trunc_ln21_reg_1239_pp0_iter32_reg;
reg   [2:0] trunc_ln21_reg_1239_pp0_iter33_reg;
reg   [2:0] trunc_ln21_reg_1239_pp0_iter34_reg;
reg   [2:0] trunc_ln21_reg_1239_pp0_iter35_reg;
reg   [511:0] gmem_addr_read_reg_1243;
wire   [7:0] r_fu_715_p1;
reg   [7:0] r_reg_1248;
reg   [511:0] gmem_addr_1_read_reg_1253;
wire   [7:0] g_fu_735_p1;
reg   [7:0] g_reg_1258;
reg   [511:0] gmem_addr_2_read_reg_1263;
wire   [31:0] zext_ln20_fu_739_p1;
wire   [7:0] b_fu_759_p1;
reg   [7:0] b_reg_1273;
wire   [31:0] zext_ln20_1_fu_763_p1;
wire   [31:0] zext_ln20_2_fu_767_p1;
wire   [63:0] grp_fu_354_p1;
reg   [63:0] conv19_i_reg_1288;
reg   [63:0] conv22_i_reg_1293;
reg   [63:0] conv26_i_reg_1298;
wire   [63:0] grp_fu_347_p2;
reg   [63:0] mul20_i_reg_1303;
reg   [63:0] mul23_i_reg_1308;
reg   [63:0] mul27_i_reg_1313;
reg   [63:0] mul27_i_reg_1313_pp0_iter30_reg;
reg   [63:0] mul27_i_reg_1313_pp0_iter31_reg;
wire   [63:0] grp_fu_343_p2;
reg   [63:0] add24_i_reg_1318;
reg   [63:0] add28_i_reg_1323;
wire   [31:0] grp_fu_337_p1;
reg   [31:0] gray_reg_1328;
wire   [63:0] grp_fu_340_p1;
reg   [63:0] dc_reg_1333;
reg   [0:0] xs_sign_reg_1338;
reg   [10:0] xs_exp_reg_1347;
wire   [51:0] xs_sig_fu_793_p1;
reg   [51:0] xs_sig_reg_1355;
wire   [62:0] trunc_ln479_fu_812_p1;
reg   [62:0] trunc_ln479_reg_1366;
reg   [10:0] xs_exp_4_reg_1371;
wire   [51:0] trunc_ln505_fu_1017_p1;
reg   [51:0] trunc_ln505_reg_1377;
wire   [112:0] zext_ln68_fu_1030_p1;
reg   [112:0] zext_ln68_reg_1382;
wire   [0:0] tmp_27_fu_1043_p3;
reg   [0:0] tmp_27_reg_1387;
wire   [112:0] zext_ln71_fu_1072_p1;
reg   [112:0] zext_ln71_reg_1392;
reg   [7:0] tmp_4_reg_1397;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] zext_ln32_fu_807_p1;
wire   [63:0] zext_ln21_fu_1118_p1;
wire  signed [63:0] sext_ln15_fu_608_p1;
wire  signed [63:0] sext_ln15_1_fu_675_p1;
wire  signed [63:0] sext_ln15_2_fu_685_p1;
reg   [9:0] j_fu_188;
wire   [9:0] add_ln13_fu_560_p2;
wire    ap_loop_init;
reg   [10:0] jj_fu_192;
wire   [10:0] add_ln18_fu_542_p2;
reg   [8:0] i_fu_196;
wire   [8:0] select_ln10_2_fu_429_p3;
reg   [18:0] indvar_flatten_fu_200;
wire   [18:0] add_ln10_fu_386_p2;
reg    mask_table_ce0_local;
reg    image_gray_4_we0_local;
wire   [7:0] val_fu_1106_p3;
reg    image_gray_4_ce0_local;
reg    image_gray_3_we0_local;
reg    image_gray_3_ce0_local;
reg    image_gray_2_we0_local;
reg    image_gray_2_ce0_local;
reg    image_gray_1_we0_local;
reg    image_gray_1_ce0_local;
reg    image_gray_we0_local;
reg    image_gray_ce0_local;
reg    image_gray_5_we0_local;
reg    image_gray_5_ce0_local;
reg   [63:0] grp_fu_343_p0;
reg   [63:0] grp_fu_343_p1;
reg   [63:0] grp_fu_347_p0;
reg   [63:0] grp_fu_347_p1;
reg   [31:0] grp_fu_354_p0;
wire   [0:0] icmp_ln13_fu_401_p2;
wire   [8:0] add_ln10_1_fu_423_p2;
wire   [15:0] tmp_fu_445_p3;
wire   [19:0] p_shl1_fu_437_p3;
wire   [19:0] p_shl18_fu_453_p1;
wire   [19:0] empty_fu_457_p2;
wire   [17:0] tmp_24_fu_487_p3;
wire   [18:0] p_shl_fu_495_p1;
wire   [18:0] p_shl16_fu_499_p1;
wire   [10:0] select_ln10_fu_407_p3;
wire   [9:0] select_ln10_1_fu_415_p3;
wire   [63:0] zext_ln13_fu_509_p1;
wire   [63:0] p_cast39_fu_463_p1;
wire   [63:0] add_ln15_1_fu_522_p2;
wire   [18:0] zext_ln13_1_fu_513_p1;
wire   [18:0] empty_35_fu_503_p2;
wire   [18:0] grp_fu_554_p0;
wire   [3:0] grp_fu_554_p1;
wire   [19:0] tmp_1_fu_586_p3;
wire   [19:0] tmp_3_fu_597_p3;
wire   [63:0] p_cast40_fu_593_p1;
wire   [63:0] add_ln15_2_fu_618_p2;
wire   [63:0] p_cast41_fu_604_p1;
wire   [63:0] add_ln15_3_fu_637_p2;
wire   [18:0] mul_ln21_fu_659_p0;
wire   [20:0] mul_ln21_fu_659_p1;
wire   [38:0] mul_ln21_fu_659_p2;
wire   [2:0] grp_fu_554_p2;
wire   [8:0] shl_ln_fu_699_p3;
wire   [511:0] zext_ln15_fu_706_p1;
wire   [511:0] lshr_ln15_fu_710_p2;
wire   [8:0] shl_ln15_1_fu_719_p3;
wire   [511:0] zext_ln15_1_fu_726_p1;
wire   [511:0] lshr_ln15_1_fu_730_p2;
wire   [8:0] shl_ln15_2_fu_743_p3;
wire   [511:0] zext_ln15_2_fu_750_p1;
wire   [511:0] lshr_ln15_2_fu_754_p2;
wire   [63:0] data_1_fu_771_p1;
wire   [5:0] index_fu_797_p4;
wire   [63:0] t_3_fu_826_p3;
wire   [63:0] zext_ln28_fu_837_p1;
wire   [63:0] t_fu_841_p3;
wire   [63:0] add_ln36_fu_848_p2;
wire   [0:0] xs_sign_1_fu_854_p3;
wire   [10:0] xs_exp_1_fu_862_p4;
wire   [51:0] xs_sig_1_fu_872_p1;
wire   [51:0] xs_sig_2_fu_887_p3;
wire   [51:0] xor_ln39_fu_893_p2;
wire   [0:0] xs_sign_2_fu_876_p2;
wire   [10:0] xs_exp_2_fu_881_p3;
wire   [51:0] xs_sig_3_fu_899_p2;
wire   [63:0] t_4_fu_905_p4;
wire   [0:0] icmp_ln18_fu_816_p2;
wire   [0:0] icmp_ln24_fu_821_p2;
wire   [0:0] xor_ln18_fu_919_p2;
wire   [0:0] or_ln24_fu_931_p2;
wire   [0:0] icmp_ln19_1_fu_948_p2;
wire   [0:0] icmp_ln19_fu_943_p2;
wire   [0:0] or_ln19_fu_953_p2;
wire   [0:0] and_ln19_fu_959_p2;
wire   [0:0] and_ln24_fu_925_p2;
wire   [0:0] xor_ln24_fu_937_p2;
wire   [0:0] and_ln19_1_fu_964_p2;
wire   [63:0] dc_1_fu_980_p4;
wire   [63:0] dc_1_fu_980_p8;
wire   [63:0] dc_1_fu_980_p9;
wire   [2:0] dc_1_fu_980_p10;
wire   [63:0] dc_1_fu_980_p11;
wire   [63:0] data_fu_1003_p1;
wire   [53:0] mantissa_fu_1021_p4;
wire   [11:0] zext_ln486_fu_1034_p1;
wire   [11:0] add_ln486_fu_1037_p2;
wire   [10:0] sub_ln71_fu_1051_p2;
wire  signed [11:0] sext_ln71_fu_1056_p1;
wire   [11:0] select_ln71_fu_1060_p3;
wire  signed [31:0] sext_ln71_1_fu_1068_p1;
wire   [112:0] lshr_ln71_fu_1076_p2;
wire   [112:0] shl_ln71_fu_1092_p2;
wire   [7:0] tmp_5_fu_1096_p4;
reg    grp_fu_337_ce;
reg    grp_fu_340_ce;
reg    grp_fu_343_ce;
reg    grp_fu_347_ce;
reg    grp_fu_354_ce;
reg    grp_fu_554_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg    ap_loop_exit_ready_pp0_iter34_reg;
reg    ap_loop_exit_ready_pp0_iter35_reg;
reg   [2:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to36;
reg    ap_block_pp0_stage1_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire   [38:0] mul_ln21_fu_659_p00;
wire  signed [2:0] dc_1_fu_980_p1;
wire   [2:0] dc_1_fu_980_p3;
wire   [2:0] dc_1_fu_980_p5;
wire   [2:0] dc_1_fu_980_p7;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 j_fu_188 = 10'd0;
#0 jj_fu_192 = 11'd0;
#0 i_fu_196 = 9'd0;
#0 indvar_flatten_fu_200 = 19'd0;
#0 ap_done_reg = 1'b0;
end

edgedetect_edgedetect_Pipeline_VITIS_LOOP_10_1_VITIS_LOOP_13_2_mask_table_ROM_AUTO_1R #(
    .DataWidth( 52 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
mask_table_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mask_table_address0),
    .ce0(mask_table_ce0_local),
    .q0(mask_table_q0)
);

edgedetect_fptrunc_64ns_32_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
fptrunc_64ns_32_2_no_dsp_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(add28_i_reg_1323),
    .ce(grp_fu_337_ce),
    .dout(grp_fu_337_p1)
);

edgedetect_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(gray_reg_1328),
    .ce(grp_fu_340_ce),
    .dout(grp_fu_340_p1)
);

edgedetect_dadd_64ns_64ns_64_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_8_full_dsp_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_343_p0),
    .din1(grp_fu_343_p1),
    .ce(grp_fu_343_ce),
    .dout(grp_fu_343_p2)
);

edgedetect_dmul_64ns_64ns_64_7_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_7_max_dsp_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_347_p0),
    .din1(grp_fu_347_p1),
    .ce(grp_fu_347_ce),
    .dout(grp_fu_347_p2)
);

edgedetect_sitodp_32ns_64_5_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
sitodp_32ns_64_5_no_dsp_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_354_p0),
    .ce(grp_fu_354_ce),
    .dout(grp_fu_354_p1)
);

edgedetect_urem_19ns_4ns_3_23_1 #(
    .ID( 1 ),
    .NUM_STAGE( 23 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 3 ))
urem_19ns_4ns_3_23_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_554_p0),
    .din1(grp_fu_554_p1),
    .ce(grp_fu_554_ce),
    .dout(grp_fu_554_p2)
);

edgedetect_mul_19ns_21ns_39_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 21 ),
    .dout_WIDTH( 39 ))
mul_19ns_21ns_39_1_1_U14(
    .din0(mul_ln21_fu_659_p0),
    .din1(mul_ln21_fu_659_p1),
    .dout(mul_ln21_fu_659_p2)
);

(* dissolve_hierarchy = "yes" *) edgedetect_sparsemux_9_3_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h4 ),
    .din0_WIDTH( 64 ),
    .CASE1( 3'h2 ),
    .din1_WIDTH( 64 ),
    .CASE2( 3'h1 ),
    .din2_WIDTH( 64 ),
    .CASE3( 3'h0 ),
    .din3_WIDTH( 64 ),
    .def_WIDTH( 64 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 64 ))
sparsemux_9_3_64_1_1_U15(
    .din0(dc_reg_1333),
    .din1(dc_1_fu_980_p4),
    .din2(64'd13830554455654793216),
    .din3(dc_1_fu_980_p8),
    .def(dc_1_fu_980_p9),
    .sel(dc_1_fu_980_p10),
    .dout(dc_1_fu_980_p11)
);

edgedetect_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage2),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_loop_exit_ready_pp0_iter35_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_fu_196 <= 9'd0;
    end else if (((icmp_ln10_fu_380_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        i_fu_196 <= select_ln10_2_fu_429_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_fu_200 <= 19'd0;
    end else if (((icmp_ln10_fu_380_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        indvar_flatten_fu_200 <= add_ln10_fu_386_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_fu_188 <= 10'd0;
    end else if (((icmp_ln10_fu_380_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        j_fu_188 <= add_ln13_fu_560_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        jj_fu_192 <= 11'd0;
    end else if (((icmp_ln10_fu_380_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        jj_fu_192 <= add_ln18_fu_542_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter31 == 1'b1))) begin
        add24_i_reg_1318 <= grp_fu_343_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter34 == 1'b1))) begin
        add28_i_reg_1323 <= grp_fu_343_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln15_reg_1174 <= add_ln15_fu_517_p2;
        add_ln21_reg_1190 <= add_ln21_fu_548_p2;
        b_reg_1273 <= b_fu_759_p1;
        gmem_addr_read_reg_1243 <= m_axi_gmem_RDATA;
        icmp_ln10_reg_1160 <= icmp_ln10_fu_380_p2;
        mul27_i_reg_1313_pp0_iter30_reg <= mul27_i_reg_1313;
        mul27_i_reg_1313_pp0_iter31_reg <= mul27_i_reg_1313_pp0_iter30_reg;
        tmp_27_reg_1387 <= add_ln486_fu_1037_p2[32'd11];
        tmp_2_reg_1169 <= {{empty_fu_457_p2[19:2]}};
        tmp_4_reg_1397 <= {{lshr_ln71_fu_1076_p2[60:53]}};
        tmp_s_reg_1164 <= {{empty_fu_457_p2[19:1]}};
        trunc_ln15_1_reg_1180 <= {{add_ln15_1_fu_522_p2[63:6]}};
        trunc_ln15_reg_1185 <= trunc_ln15_fu_538_p1;
        trunc_ln15_reg_1185_pp0_iter10_reg <= trunc_ln15_reg_1185_pp0_iter9_reg;
        trunc_ln15_reg_1185_pp0_iter11_reg <= trunc_ln15_reg_1185_pp0_iter10_reg;
        trunc_ln15_reg_1185_pp0_iter12_reg <= trunc_ln15_reg_1185_pp0_iter11_reg;
        trunc_ln15_reg_1185_pp0_iter13_reg <= trunc_ln15_reg_1185_pp0_iter12_reg;
        trunc_ln15_reg_1185_pp0_iter14_reg <= trunc_ln15_reg_1185_pp0_iter13_reg;
        trunc_ln15_reg_1185_pp0_iter15_reg <= trunc_ln15_reg_1185_pp0_iter14_reg;
        trunc_ln15_reg_1185_pp0_iter16_reg <= trunc_ln15_reg_1185_pp0_iter15_reg;
        trunc_ln15_reg_1185_pp0_iter17_reg <= trunc_ln15_reg_1185_pp0_iter16_reg;
        trunc_ln15_reg_1185_pp0_iter18_reg <= trunc_ln15_reg_1185_pp0_iter17_reg;
        trunc_ln15_reg_1185_pp0_iter19_reg <= trunc_ln15_reg_1185_pp0_iter18_reg;
        trunc_ln15_reg_1185_pp0_iter1_reg <= trunc_ln15_reg_1185;
        trunc_ln15_reg_1185_pp0_iter20_reg <= trunc_ln15_reg_1185_pp0_iter19_reg;
        trunc_ln15_reg_1185_pp0_iter21_reg <= trunc_ln15_reg_1185_pp0_iter20_reg;
        trunc_ln15_reg_1185_pp0_iter22_reg <= trunc_ln15_reg_1185_pp0_iter21_reg;
        trunc_ln15_reg_1185_pp0_iter23_reg <= trunc_ln15_reg_1185_pp0_iter22_reg;
        trunc_ln15_reg_1185_pp0_iter24_reg <= trunc_ln15_reg_1185_pp0_iter23_reg;
        trunc_ln15_reg_1185_pp0_iter2_reg <= trunc_ln15_reg_1185_pp0_iter1_reg;
        trunc_ln15_reg_1185_pp0_iter3_reg <= trunc_ln15_reg_1185_pp0_iter2_reg;
        trunc_ln15_reg_1185_pp0_iter4_reg <= trunc_ln15_reg_1185_pp0_iter3_reg;
        trunc_ln15_reg_1185_pp0_iter5_reg <= trunc_ln15_reg_1185_pp0_iter4_reg;
        trunc_ln15_reg_1185_pp0_iter6_reg <= trunc_ln15_reg_1185_pp0_iter5_reg;
        trunc_ln15_reg_1185_pp0_iter7_reg <= trunc_ln15_reg_1185_pp0_iter6_reg;
        trunc_ln15_reg_1185_pp0_iter8_reg <= trunc_ln15_reg_1185_pp0_iter7_reg;
        trunc_ln15_reg_1185_pp0_iter9_reg <= trunc_ln15_reg_1185_pp0_iter8_reg;
        zext_ln68_reg_1382[52 : 1] <= zext_ln68_fu_1030_p1[52 : 1];
        zext_ln71_reg_1392[31 : 0] <= zext_ln71_fu_1072_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
        ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
        ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
        ap_loop_exit_ready_pp0_iter35_reg <= ap_loop_exit_ready_pp0_iter34_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        dc_reg_1333 <= grp_fu_340_p1;
        gmem_addr_1_read_reg_1253 <= m_axi_gmem_RDATA;
        r_reg_1248 <= r_fu_715_p1;
        tmp_28_reg_1222 <= {{mul_ln21_fu_659_p2[38:22]}};
        tmp_28_reg_1222_pp0_iter10_reg <= tmp_28_reg_1222_pp0_iter9_reg;
        tmp_28_reg_1222_pp0_iter11_reg <= tmp_28_reg_1222_pp0_iter10_reg;
        tmp_28_reg_1222_pp0_iter12_reg <= tmp_28_reg_1222_pp0_iter11_reg;
        tmp_28_reg_1222_pp0_iter13_reg <= tmp_28_reg_1222_pp0_iter12_reg;
        tmp_28_reg_1222_pp0_iter14_reg <= tmp_28_reg_1222_pp0_iter13_reg;
        tmp_28_reg_1222_pp0_iter15_reg <= tmp_28_reg_1222_pp0_iter14_reg;
        tmp_28_reg_1222_pp0_iter16_reg <= tmp_28_reg_1222_pp0_iter15_reg;
        tmp_28_reg_1222_pp0_iter17_reg <= tmp_28_reg_1222_pp0_iter16_reg;
        tmp_28_reg_1222_pp0_iter18_reg <= tmp_28_reg_1222_pp0_iter17_reg;
        tmp_28_reg_1222_pp0_iter19_reg <= tmp_28_reg_1222_pp0_iter18_reg;
        tmp_28_reg_1222_pp0_iter1_reg <= tmp_28_reg_1222;
        tmp_28_reg_1222_pp0_iter20_reg <= tmp_28_reg_1222_pp0_iter19_reg;
        tmp_28_reg_1222_pp0_iter21_reg <= tmp_28_reg_1222_pp0_iter20_reg;
        tmp_28_reg_1222_pp0_iter22_reg <= tmp_28_reg_1222_pp0_iter21_reg;
        tmp_28_reg_1222_pp0_iter23_reg <= tmp_28_reg_1222_pp0_iter22_reg;
        tmp_28_reg_1222_pp0_iter24_reg <= tmp_28_reg_1222_pp0_iter23_reg;
        tmp_28_reg_1222_pp0_iter25_reg <= tmp_28_reg_1222_pp0_iter24_reg;
        tmp_28_reg_1222_pp0_iter26_reg <= tmp_28_reg_1222_pp0_iter25_reg;
        tmp_28_reg_1222_pp0_iter27_reg <= tmp_28_reg_1222_pp0_iter26_reg;
        tmp_28_reg_1222_pp0_iter28_reg <= tmp_28_reg_1222_pp0_iter27_reg;
        tmp_28_reg_1222_pp0_iter29_reg <= tmp_28_reg_1222_pp0_iter28_reg;
        tmp_28_reg_1222_pp0_iter2_reg <= tmp_28_reg_1222_pp0_iter1_reg;
        tmp_28_reg_1222_pp0_iter30_reg <= tmp_28_reg_1222_pp0_iter29_reg;
        tmp_28_reg_1222_pp0_iter31_reg <= tmp_28_reg_1222_pp0_iter30_reg;
        tmp_28_reg_1222_pp0_iter32_reg <= tmp_28_reg_1222_pp0_iter31_reg;
        tmp_28_reg_1222_pp0_iter33_reg <= tmp_28_reg_1222_pp0_iter32_reg;
        tmp_28_reg_1222_pp0_iter34_reg <= tmp_28_reg_1222_pp0_iter33_reg;
        tmp_28_reg_1222_pp0_iter35_reg <= tmp_28_reg_1222_pp0_iter34_reg;
        tmp_28_reg_1222_pp0_iter3_reg <= tmp_28_reg_1222_pp0_iter2_reg;
        tmp_28_reg_1222_pp0_iter4_reg <= tmp_28_reg_1222_pp0_iter3_reg;
        tmp_28_reg_1222_pp0_iter5_reg <= tmp_28_reg_1222_pp0_iter4_reg;
        tmp_28_reg_1222_pp0_iter6_reg <= tmp_28_reg_1222_pp0_iter5_reg;
        tmp_28_reg_1222_pp0_iter7_reg <= tmp_28_reg_1222_pp0_iter6_reg;
        tmp_28_reg_1222_pp0_iter8_reg <= tmp_28_reg_1222_pp0_iter7_reg;
        tmp_28_reg_1222_pp0_iter9_reg <= tmp_28_reg_1222_pp0_iter8_reg;
        trunc_ln15_3_reg_1207 <= trunc_ln15_3_fu_633_p1;
        trunc_ln15_3_reg_1207_pp0_iter10_reg <= trunc_ln15_3_reg_1207_pp0_iter9_reg;
        trunc_ln15_3_reg_1207_pp0_iter11_reg <= trunc_ln15_3_reg_1207_pp0_iter10_reg;
        trunc_ln15_3_reg_1207_pp0_iter12_reg <= trunc_ln15_3_reg_1207_pp0_iter11_reg;
        trunc_ln15_3_reg_1207_pp0_iter13_reg <= trunc_ln15_3_reg_1207_pp0_iter12_reg;
        trunc_ln15_3_reg_1207_pp0_iter14_reg <= trunc_ln15_3_reg_1207_pp0_iter13_reg;
        trunc_ln15_3_reg_1207_pp0_iter15_reg <= trunc_ln15_3_reg_1207_pp0_iter14_reg;
        trunc_ln15_3_reg_1207_pp0_iter16_reg <= trunc_ln15_3_reg_1207_pp0_iter15_reg;
        trunc_ln15_3_reg_1207_pp0_iter17_reg <= trunc_ln15_3_reg_1207_pp0_iter16_reg;
        trunc_ln15_3_reg_1207_pp0_iter18_reg <= trunc_ln15_3_reg_1207_pp0_iter17_reg;
        trunc_ln15_3_reg_1207_pp0_iter19_reg <= trunc_ln15_3_reg_1207_pp0_iter18_reg;
        trunc_ln15_3_reg_1207_pp0_iter1_reg <= trunc_ln15_3_reg_1207;
        trunc_ln15_3_reg_1207_pp0_iter20_reg <= trunc_ln15_3_reg_1207_pp0_iter19_reg;
        trunc_ln15_3_reg_1207_pp0_iter21_reg <= trunc_ln15_3_reg_1207_pp0_iter20_reg;
        trunc_ln15_3_reg_1207_pp0_iter22_reg <= trunc_ln15_3_reg_1207_pp0_iter21_reg;
        trunc_ln15_3_reg_1207_pp0_iter23_reg <= trunc_ln15_3_reg_1207_pp0_iter22_reg;
        trunc_ln15_3_reg_1207_pp0_iter24_reg <= trunc_ln15_3_reg_1207_pp0_iter23_reg;
        trunc_ln15_3_reg_1207_pp0_iter2_reg <= trunc_ln15_3_reg_1207_pp0_iter1_reg;
        trunc_ln15_3_reg_1207_pp0_iter3_reg <= trunc_ln15_3_reg_1207_pp0_iter2_reg;
        trunc_ln15_3_reg_1207_pp0_iter4_reg <= trunc_ln15_3_reg_1207_pp0_iter3_reg;
        trunc_ln15_3_reg_1207_pp0_iter5_reg <= trunc_ln15_3_reg_1207_pp0_iter4_reg;
        trunc_ln15_3_reg_1207_pp0_iter6_reg <= trunc_ln15_3_reg_1207_pp0_iter5_reg;
        trunc_ln15_3_reg_1207_pp0_iter7_reg <= trunc_ln15_3_reg_1207_pp0_iter6_reg;
        trunc_ln15_3_reg_1207_pp0_iter8_reg <= trunc_ln15_3_reg_1207_pp0_iter7_reg;
        trunc_ln15_3_reg_1207_pp0_iter9_reg <= trunc_ln15_3_reg_1207_pp0_iter8_reg;
        trunc_ln15_5_reg_1202 <= {{add_ln15_2_fu_618_p2[63:6]}};
        trunc_ln15_6_reg_1217 <= trunc_ln15_6_fu_652_p1;
        trunc_ln15_6_reg_1217_pp0_iter10_reg <= trunc_ln15_6_reg_1217_pp0_iter9_reg;
        trunc_ln15_6_reg_1217_pp0_iter11_reg <= trunc_ln15_6_reg_1217_pp0_iter10_reg;
        trunc_ln15_6_reg_1217_pp0_iter12_reg <= trunc_ln15_6_reg_1217_pp0_iter11_reg;
        trunc_ln15_6_reg_1217_pp0_iter13_reg <= trunc_ln15_6_reg_1217_pp0_iter12_reg;
        trunc_ln15_6_reg_1217_pp0_iter14_reg <= trunc_ln15_6_reg_1217_pp0_iter13_reg;
        trunc_ln15_6_reg_1217_pp0_iter15_reg <= trunc_ln15_6_reg_1217_pp0_iter14_reg;
        trunc_ln15_6_reg_1217_pp0_iter16_reg <= trunc_ln15_6_reg_1217_pp0_iter15_reg;
        trunc_ln15_6_reg_1217_pp0_iter17_reg <= trunc_ln15_6_reg_1217_pp0_iter16_reg;
        trunc_ln15_6_reg_1217_pp0_iter18_reg <= trunc_ln15_6_reg_1217_pp0_iter17_reg;
        trunc_ln15_6_reg_1217_pp0_iter19_reg <= trunc_ln15_6_reg_1217_pp0_iter18_reg;
        trunc_ln15_6_reg_1217_pp0_iter1_reg <= trunc_ln15_6_reg_1217;
        trunc_ln15_6_reg_1217_pp0_iter20_reg <= trunc_ln15_6_reg_1217_pp0_iter19_reg;
        trunc_ln15_6_reg_1217_pp0_iter21_reg <= trunc_ln15_6_reg_1217_pp0_iter20_reg;
        trunc_ln15_6_reg_1217_pp0_iter22_reg <= trunc_ln15_6_reg_1217_pp0_iter21_reg;
        trunc_ln15_6_reg_1217_pp0_iter23_reg <= trunc_ln15_6_reg_1217_pp0_iter22_reg;
        trunc_ln15_6_reg_1217_pp0_iter24_reg <= trunc_ln15_6_reg_1217_pp0_iter23_reg;
        trunc_ln15_6_reg_1217_pp0_iter2_reg <= trunc_ln15_6_reg_1217_pp0_iter1_reg;
        trunc_ln15_6_reg_1217_pp0_iter3_reg <= trunc_ln15_6_reg_1217_pp0_iter2_reg;
        trunc_ln15_6_reg_1217_pp0_iter4_reg <= trunc_ln15_6_reg_1217_pp0_iter3_reg;
        trunc_ln15_6_reg_1217_pp0_iter5_reg <= trunc_ln15_6_reg_1217_pp0_iter4_reg;
        trunc_ln15_6_reg_1217_pp0_iter6_reg <= trunc_ln15_6_reg_1217_pp0_iter5_reg;
        trunc_ln15_6_reg_1217_pp0_iter7_reg <= trunc_ln15_6_reg_1217_pp0_iter6_reg;
        trunc_ln15_6_reg_1217_pp0_iter8_reg <= trunc_ln15_6_reg_1217_pp0_iter7_reg;
        trunc_ln15_6_reg_1217_pp0_iter9_reg <= trunc_ln15_6_reg_1217_pp0_iter8_reg;
        trunc_ln15_7_reg_1212 <= {{add_ln15_3_fu_637_p2[63:6]}};
        trunc_ln21_reg_1239 <= trunc_ln21_fu_695_p1;
        trunc_ln21_reg_1239_pp0_iter10_reg <= trunc_ln21_reg_1239_pp0_iter9_reg;
        trunc_ln21_reg_1239_pp0_iter11_reg <= trunc_ln21_reg_1239_pp0_iter10_reg;
        trunc_ln21_reg_1239_pp0_iter12_reg <= trunc_ln21_reg_1239_pp0_iter11_reg;
        trunc_ln21_reg_1239_pp0_iter13_reg <= trunc_ln21_reg_1239_pp0_iter12_reg;
        trunc_ln21_reg_1239_pp0_iter14_reg <= trunc_ln21_reg_1239_pp0_iter13_reg;
        trunc_ln21_reg_1239_pp0_iter15_reg <= trunc_ln21_reg_1239_pp0_iter14_reg;
        trunc_ln21_reg_1239_pp0_iter16_reg <= trunc_ln21_reg_1239_pp0_iter15_reg;
        trunc_ln21_reg_1239_pp0_iter17_reg <= trunc_ln21_reg_1239_pp0_iter16_reg;
        trunc_ln21_reg_1239_pp0_iter18_reg <= trunc_ln21_reg_1239_pp0_iter17_reg;
        trunc_ln21_reg_1239_pp0_iter19_reg <= trunc_ln21_reg_1239_pp0_iter18_reg;
        trunc_ln21_reg_1239_pp0_iter20_reg <= trunc_ln21_reg_1239_pp0_iter19_reg;
        trunc_ln21_reg_1239_pp0_iter21_reg <= trunc_ln21_reg_1239_pp0_iter20_reg;
        trunc_ln21_reg_1239_pp0_iter22_reg <= trunc_ln21_reg_1239_pp0_iter21_reg;
        trunc_ln21_reg_1239_pp0_iter23_reg <= trunc_ln21_reg_1239_pp0_iter22_reg;
        trunc_ln21_reg_1239_pp0_iter24_reg <= trunc_ln21_reg_1239_pp0_iter23_reg;
        trunc_ln21_reg_1239_pp0_iter25_reg <= trunc_ln21_reg_1239_pp0_iter24_reg;
        trunc_ln21_reg_1239_pp0_iter26_reg <= trunc_ln21_reg_1239_pp0_iter25_reg;
        trunc_ln21_reg_1239_pp0_iter27_reg <= trunc_ln21_reg_1239_pp0_iter26_reg;
        trunc_ln21_reg_1239_pp0_iter28_reg <= trunc_ln21_reg_1239_pp0_iter27_reg;
        trunc_ln21_reg_1239_pp0_iter29_reg <= trunc_ln21_reg_1239_pp0_iter28_reg;
        trunc_ln21_reg_1239_pp0_iter30_reg <= trunc_ln21_reg_1239_pp0_iter29_reg;
        trunc_ln21_reg_1239_pp0_iter31_reg <= trunc_ln21_reg_1239_pp0_iter30_reg;
        trunc_ln21_reg_1239_pp0_iter32_reg <= trunc_ln21_reg_1239_pp0_iter31_reg;
        trunc_ln21_reg_1239_pp0_iter33_reg <= trunc_ln21_reg_1239_pp0_iter32_reg;
        trunc_ln21_reg_1239_pp0_iter34_reg <= trunc_ln21_reg_1239_pp0_iter33_reg;
        trunc_ln21_reg_1239_pp0_iter35_reg <= trunc_ln21_reg_1239_pp0_iter34_reg;
        trunc_ln21_reg_1239_pp0_iter8_reg <= trunc_ln21_reg_1239;
        trunc_ln21_reg_1239_pp0_iter9_reg <= trunc_ln21_reg_1239_pp0_iter8_reg;
        trunc_ln479_reg_1366 <= trunc_ln479_fu_812_p1;
        xs_exp_reg_1347 <= {{data_1_fu_771_p1[62:52]}};
        xs_sig_reg_1355 <= xs_sig_fu_793_p1;
        xs_sign_reg_1338 <= data_1_fu_771_p1[32'd63];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        conv19_i_reg_1288 <= grp_fu_354_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        conv22_i_reg_1293 <= grp_fu_354_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        conv26_i_reg_1298 <= grp_fu_354_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        g_reg_1258 <= g_fu_735_p1;
        gmem_addr_2_read_reg_1263 <= m_axi_gmem_RDATA;
        gray_reg_1328 <= grp_fu_337_p1;
        trunc_ln505_reg_1377 <= trunc_ln505_fu_1017_p1;
        xs_exp_4_reg_1371 <= {{data_fu_1003_p1[62:52]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        mul20_i_reg_1303 <= grp_fu_347_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter29 == 1'b1))) begin
        mul23_i_reg_1308 <= grp_fu_347_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter29 == 1'b1))) begin
        mul27_i_reg_1313 <= grp_fu_347_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln10_reg_1160 == 1'd1))) begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_loop_exit_ready_pp0_iter35_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) 
    & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) 
    & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0_1to36 = 1'b1;
    end else begin
        ap_idle_pp0_1to36 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln10_reg_1160 == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln10_reg_1160 == 1'd0)))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_337_ce = 1'b1;
    end else begin
        grp_fu_337_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_340_ce = 1'b1;
    end else begin
        grp_fu_340_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_343_ce = 1'b1;
    end else begin
        grp_fu_343_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        grp_fu_343_p0 = add24_i_reg_1318;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter29 == 1'b1))) begin
        grp_fu_343_p0 = mul20_i_reg_1303;
    end else begin
        grp_fu_343_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        grp_fu_343_p1 = mul27_i_reg_1313_pp0_iter31_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter29 == 1'b1))) begin
        grp_fu_343_p1 = mul23_i_reg_1308;
    end else begin
        grp_fu_343_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_347_ce = 1'b1;
    end else begin
        grp_fu_347_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        grp_fu_347_p0 = conv26_i_reg_1298;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        grp_fu_347_p0 = conv22_i_reg_1293;
    end else if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_347_p0 = conv19_i_reg_1288;
    end else begin
        grp_fu_347_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        grp_fu_347_p1 = 64'd4592878986383488713;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        grp_fu_347_p1 = 64'd4603462445507809378;
    end else if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_347_p1 = 64'd4599057925072241033;
    end else begin
        grp_fu_347_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_354_ce = 1'b1;
    end else begin
        grp_fu_354_ce = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter25 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_354_p0 = zext_ln20_2_fu_767_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_354_p0 = zext_ln20_1_fu_763_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_354_p0 = zext_ln20_fu_739_p1;
        end else begin
            grp_fu_354_p0 = 'bx;
        end
    end else begin
        grp_fu_354_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_554_ce = 1'b1;
    end else begin
        grp_fu_554_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        image_gray_1_ce0_local = 1'b1;
    end else begin
        image_gray_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln21_reg_1239_pp0_iter35_reg == 3'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        image_gray_1_we0_local = 1'b1;
    end else begin
        image_gray_1_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        image_gray_2_ce0_local = 1'b1;
    end else begin
        image_gray_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln21_reg_1239_pp0_iter35_reg == 3'd2) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        image_gray_2_we0_local = 1'b1;
    end else begin
        image_gray_2_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        image_gray_3_ce0_local = 1'b1;
    end else begin
        image_gray_3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln21_reg_1239_pp0_iter35_reg == 3'd3) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        image_gray_3_we0_local = 1'b1;
    end else begin
        image_gray_3_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        image_gray_4_ce0_local = 1'b1;
    end else begin
        image_gray_4_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln21_reg_1239_pp0_iter35_reg == 3'd4) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        image_gray_4_we0_local = 1'b1;
    end else begin
        image_gray_4_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        image_gray_5_ce0_local = 1'b1;
    end else begin
        image_gray_5_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln21_reg_1239_pp0_iter35_reg == 3'd0) & ~(trunc_ln21_reg_1239_pp0_iter35_reg == 3'd1) & ~(trunc_ln21_reg_1239_pp0_iter35_reg == 3'd2) & ~(trunc_ln21_reg_1239_pp0_iter35_reg == 3'd3) & ~(trunc_ln21_reg_1239_pp0_iter35_reg == 3'd4) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        image_gray_5_we0_local = 1'b1;
    end else begin
        image_gray_5_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        image_gray_ce0_local = 1'b1;
    end else begin
        image_gray_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln21_reg_1239_pp0_iter35_reg == 3'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        image_gray_we0_local = 1'b1;
    end else begin
        image_gray_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        m_axi_gmem_ARADDR = sext_ln15_2_fu_685_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln10_reg_1160 == 1'd0))) begin
        m_axi_gmem_ARADDR = sext_ln15_1_fu_675_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln10_reg_1160 == 1'd0))) begin
        m_axi_gmem_ARADDR = sext_ln15_fu_608_p1;
    end else begin
        m_axi_gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln10_reg_1160 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln10_reg_1160 == 1'd0)))) begin
        m_axi_gmem_ARVALID = 1'b1;
    end else begin
        m_axi_gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        m_axi_gmem_RREADY = 1'b1;
    end else begin
        m_axi_gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter35 == 1'b1))) begin
        mask_table_ce0_local = 1'b1;
    end else begin
        mask_table_ce0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to36 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln10_1_fu_423_p2 = (i_fu_196 + 9'd1);

assign add_ln10_fu_386_p2 = (indvar_flatten_fu_200 + 19'd1);

assign add_ln13_fu_560_p2 = (select_ln10_1_fu_415_p3 + 10'd1);

assign add_ln15_1_fu_522_p2 = (add_ln15_fu_517_p2 + p_cast39_fu_463_p1);

assign add_ln15_2_fu_618_p2 = (add_ln15_reg_1174 + p_cast40_fu_593_p1);

assign add_ln15_3_fu_637_p2 = (add_ln15_reg_1174 + p_cast41_fu_604_p1);

assign add_ln15_fu_517_p2 = (zext_ln13_fu_509_p1 + image_rgb);

assign add_ln18_fu_542_p2 = (select_ln10_fu_407_p3 + 11'd3);

assign add_ln21_fu_548_p2 = (zext_ln13_1_fu_513_p1 + empty_35_fu_503_p2);

assign add_ln36_fu_848_p2 = (zext_ln28_fu_837_p1 + t_fu_841_p3);

assign add_ln486_fu_1037_p2 = ($signed(zext_ln486_fu_1034_p1) + $signed(12'd3073));

assign and_ln19_1_fu_964_p2 = (icmp_ln18_fu_816_p2 & and_ln19_fu_959_p2);

assign and_ln19_fu_959_p2 = (xs_sign_reg_1338 & or_ln19_fu_953_p2);

assign and_ln24_fu_925_p2 = (xor_ln18_fu_919_p2 & icmp_ln24_fu_821_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b1 == ap_block_state76_pp0_stage0_iter25)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state4_io)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b1 == ap_block_state76_pp0_stage0_iter25)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state4_io)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem_ARREADY == 1'b0)) | ((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b1 == ap_block_state74_pp0_stage1_iter24)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem_ARREADY == 1'b0)) | ((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b1 == ap_block_state74_pp0_stage1_iter24)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b1 == ap_block_state75_pp0_stage2_iter24)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_io)));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b1 == ap_block_state75_pp0_stage2_iter24)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_io)));
end

always @ (*) begin
    ap_block_state3_io = ((icmp_ln10_reg_1160 == 1'd0) & (m_axi_gmem_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state4_io = ((icmp_ln10_reg_1160 == 1'd0) & (m_axi_gmem_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state74_pp0_stage1_iter24 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state75_pp0_stage2_iter24 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state76_pp0_stage0_iter25 = (m_axi_gmem_RVALID == 1'b0);
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage2;

assign ap_ready = ap_ready_sig;

assign b_fu_759_p1 = lshr_ln15_2_fu_754_p2[7:0];

assign data_1_fu_771_p1 = grp_fu_340_p1;

assign data_fu_1003_p1 = dc_1_fu_980_p11;

assign dc_1_fu_980_p10 = {{{and_ln24_fu_925_p2}, {xor_ln24_fu_937_p2}}, {and_ln19_1_fu_964_p2}};

assign dc_1_fu_980_p4 = t_4_fu_905_p4;

assign dc_1_fu_980_p8 = t_3_fu_826_p3;

assign dc_1_fu_980_p9 = 'bx;

assign empty_35_fu_503_p2 = (p_shl_fu_495_p1 + p_shl16_fu_499_p1);

assign empty_fu_457_p2 = (p_shl1_fu_437_p3 - p_shl18_fu_453_p1);

assign g_fu_735_p1 = lshr_ln15_1_fu_730_p2[7:0];

assign grp_fu_554_p0 = (zext_ln13_1_fu_513_p1 + empty_35_fu_503_p2);

assign grp_fu_554_p1 = 19'd6;

assign icmp_ln10_fu_380_p2 = ((indvar_flatten_fu_200 == 19'd307200) ? 1'b1 : 1'b0);

assign icmp_ln13_fu_401_p2 = ((j_fu_188 == 10'd640) ? 1'b1 : 1'b0);

assign icmp_ln18_fu_816_p2 = ((xs_exp_reg_1347 < 11'd1023) ? 1'b1 : 1'b0);

assign icmp_ln19_1_fu_948_p2 = ((xs_exp_reg_1347 != 11'd0) ? 1'b1 : 1'b0);

assign icmp_ln19_fu_943_p2 = ((xs_sig_reg_1355 != 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln24_fu_821_p2 = ((xs_exp_reg_1347 > 11'd1075) ? 1'b1 : 1'b0);

assign image_gray_1_address0 = zext_ln21_fu_1118_p1;

assign image_gray_1_ce0 = image_gray_1_ce0_local;

assign image_gray_1_d0 = val_fu_1106_p3;

assign image_gray_1_we0 = image_gray_1_we0_local;

assign image_gray_2_address0 = zext_ln21_fu_1118_p1;

assign image_gray_2_ce0 = image_gray_2_ce0_local;

assign image_gray_2_d0 = val_fu_1106_p3;

assign image_gray_2_we0 = image_gray_2_we0_local;

assign image_gray_3_address0 = zext_ln21_fu_1118_p1;

assign image_gray_3_ce0 = image_gray_3_ce0_local;

assign image_gray_3_d0 = val_fu_1106_p3;

assign image_gray_3_we0 = image_gray_3_we0_local;

assign image_gray_4_address0 = zext_ln21_fu_1118_p1;

assign image_gray_4_ce0 = image_gray_4_ce0_local;

assign image_gray_4_d0 = val_fu_1106_p3;

assign image_gray_4_we0 = image_gray_4_we0_local;

assign image_gray_5_address0 = zext_ln21_fu_1118_p1;

assign image_gray_5_ce0 = image_gray_5_ce0_local;

assign image_gray_5_d0 = val_fu_1106_p3;

assign image_gray_5_we0 = image_gray_5_we0_local;

assign image_gray_address0 = zext_ln21_fu_1118_p1;

assign image_gray_ce0 = image_gray_ce0_local;

assign image_gray_d0 = val_fu_1106_p3;

assign image_gray_we0 = image_gray_we0_local;

assign index_fu_797_p4 = {{data_1_fu_771_p1[57:52]}};

assign lshr_ln15_1_fu_730_p2 = gmem_addr_1_read_reg_1253 >> zext_ln15_1_fu_726_p1;

assign lshr_ln15_2_fu_754_p2 = gmem_addr_2_read_reg_1263 >> zext_ln15_2_fu_750_p1;

assign lshr_ln15_fu_710_p2 = gmem_addr_read_reg_1243 >> zext_ln15_fu_706_p1;

assign lshr_ln71_fu_1076_p2 = zext_ln68_fu_1030_p1 >> zext_ln71_fu_1072_p1;

assign m_axi_gmem_ARBURST = 2'd0;

assign m_axi_gmem_ARCACHE = 4'd0;

assign m_axi_gmem_ARID = 1'd0;

assign m_axi_gmem_ARLEN = 64'd1;

assign m_axi_gmem_ARLOCK = 2'd0;

assign m_axi_gmem_ARPROT = 3'd0;

assign m_axi_gmem_ARQOS = 4'd0;

assign m_axi_gmem_ARREGION = 4'd0;

assign m_axi_gmem_ARSIZE = 3'd0;

assign m_axi_gmem_ARUSER = 1'd0;

assign m_axi_gmem_AWADDR = 64'd0;

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLEN = 32'd0;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_AWVALID = 1'b0;

assign m_axi_gmem_BREADY = 1'b0;

assign m_axi_gmem_WDATA = 512'd0;

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WSTRB = 64'd0;

assign m_axi_gmem_WUSER = 1'd0;

assign m_axi_gmem_WVALID = 1'b0;

assign mantissa_fu_1021_p4 = {{{{1'd1}, {trunc_ln505_reg_1377}}}, {1'd0}};

assign mask_table_address0 = zext_ln32_fu_807_p1;

assign mul_ln21_fu_659_p0 = mul_ln21_fu_659_p00;

assign mul_ln21_fu_659_p00 = add_ln21_reg_1190;

assign mul_ln21_fu_659_p1 = 39'd699051;

assign or_ln19_fu_953_p2 = (icmp_ln19_fu_943_p2 | icmp_ln19_1_fu_948_p2);

assign or_ln24_fu_931_p2 = (icmp_ln24_fu_821_p2 | icmp_ln18_fu_816_p2);

assign p_cast39_fu_463_p1 = empty_fu_457_p2;

assign p_cast40_fu_593_p1 = tmp_1_fu_586_p3;

assign p_cast41_fu_604_p1 = tmp_3_fu_597_p3;

assign p_shl16_fu_499_p1 = tmp_fu_445_p3;

assign p_shl18_fu_453_p1 = tmp_fu_445_p3;

assign p_shl1_fu_437_p3 = {{select_ln10_2_fu_429_p3}, {11'd0}};

assign p_shl_fu_495_p1 = tmp_24_fu_487_p3;

assign r_fu_715_p1 = lshr_ln15_fu_710_p2[7:0];

assign select_ln10_1_fu_415_p3 = ((icmp_ln13_fu_401_p2[0:0] == 1'b1) ? 10'd0 : j_fu_188);

assign select_ln10_2_fu_429_p3 = ((icmp_ln13_fu_401_p2[0:0] == 1'b1) ? add_ln10_1_fu_423_p2 : i_fu_196);

assign select_ln10_fu_407_p3 = ((icmp_ln13_fu_401_p2[0:0] == 1'b1) ? 11'd0 : jj_fu_192);

assign select_ln71_fu_1060_p3 = ((tmp_27_fu_1043_p3[0:0] == 1'b1) ? sext_ln71_fu_1056_p1 : add_ln486_fu_1037_p2);

assign sext_ln15_1_fu_675_p1 = $signed(trunc_ln15_5_reg_1202);

assign sext_ln15_2_fu_685_p1 = $signed(trunc_ln15_7_reg_1212);

assign sext_ln15_fu_608_p1 = $signed(trunc_ln15_1_reg_1180);

assign sext_ln71_1_fu_1068_p1 = $signed(select_ln71_fu_1060_p3);

assign sext_ln71_fu_1056_p1 = $signed(sub_ln71_fu_1051_p2);

assign shl_ln15_1_fu_719_p3 = {{trunc_ln15_3_reg_1207_pp0_iter24_reg}, {3'd0}};

assign shl_ln15_2_fu_743_p3 = {{trunc_ln15_6_reg_1217_pp0_iter24_reg}, {3'd0}};

assign shl_ln71_fu_1092_p2 = zext_ln68_reg_1382 << zext_ln71_reg_1392;

assign shl_ln_fu_699_p3 = {{trunc_ln15_reg_1185_pp0_iter24_reg}, {3'd0}};

assign sub_ln71_fu_1051_p2 = (11'd1023 - xs_exp_4_reg_1371);

assign t_3_fu_826_p3 = {{xs_sign_reg_1338}, {63'd0}};

assign t_4_fu_905_p4 = {{{xs_sign_2_fu_876_p2}, {xs_exp_2_fu_881_p3}}, {xs_sig_3_fu_899_p2}};

assign t_fu_841_p3 = {{1'd1}, {trunc_ln479_reg_1366}};

assign tmp_1_fu_586_p3 = {{tmp_s_reg_1164}, {1'd1}};

assign tmp_24_fu_487_p3 = {{select_ln10_2_fu_429_p3}, {9'd0}};

assign tmp_27_fu_1043_p3 = add_ln486_fu_1037_p2[32'd11];

assign tmp_3_fu_597_p3 = {{tmp_2_reg_1169}, {2'd2}};

assign tmp_5_fu_1096_p4 = {{shl_ln71_fu_1092_p2[60:53]}};

assign tmp_fu_445_p3 = {{select_ln10_2_fu_429_p3}, {7'd0}};

assign trunc_ln15_3_fu_633_p1 = add_ln15_2_fu_618_p2[5:0];

assign trunc_ln15_6_fu_652_p1 = add_ln15_3_fu_637_p2[5:0];

assign trunc_ln15_fu_538_p1 = add_ln15_1_fu_522_p2[5:0];

assign trunc_ln21_fu_695_p1 = grp_fu_554_p2[2:0];

assign trunc_ln479_fu_812_p1 = data_1_fu_771_p1[62:0];

assign trunc_ln505_fu_1017_p1 = data_fu_1003_p1[51:0];

assign val_fu_1106_p3 = ((tmp_27_reg_1387[0:0] == 1'b1) ? tmp_4_reg_1397 : tmp_5_fu_1096_p4);

assign xor_ln18_fu_919_p2 = (icmp_ln18_fu_816_p2 ^ 1'd1);

assign xor_ln24_fu_937_p2 = (or_ln24_fu_931_p2 ^ 1'd1);

assign xor_ln39_fu_893_p2 = (mask_table_q0 ^ 52'd4503599627370495);

assign xs_exp_1_fu_862_p4 = {{add_ln36_fu_848_p2[62:52]}};

assign xs_exp_2_fu_881_p3 = ((xs_sign_reg_1338[0:0] == 1'b1) ? xs_exp_1_fu_862_p4 : xs_exp_reg_1347);

assign xs_sig_1_fu_872_p1 = add_ln36_fu_848_p2[51:0];

assign xs_sig_2_fu_887_p3 = ((xs_sign_reg_1338[0:0] == 1'b1) ? xs_sig_1_fu_872_p1 : xs_sig_reg_1355);

assign xs_sig_3_fu_899_p2 = (xs_sig_2_fu_887_p3 & xor_ln39_fu_893_p2);

assign xs_sig_fu_793_p1 = data_1_fu_771_p1[51:0];

assign xs_sign_1_fu_854_p3 = add_ln36_fu_848_p2[32'd63];

assign xs_sign_2_fu_876_p2 = (xs_sign_reg_1338 & xs_sign_1_fu_854_p3);

assign zext_ln13_1_fu_513_p1 = select_ln10_1_fu_415_p3;

assign zext_ln13_fu_509_p1 = select_ln10_fu_407_p3;

assign zext_ln15_1_fu_726_p1 = shl_ln15_1_fu_719_p3;

assign zext_ln15_2_fu_750_p1 = shl_ln15_2_fu_743_p3;

assign zext_ln15_fu_706_p1 = shl_ln_fu_699_p3;

assign zext_ln20_1_fu_763_p1 = g_reg_1258;

assign zext_ln20_2_fu_767_p1 = b_reg_1273;

assign zext_ln20_fu_739_p1 = r_reg_1248;

assign zext_ln21_fu_1118_p1 = tmp_28_reg_1222_pp0_iter35_reg;

assign zext_ln28_fu_837_p1 = mask_table_q0;

assign zext_ln32_fu_807_p1 = index_fu_797_p4;

assign zext_ln486_fu_1034_p1 = xs_exp_4_reg_1371;

assign zext_ln68_fu_1030_p1 = mantissa_fu_1021_p4;

assign zext_ln71_fu_1072_p1 = $unsigned(sext_ln71_1_fu_1068_p1);

always @ (posedge ap_clk) begin
    zext_ln68_reg_1382[0] <= 1'b0;
    zext_ln68_reg_1382[112:53] <= 60'b000000000000000000000000000000000000000000000000000000000001;
    zext_ln71_reg_1392[112:32] <= 81'b000000000000000000000000000000000000000000000000000000000000000000000000000000000;
end

endmodule //edgedetect_edgedetect_Pipeline_VITIS_LOOP_10_1_VITIS_LOOP_13_2
