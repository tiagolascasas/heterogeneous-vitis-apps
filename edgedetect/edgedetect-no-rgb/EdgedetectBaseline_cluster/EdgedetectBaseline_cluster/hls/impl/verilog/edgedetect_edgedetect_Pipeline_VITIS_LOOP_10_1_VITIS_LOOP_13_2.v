// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module edgedetect_edgedetect_Pipeline_VITIS_LOOP_10_1_VITIS_LOOP_13_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        sext_ln10,
        image_rgb
);

parameter    ap_ST_fsm_pp0_stage0 = 3'd1;
parameter    ap_ST_fsm_pp0_stage1 = 3'd2;
parameter    ap_ST_fsm_pp0_stage2 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [511:0] m_axi_gmem_WDATA;
output  [63:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [511:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [8:0] m_axi_gmem_RFIFONUM;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
input  [57:0] sext_ln10;
input  [63:0] image_rgb;

reg ap_idle;
reg m_axi_gmem_WVALID;
reg m_axi_gmem_ARVALID;
reg[63:0] m_axi_gmem_ARADDR;
reg m_axi_gmem_RREADY;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage2;
reg   [0:0] icmp_ln10_reg_1107;
reg    ap_block_state3_io;
reg    ap_block_state75_pp0_stage2_iter24;
reg    ap_block_pp0_stage2_subdone;
reg    ap_condition_exit_pp0_iter0_stage2;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [5:0] mask_table_address0;
wire   [51:0] mask_table_q0;
reg    gmem_blk_n_W;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln21_reg_1142;
reg   [0:0] icmp_ln21_reg_1142_pp0_iter36_reg;
reg    gmem_blk_n_AR;
wire    ap_block_pp0_stage2;
reg    gmem_blk_n_R;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg    ap_block_state4_io;
reg    ap_block_state76_pp0_stage0_iter25;
reg    ap_block_state112_io;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln10_fu_325_p2;
reg    ap_block_state74_pp0_stage1_iter24;
reg    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln10_reg_1107_pp0_iter1_reg;
reg   [0:0] icmp_ln10_reg_1107_pp0_iter2_reg;
reg   [0:0] icmp_ln10_reg_1107_pp0_iter3_reg;
reg   [0:0] icmp_ln10_reg_1107_pp0_iter4_reg;
reg   [0:0] icmp_ln10_reg_1107_pp0_iter5_reg;
reg   [0:0] icmp_ln10_reg_1107_pp0_iter6_reg;
reg   [0:0] icmp_ln10_reg_1107_pp0_iter7_reg;
reg   [0:0] icmp_ln10_reg_1107_pp0_iter8_reg;
reg   [0:0] icmp_ln10_reg_1107_pp0_iter9_reg;
reg   [0:0] icmp_ln10_reg_1107_pp0_iter10_reg;
reg   [0:0] icmp_ln10_reg_1107_pp0_iter11_reg;
reg   [0:0] icmp_ln10_reg_1107_pp0_iter12_reg;
reg   [0:0] icmp_ln10_reg_1107_pp0_iter13_reg;
reg   [0:0] icmp_ln10_reg_1107_pp0_iter14_reg;
reg   [0:0] icmp_ln10_reg_1107_pp0_iter15_reg;
reg   [0:0] icmp_ln10_reg_1107_pp0_iter16_reg;
reg   [0:0] icmp_ln10_reg_1107_pp0_iter17_reg;
reg   [0:0] icmp_ln10_reg_1107_pp0_iter18_reg;
reg   [0:0] icmp_ln10_reg_1107_pp0_iter19_reg;
reg   [0:0] icmp_ln10_reg_1107_pp0_iter20_reg;
reg   [0:0] icmp_ln10_reg_1107_pp0_iter21_reg;
reg   [0:0] icmp_ln10_reg_1107_pp0_iter22_reg;
reg   [0:0] icmp_ln10_reg_1107_pp0_iter23_reg;
reg   [0:0] icmp_ln10_reg_1107_pp0_iter24_reg;
reg   [0:0] icmp_ln10_reg_1107_pp0_iter25_reg;
reg   [0:0] icmp_ln10_reg_1107_pp0_iter26_reg;
reg   [0:0] icmp_ln10_reg_1107_pp0_iter27_reg;
reg   [0:0] icmp_ln10_reg_1107_pp0_iter28_reg;
reg   [0:0] icmp_ln10_reg_1107_pp0_iter29_reg;
reg   [0:0] icmp_ln10_reg_1107_pp0_iter30_reg;
reg   [0:0] icmp_ln10_reg_1107_pp0_iter31_reg;
reg   [0:0] icmp_ln10_reg_1107_pp0_iter32_reg;
reg   [0:0] icmp_ln10_reg_1107_pp0_iter33_reg;
reg   [0:0] icmp_ln10_reg_1107_pp0_iter34_reg;
reg   [0:0] icmp_ln10_reg_1107_pp0_iter35_reg;
wire   [0:0] icmp_ln13_fu_346_p2;
reg   [0:0] icmp_ln13_reg_1111;
reg   [0:0] icmp_ln13_reg_1111_pp0_iter1_reg;
reg   [0:0] icmp_ln13_reg_1111_pp0_iter2_reg;
reg   [0:0] icmp_ln13_reg_1111_pp0_iter3_reg;
reg   [0:0] icmp_ln13_reg_1111_pp0_iter4_reg;
reg   [0:0] icmp_ln13_reg_1111_pp0_iter5_reg;
reg   [0:0] icmp_ln13_reg_1111_pp0_iter6_reg;
reg   [0:0] icmp_ln13_reg_1111_pp0_iter7_reg;
reg   [0:0] icmp_ln13_reg_1111_pp0_iter8_reg;
reg   [0:0] icmp_ln13_reg_1111_pp0_iter9_reg;
reg   [0:0] icmp_ln13_reg_1111_pp0_iter10_reg;
reg   [0:0] icmp_ln13_reg_1111_pp0_iter11_reg;
reg   [0:0] icmp_ln13_reg_1111_pp0_iter12_reg;
reg   [0:0] icmp_ln13_reg_1111_pp0_iter13_reg;
reg   [0:0] icmp_ln13_reg_1111_pp0_iter14_reg;
reg   [0:0] icmp_ln13_reg_1111_pp0_iter15_reg;
reg   [0:0] icmp_ln13_reg_1111_pp0_iter16_reg;
reg   [0:0] icmp_ln13_reg_1111_pp0_iter17_reg;
reg   [0:0] icmp_ln13_reg_1111_pp0_iter18_reg;
reg   [0:0] icmp_ln13_reg_1111_pp0_iter19_reg;
reg   [0:0] icmp_ln13_reg_1111_pp0_iter20_reg;
reg   [0:0] icmp_ln13_reg_1111_pp0_iter21_reg;
reg   [0:0] icmp_ln13_reg_1111_pp0_iter22_reg;
reg   [0:0] icmp_ln13_reg_1111_pp0_iter23_reg;
reg   [0:0] icmp_ln13_reg_1111_pp0_iter24_reg;
reg   [0:0] icmp_ln13_reg_1111_pp0_iter25_reg;
reg   [0:0] icmp_ln13_reg_1111_pp0_iter26_reg;
reg   [0:0] icmp_ln13_reg_1111_pp0_iter27_reg;
reg   [0:0] icmp_ln13_reg_1111_pp0_iter28_reg;
reg   [0:0] icmp_ln13_reg_1111_pp0_iter29_reg;
reg   [0:0] icmp_ln13_reg_1111_pp0_iter30_reg;
reg   [0:0] icmp_ln13_reg_1111_pp0_iter31_reg;
reg   [0:0] icmp_ln13_reg_1111_pp0_iter32_reg;
reg   [0:0] icmp_ln13_reg_1111_pp0_iter33_reg;
reg   [0:0] icmp_ln13_reg_1111_pp0_iter34_reg;
reg   [0:0] icmp_ln13_reg_1111_pp0_iter35_reg;
reg   [0:0] icmp_ln13_reg_1111_pp0_iter36_reg;
reg   [18:0] tmp_1_reg_1116;
reg   [17:0] tmp_3_reg_1121;
wire   [63:0] add_ln15_fu_440_p2;
reg   [63:0] add_ln15_reg_1126;
reg   [57:0] trunc_ln15_1_reg_1132;
wire   [5:0] trunc_ln15_fu_461_p1;
reg   [5:0] trunc_ln15_reg_1137;
reg   [5:0] trunc_ln15_reg_1137_pp0_iter1_reg;
reg   [5:0] trunc_ln15_reg_1137_pp0_iter2_reg;
reg   [5:0] trunc_ln15_reg_1137_pp0_iter3_reg;
reg   [5:0] trunc_ln15_reg_1137_pp0_iter4_reg;
reg   [5:0] trunc_ln15_reg_1137_pp0_iter5_reg;
reg   [5:0] trunc_ln15_reg_1137_pp0_iter6_reg;
reg   [5:0] trunc_ln15_reg_1137_pp0_iter7_reg;
reg   [5:0] trunc_ln15_reg_1137_pp0_iter8_reg;
reg   [5:0] trunc_ln15_reg_1137_pp0_iter9_reg;
reg   [5:0] trunc_ln15_reg_1137_pp0_iter10_reg;
reg   [5:0] trunc_ln15_reg_1137_pp0_iter11_reg;
reg   [5:0] trunc_ln15_reg_1137_pp0_iter12_reg;
reg   [5:0] trunc_ln15_reg_1137_pp0_iter13_reg;
reg   [5:0] trunc_ln15_reg_1137_pp0_iter14_reg;
reg   [5:0] trunc_ln15_reg_1137_pp0_iter15_reg;
reg   [5:0] trunc_ln15_reg_1137_pp0_iter16_reg;
reg   [5:0] trunc_ln15_reg_1137_pp0_iter17_reg;
reg   [5:0] trunc_ln15_reg_1137_pp0_iter18_reg;
reg   [5:0] trunc_ln15_reg_1137_pp0_iter19_reg;
reg   [5:0] trunc_ln15_reg_1137_pp0_iter20_reg;
reg   [5:0] trunc_ln15_reg_1137_pp0_iter21_reg;
reg   [5:0] trunc_ln15_reg_1137_pp0_iter22_reg;
reg   [5:0] trunc_ln15_reg_1137_pp0_iter23_reg;
reg   [5:0] trunc_ln15_reg_1137_pp0_iter24_reg;
wire   [0:0] icmp_ln21_fu_471_p2;
reg   [0:0] icmp_ln21_reg_1142_pp0_iter1_reg;
reg   [0:0] icmp_ln21_reg_1142_pp0_iter2_reg;
reg   [0:0] icmp_ln21_reg_1142_pp0_iter3_reg;
reg   [0:0] icmp_ln21_reg_1142_pp0_iter4_reg;
reg   [0:0] icmp_ln21_reg_1142_pp0_iter5_reg;
reg   [0:0] icmp_ln21_reg_1142_pp0_iter6_reg;
reg   [0:0] icmp_ln21_reg_1142_pp0_iter7_reg;
reg   [0:0] icmp_ln21_reg_1142_pp0_iter8_reg;
reg   [0:0] icmp_ln21_reg_1142_pp0_iter9_reg;
reg   [0:0] icmp_ln21_reg_1142_pp0_iter10_reg;
reg   [0:0] icmp_ln21_reg_1142_pp0_iter11_reg;
reg   [0:0] icmp_ln21_reg_1142_pp0_iter12_reg;
reg   [0:0] icmp_ln21_reg_1142_pp0_iter13_reg;
reg   [0:0] icmp_ln21_reg_1142_pp0_iter14_reg;
reg   [0:0] icmp_ln21_reg_1142_pp0_iter15_reg;
reg   [0:0] icmp_ln21_reg_1142_pp0_iter16_reg;
reg   [0:0] icmp_ln21_reg_1142_pp0_iter17_reg;
reg   [0:0] icmp_ln21_reg_1142_pp0_iter18_reg;
reg   [0:0] icmp_ln21_reg_1142_pp0_iter19_reg;
reg   [0:0] icmp_ln21_reg_1142_pp0_iter20_reg;
reg   [0:0] icmp_ln21_reg_1142_pp0_iter21_reg;
reg   [0:0] icmp_ln21_reg_1142_pp0_iter22_reg;
reg   [0:0] icmp_ln21_reg_1142_pp0_iter23_reg;
reg   [0:0] icmp_ln21_reg_1142_pp0_iter24_reg;
reg   [0:0] icmp_ln21_reg_1142_pp0_iter25_reg;
reg   [0:0] icmp_ln21_reg_1142_pp0_iter26_reg;
reg   [0:0] icmp_ln21_reg_1142_pp0_iter27_reg;
reg   [0:0] icmp_ln21_reg_1142_pp0_iter28_reg;
reg   [0:0] icmp_ln21_reg_1142_pp0_iter29_reg;
reg   [0:0] icmp_ln21_reg_1142_pp0_iter30_reg;
reg   [0:0] icmp_ln21_reg_1142_pp0_iter31_reg;
reg   [0:0] icmp_ln21_reg_1142_pp0_iter32_reg;
reg   [0:0] icmp_ln21_reg_1142_pp0_iter33_reg;
reg   [0:0] icmp_ln21_reg_1142_pp0_iter34_reg;
reg   [0:0] icmp_ln21_reg_1142_pp0_iter35_reg;
reg    ap_block_pp0_stage2_11001;
reg   [57:0] trunc_ln15_5_reg_1153;
wire   [5:0] trunc_ln15_3_fu_550_p1;
reg   [5:0] trunc_ln15_3_reg_1158;
reg   [5:0] trunc_ln15_3_reg_1158_pp0_iter1_reg;
reg   [5:0] trunc_ln15_3_reg_1158_pp0_iter2_reg;
reg   [5:0] trunc_ln15_3_reg_1158_pp0_iter3_reg;
reg   [5:0] trunc_ln15_3_reg_1158_pp0_iter4_reg;
reg   [5:0] trunc_ln15_3_reg_1158_pp0_iter5_reg;
reg   [5:0] trunc_ln15_3_reg_1158_pp0_iter6_reg;
reg   [5:0] trunc_ln15_3_reg_1158_pp0_iter7_reg;
reg   [5:0] trunc_ln15_3_reg_1158_pp0_iter8_reg;
reg   [5:0] trunc_ln15_3_reg_1158_pp0_iter9_reg;
reg   [5:0] trunc_ln15_3_reg_1158_pp0_iter10_reg;
reg   [5:0] trunc_ln15_3_reg_1158_pp0_iter11_reg;
reg   [5:0] trunc_ln15_3_reg_1158_pp0_iter12_reg;
reg   [5:0] trunc_ln15_3_reg_1158_pp0_iter13_reg;
reg   [5:0] trunc_ln15_3_reg_1158_pp0_iter14_reg;
reg   [5:0] trunc_ln15_3_reg_1158_pp0_iter15_reg;
reg   [5:0] trunc_ln15_3_reg_1158_pp0_iter16_reg;
reg   [5:0] trunc_ln15_3_reg_1158_pp0_iter17_reg;
reg   [5:0] trunc_ln15_3_reg_1158_pp0_iter18_reg;
reg   [5:0] trunc_ln15_3_reg_1158_pp0_iter19_reg;
reg   [5:0] trunc_ln15_3_reg_1158_pp0_iter20_reg;
reg   [5:0] trunc_ln15_3_reg_1158_pp0_iter21_reg;
reg   [5:0] trunc_ln15_3_reg_1158_pp0_iter22_reg;
reg   [5:0] trunc_ln15_3_reg_1158_pp0_iter23_reg;
reg   [5:0] trunc_ln15_3_reg_1158_pp0_iter24_reg;
reg   [57:0] trunc_ln15_7_reg_1163;
wire   [5:0] trunc_ln15_6_fu_569_p1;
reg   [5:0] trunc_ln15_6_reg_1168;
reg   [5:0] trunc_ln15_6_reg_1168_pp0_iter1_reg;
reg   [5:0] trunc_ln15_6_reg_1168_pp0_iter2_reg;
reg   [5:0] trunc_ln15_6_reg_1168_pp0_iter3_reg;
reg   [5:0] trunc_ln15_6_reg_1168_pp0_iter4_reg;
reg   [5:0] trunc_ln15_6_reg_1168_pp0_iter5_reg;
reg   [5:0] trunc_ln15_6_reg_1168_pp0_iter6_reg;
reg   [5:0] trunc_ln15_6_reg_1168_pp0_iter7_reg;
reg   [5:0] trunc_ln15_6_reg_1168_pp0_iter8_reg;
reg   [5:0] trunc_ln15_6_reg_1168_pp0_iter9_reg;
reg   [5:0] trunc_ln15_6_reg_1168_pp0_iter10_reg;
reg   [5:0] trunc_ln15_6_reg_1168_pp0_iter11_reg;
reg   [5:0] trunc_ln15_6_reg_1168_pp0_iter12_reg;
reg   [5:0] trunc_ln15_6_reg_1168_pp0_iter13_reg;
reg   [5:0] trunc_ln15_6_reg_1168_pp0_iter14_reg;
reg   [5:0] trunc_ln15_6_reg_1168_pp0_iter15_reg;
reg   [5:0] trunc_ln15_6_reg_1168_pp0_iter16_reg;
reg   [5:0] trunc_ln15_6_reg_1168_pp0_iter17_reg;
reg   [5:0] trunc_ln15_6_reg_1168_pp0_iter18_reg;
reg   [5:0] trunc_ln15_6_reg_1168_pp0_iter19_reg;
reg   [5:0] trunc_ln15_6_reg_1168_pp0_iter20_reg;
reg   [5:0] trunc_ln15_6_reg_1168_pp0_iter21_reg;
reg   [5:0] trunc_ln15_6_reg_1168_pp0_iter22_reg;
reg   [5:0] trunc_ln15_6_reg_1168_pp0_iter23_reg;
reg   [5:0] trunc_ln15_6_reg_1168_pp0_iter24_reg;
reg   [511:0] gmem_addr_10_read_reg_1185;
wire   [7:0] r_fu_609_p1;
reg   [7:0] r_reg_1190;
reg   [511:0] gmem_addr_11_read_reg_1195;
wire   [7:0] g_fu_629_p1;
reg   [7:0] g_reg_1200;
reg   [511:0] gmem_addr_12_read_reg_1205;
wire   [31:0] zext_ln20_fu_633_p1;
wire   [7:0] b_fu_653_p1;
reg   [7:0] b_reg_1215;
wire   [31:0] zext_ln20_1_fu_657_p1;
wire   [31:0] zext_ln20_2_fu_661_p1;
wire   [63:0] grp_fu_290_p1;
reg   [63:0] conv19_i_reg_1230;
reg   [63:0] conv22_i_reg_1235;
reg   [63:0] conv26_i_reg_1240;
wire   [63:0] grp_fu_283_p2;
reg   [63:0] mul20_i_reg_1245;
reg   [63:0] mul23_i_reg_1250;
reg   [63:0] mul27_i_reg_1255;
reg   [63:0] mul27_i_reg_1255_pp0_iter30_reg;
reg   [63:0] mul27_i_reg_1255_pp0_iter31_reg;
wire   [63:0] grp_fu_279_p2;
reg   [63:0] add24_i_reg_1260;
reg   [63:0] add28_i_reg_1265;
wire   [31:0] grp_fu_273_p1;
reg   [31:0] gray_reg_1270;
wire   [63:0] grp_fu_276_p1;
reg   [63:0] dc_reg_1275;
reg   [0:0] xs_sign_reg_1280;
reg   [10:0] xs_exp_reg_1289;
wire   [51:0] xs_sig_fu_687_p1;
reg   [51:0] xs_sig_reg_1297;
wire   [62:0] trunc_ln479_fu_706_p1;
reg   [62:0] trunc_ln479_reg_1308;
wire   [63:0] dc_1_fu_874_p11;
reg   [63:0] dc_1_reg_1313;
wire   [112:0] zext_ln68_fu_924_p1;
reg   [112:0] zext_ln68_reg_1318;
wire   [0:0] tmp_8_fu_938_p3;
reg   [0:0] tmp_8_reg_1323;
wire   [112:0] zext_ln71_fu_968_p1;
reg   [112:0] zext_ln71_reg_1328;
reg   [7:0] tmp_9_reg_1333;
wire   [511:0] or_ln_fu_1018_p3;
reg   [511:0] or_ln_reg_1338;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln32_fu_701_p1;
wire  signed [63:0] sext_ln15_fu_525_p1;
wire  signed [63:0] sext_ln15_1_fu_573_p1;
wire  signed [63:0] sext_ln15_2_fu_583_p1;
reg    ap_block_pp0_stage0_01001;
reg   [503:0] phi_ln21_fu_184;
wire   [503:0] select_ln21_fu_1044_p3;
wire    ap_loop_init;
reg   [9:0] j_fu_188;
wire   [9:0] add_ln13_fu_477_p2;
reg   [10:0] jj_fu_192;
wire   [10:0] add_ln18_fu_465_p2;
reg   [8:0] i_fu_196;
wire   [8:0] select_ln10_3_fu_374_p3;
reg   [18:0] indvar_flatten_fu_200;
wire   [18:0] add_ln10_fu_331_p2;
reg    mask_table_ce0_local;
reg   [63:0] grp_fu_279_p0;
reg   [63:0] grp_fu_279_p1;
reg   [63:0] grp_fu_283_p0;
reg   [63:0] grp_fu_283_p1;
reg   [31:0] grp_fu_290_p0;
wire   [8:0] add_ln10_1_fu_368_p2;
wire   [15:0] tmp_fu_390_p3;
wire   [19:0] p_shl_fu_382_p3;
wire   [19:0] p_shl16_fu_398_p1;
wire   [19:0] empty_fu_402_p2;
wire   [10:0] select_ln10_fu_352_p3;
wire   [9:0] select_ln10_1_fu_360_p3;
wire   [63:0] zext_ln13_1_fu_432_p1;
wire   [63:0] p_cast77_fu_408_p1;
wire   [63:0] add_ln15_1_fu_445_p2;
wire   [5:0] trunc_ln13_fu_436_p1;
wire   [19:0] tmp_2_fu_503_p3;
wire   [19:0] tmp_5_fu_514_p3;
wire   [63:0] p_cast78_fu_510_p1;
wire   [63:0] add_ln15_2_fu_535_p2;
wire   [63:0] zext_ln13_fu_521_p1;
wire   [63:0] add_ln15_3_fu_554_p2;
wire   [8:0] shl_ln_fu_593_p3;
wire   [511:0] zext_ln15_fu_600_p1;
wire   [511:0] lshr_ln15_fu_604_p2;
wire   [8:0] shl_ln15_1_fu_613_p3;
wire   [511:0] zext_ln15_1_fu_620_p1;
wire   [511:0] lshr_ln15_1_fu_624_p2;
wire   [8:0] shl_ln15_2_fu_637_p3;
wire   [511:0] zext_ln15_2_fu_644_p1;
wire   [511:0] lshr_ln15_2_fu_648_p2;
wire   [63:0] data_1_fu_665_p1;
wire   [5:0] index_fu_691_p4;
wire   [63:0] t_3_fu_720_p3;
wire   [63:0] zext_ln28_fu_731_p1;
wire   [63:0] t_fu_735_p3;
wire   [63:0] add_ln36_fu_742_p2;
wire   [0:0] xs_sign_1_fu_748_p3;
wire   [10:0] xs_exp_1_fu_756_p4;
wire   [51:0] xs_sig_1_fu_766_p1;
wire   [51:0] xs_sig_2_fu_781_p3;
wire   [51:0] xor_ln39_fu_787_p2;
wire   [0:0] xs_sign_2_fu_770_p2;
wire   [10:0] xs_exp_2_fu_775_p3;
wire   [51:0] xs_sig_3_fu_793_p2;
wire   [63:0] t_4_fu_799_p4;
wire   [0:0] icmp_ln18_fu_710_p2;
wire   [0:0] icmp_ln24_fu_715_p2;
wire   [0:0] xor_ln18_fu_813_p2;
wire   [0:0] or_ln24_fu_825_p2;
wire   [0:0] icmp_ln19_1_fu_842_p2;
wire   [0:0] icmp_ln19_fu_837_p2;
wire   [0:0] or_ln19_fu_847_p2;
wire   [0:0] and_ln19_fu_853_p2;
wire   [0:0] and_ln24_fu_819_p2;
wire   [0:0] xor_ln24_fu_831_p2;
wire   [0:0] and_ln19_1_fu_858_p2;
wire   [63:0] dc_1_fu_874_p4;
wire   [63:0] dc_1_fu_874_p8;
wire   [63:0] dc_1_fu_874_p9;
wire   [2:0] dc_1_fu_874_p10;
wire   [63:0] data_fu_897_p1;
wire   [51:0] trunc_ln505_fu_910_p1;
wire   [53:0] mantissa_fu_914_p4;
wire   [10:0] xs_exp_4_fu_900_p4;
wire   [11:0] zext_ln486_fu_928_p1;
wire   [11:0] add_ln486_fu_932_p2;
wire   [10:0] sub_ln71_fu_946_p2;
wire  signed [11:0] sext_ln71_fu_952_p1;
wire   [11:0] select_ln71_fu_956_p3;
wire  signed [31:0] sext_ln71_1_fu_964_p1;
wire   [112:0] lshr_ln71_fu_972_p2;
wire   [112:0] shl_ln71_fu_998_p2;
wire   [7:0] tmp_s_fu_1002_p4;
wire   [7:0] select_ln71_1_fu_1012_p3;
wire   [503:0] select_ln10_2_fu_991_p3;
wire   [495:0] tmp_4_fu_1026_p4;
wire   [503:0] tmp_6_fu_1036_p3;
reg    grp_fu_273_ce;
reg    grp_fu_276_ce;
reg    grp_fu_279_ce;
reg    grp_fu_283_ce;
reg    grp_fu_290_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter36_stage0;
reg    ap_idle_pp0_0to35;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg    ap_loop_exit_ready_pp0_iter34_reg;
reg    ap_loop_exit_ready_pp0_iter35_reg;
reg    ap_loop_exit_ready_pp0_iter36_reg;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0_1to37;
reg    ap_block_pp0_stage1_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire  signed [2:0] dc_1_fu_874_p1;
wire   [2:0] dc_1_fu_874_p3;
wire   [2:0] dc_1_fu_874_p5;
wire   [2:0] dc_1_fu_874_p7;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 phi_ln21_fu_184 = 504'd0;
#0 j_fu_188 = 10'd0;
#0 jj_fu_192 = 11'd0;
#0 i_fu_196 = 9'd0;
#0 indvar_flatten_fu_200 = 19'd0;
#0 ap_done_reg = 1'b0;
end

edgedetect_edgedetect_Pipeline_VITIS_LOOP_10_1_VITIS_LOOP_13_2_mask_table_ROM_AUTO_1R #(
    .DataWidth( 52 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
mask_table_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mask_table_address0),
    .ce0(mask_table_ce0_local),
    .q0(mask_table_q0)
);

edgedetect_fptrunc_64ns_32_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
fptrunc_64ns_32_2_no_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(add28_i_reg_1265),
    .ce(grp_fu_273_ce),
    .dout(grp_fu_273_p1)
);

edgedetect_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(gray_reg_1270),
    .ce(grp_fu_276_ce),
    .dout(grp_fu_276_p1)
);

edgedetect_dadd_64ns_64ns_64_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_8_full_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_279_p0),
    .din1(grp_fu_279_p1),
    .ce(grp_fu_279_ce),
    .dout(grp_fu_279_p2)
);

edgedetect_dmul_64ns_64ns_64_7_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_7_max_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_283_p0),
    .din1(grp_fu_283_p1),
    .ce(grp_fu_283_ce),
    .dout(grp_fu_283_p2)
);

edgedetect_sitodp_32ns_64_5_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
sitodp_32ns_64_5_no_dsp_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_290_p0),
    .ce(grp_fu_290_ce),
    .dout(grp_fu_290_p1)
);

(* dissolve_hierarchy = "yes" *) edgedetect_sparsemux_9_3_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h4 ),
    .din0_WIDTH( 64 ),
    .CASE1( 3'h2 ),
    .din1_WIDTH( 64 ),
    .CASE2( 3'h1 ),
    .din2_WIDTH( 64 ),
    .CASE3( 3'h0 ),
    .din3_WIDTH( 64 ),
    .def_WIDTH( 64 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 64 ))
sparsemux_9_3_64_1_1_U6(
    .din0(dc_reg_1275),
    .din1(dc_1_fu_874_p4),
    .din2(64'd13830554455654793216),
    .din3(dc_1_fu_874_p8),
    .def(dc_1_fu_874_p9),
    .sel(dc_1_fu_874_p10),
    .dout(dc_1_fu_874_p11)
);

edgedetect_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage2),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter36_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
            ap_enable_reg_pp0_iter37 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter36_stage0) & (ap_idle_pp0_0to35 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter36_stage0) & (ap_idle_pp0_0to35 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter36_stage0) & (ap_idle_pp0_0to35 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter12_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter36_stage0) & (ap_idle_pp0_0to35 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter13_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter36_stage0) & (ap_idle_pp0_0to35 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter14_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter36_stage0) & (ap_idle_pp0_0to35 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter15_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter36_stage0) & (ap_idle_pp0_0to35 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter16_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter36_stage0) & (ap_idle_pp0_0to35 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter17_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter36_stage0) & (ap_idle_pp0_0to35 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter18_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter36_stage0) & (ap_idle_pp0_0to35 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter19_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter36_stage0) & (ap_idle_pp0_0to35 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter36_stage0) & (ap_idle_pp0_0to35 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter20_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter36_stage0) & (ap_idle_pp0_0to35 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter21_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter36_stage0) & (ap_idle_pp0_0to35 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter22_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter36_stage0) & (ap_idle_pp0_0to35 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter23_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter36_stage0) & (ap_idle_pp0_0to35 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter24_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter36_stage0) & (ap_idle_pp0_0to35 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter25_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter36_stage0) & (ap_idle_pp0_0to35 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter26_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter36_stage0) & (ap_idle_pp0_0to35 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter27_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter36_stage0) & (ap_idle_pp0_0to35 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter28_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter36_stage0) & (ap_idle_pp0_0to35 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter29_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter36_stage0) & (ap_idle_pp0_0to35 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter36_stage0) & (ap_idle_pp0_0to35 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter30_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter36_stage0) & (ap_idle_pp0_0to35 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter31_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter36_stage0) & (ap_idle_pp0_0to35 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter32_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter36_stage0) & (ap_idle_pp0_0to35 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter33_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter36_stage0) & (ap_idle_pp0_0to35 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter34_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter36_stage0) & (ap_idle_pp0_0to35 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter35_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter35_reg <= ap_loop_exit_ready_pp0_iter34_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter36_stage0) & (ap_idle_pp0_0to35 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter36_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter36_reg <= ap_loop_exit_ready_pp0_iter35_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter36_stage0) & (ap_idle_pp0_0to35 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter36_stage0) & (ap_idle_pp0_0to35 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter36_stage0) & (ap_idle_pp0_0to35 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter36_stage0) & (ap_idle_pp0_0to35 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter36_stage0) & (ap_idle_pp0_0to35 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter36_stage0) & (ap_idle_pp0_0to35 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter36_stage0) & (ap_idle_pp0_0to35 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_fu_196 <= 9'd0;
    end else if (((icmp_ln10_fu_325_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        i_fu_196 <= select_ln10_3_fu_374_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_fu_200 <= 19'd0;
    end else if (((icmp_ln10_fu_325_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        indvar_flatten_fu_200 <= add_ln10_fu_331_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_fu_188 <= 10'd0;
    end else if (((icmp_ln10_fu_325_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        j_fu_188 <= add_ln13_fu_477_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        jj_fu_192 <= 11'd0;
    end else if (((icmp_ln10_fu_325_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        jj_fu_192 <= add_ln18_fu_465_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        phi_ln21_fu_184 <= 504'd0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        phi_ln21_fu_184 <= select_ln21_fu_1044_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter31 == 1'b1))) begin
        add24_i_reg_1260 <= grp_fu_279_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter34 == 1'b1))) begin
        add28_i_reg_1265 <= grp_fu_279_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln15_reg_1126 <= add_ln15_fu_440_p2;
        b_reg_1215 <= b_fu_653_p1;
        gmem_addr_10_read_reg_1185 <= m_axi_gmem_RDATA;
        icmp_ln10_reg_1107 <= icmp_ln10_fu_325_p2;
        icmp_ln10_reg_1107_pp0_iter10_reg <= icmp_ln10_reg_1107_pp0_iter9_reg;
        icmp_ln10_reg_1107_pp0_iter11_reg <= icmp_ln10_reg_1107_pp0_iter10_reg;
        icmp_ln10_reg_1107_pp0_iter12_reg <= icmp_ln10_reg_1107_pp0_iter11_reg;
        icmp_ln10_reg_1107_pp0_iter13_reg <= icmp_ln10_reg_1107_pp0_iter12_reg;
        icmp_ln10_reg_1107_pp0_iter14_reg <= icmp_ln10_reg_1107_pp0_iter13_reg;
        icmp_ln10_reg_1107_pp0_iter15_reg <= icmp_ln10_reg_1107_pp0_iter14_reg;
        icmp_ln10_reg_1107_pp0_iter16_reg <= icmp_ln10_reg_1107_pp0_iter15_reg;
        icmp_ln10_reg_1107_pp0_iter17_reg <= icmp_ln10_reg_1107_pp0_iter16_reg;
        icmp_ln10_reg_1107_pp0_iter18_reg <= icmp_ln10_reg_1107_pp0_iter17_reg;
        icmp_ln10_reg_1107_pp0_iter19_reg <= icmp_ln10_reg_1107_pp0_iter18_reg;
        icmp_ln10_reg_1107_pp0_iter1_reg <= icmp_ln10_reg_1107;
        icmp_ln10_reg_1107_pp0_iter20_reg <= icmp_ln10_reg_1107_pp0_iter19_reg;
        icmp_ln10_reg_1107_pp0_iter21_reg <= icmp_ln10_reg_1107_pp0_iter20_reg;
        icmp_ln10_reg_1107_pp0_iter22_reg <= icmp_ln10_reg_1107_pp0_iter21_reg;
        icmp_ln10_reg_1107_pp0_iter23_reg <= icmp_ln10_reg_1107_pp0_iter22_reg;
        icmp_ln10_reg_1107_pp0_iter24_reg <= icmp_ln10_reg_1107_pp0_iter23_reg;
        icmp_ln10_reg_1107_pp0_iter25_reg <= icmp_ln10_reg_1107_pp0_iter24_reg;
        icmp_ln10_reg_1107_pp0_iter26_reg <= icmp_ln10_reg_1107_pp0_iter25_reg;
        icmp_ln10_reg_1107_pp0_iter27_reg <= icmp_ln10_reg_1107_pp0_iter26_reg;
        icmp_ln10_reg_1107_pp0_iter28_reg <= icmp_ln10_reg_1107_pp0_iter27_reg;
        icmp_ln10_reg_1107_pp0_iter29_reg <= icmp_ln10_reg_1107_pp0_iter28_reg;
        icmp_ln10_reg_1107_pp0_iter2_reg <= icmp_ln10_reg_1107_pp0_iter1_reg;
        icmp_ln10_reg_1107_pp0_iter30_reg <= icmp_ln10_reg_1107_pp0_iter29_reg;
        icmp_ln10_reg_1107_pp0_iter31_reg <= icmp_ln10_reg_1107_pp0_iter30_reg;
        icmp_ln10_reg_1107_pp0_iter32_reg <= icmp_ln10_reg_1107_pp0_iter31_reg;
        icmp_ln10_reg_1107_pp0_iter33_reg <= icmp_ln10_reg_1107_pp0_iter32_reg;
        icmp_ln10_reg_1107_pp0_iter34_reg <= icmp_ln10_reg_1107_pp0_iter33_reg;
        icmp_ln10_reg_1107_pp0_iter35_reg <= icmp_ln10_reg_1107_pp0_iter34_reg;
        icmp_ln10_reg_1107_pp0_iter3_reg <= icmp_ln10_reg_1107_pp0_iter2_reg;
        icmp_ln10_reg_1107_pp0_iter4_reg <= icmp_ln10_reg_1107_pp0_iter3_reg;
        icmp_ln10_reg_1107_pp0_iter5_reg <= icmp_ln10_reg_1107_pp0_iter4_reg;
        icmp_ln10_reg_1107_pp0_iter6_reg <= icmp_ln10_reg_1107_pp0_iter5_reg;
        icmp_ln10_reg_1107_pp0_iter7_reg <= icmp_ln10_reg_1107_pp0_iter6_reg;
        icmp_ln10_reg_1107_pp0_iter8_reg <= icmp_ln10_reg_1107_pp0_iter7_reg;
        icmp_ln10_reg_1107_pp0_iter9_reg <= icmp_ln10_reg_1107_pp0_iter8_reg;
        icmp_ln13_reg_1111 <= icmp_ln13_fu_346_p2;
        icmp_ln13_reg_1111_pp0_iter10_reg <= icmp_ln13_reg_1111_pp0_iter9_reg;
        icmp_ln13_reg_1111_pp0_iter11_reg <= icmp_ln13_reg_1111_pp0_iter10_reg;
        icmp_ln13_reg_1111_pp0_iter12_reg <= icmp_ln13_reg_1111_pp0_iter11_reg;
        icmp_ln13_reg_1111_pp0_iter13_reg <= icmp_ln13_reg_1111_pp0_iter12_reg;
        icmp_ln13_reg_1111_pp0_iter14_reg <= icmp_ln13_reg_1111_pp0_iter13_reg;
        icmp_ln13_reg_1111_pp0_iter15_reg <= icmp_ln13_reg_1111_pp0_iter14_reg;
        icmp_ln13_reg_1111_pp0_iter16_reg <= icmp_ln13_reg_1111_pp0_iter15_reg;
        icmp_ln13_reg_1111_pp0_iter17_reg <= icmp_ln13_reg_1111_pp0_iter16_reg;
        icmp_ln13_reg_1111_pp0_iter18_reg <= icmp_ln13_reg_1111_pp0_iter17_reg;
        icmp_ln13_reg_1111_pp0_iter19_reg <= icmp_ln13_reg_1111_pp0_iter18_reg;
        icmp_ln13_reg_1111_pp0_iter1_reg <= icmp_ln13_reg_1111;
        icmp_ln13_reg_1111_pp0_iter20_reg <= icmp_ln13_reg_1111_pp0_iter19_reg;
        icmp_ln13_reg_1111_pp0_iter21_reg <= icmp_ln13_reg_1111_pp0_iter20_reg;
        icmp_ln13_reg_1111_pp0_iter22_reg <= icmp_ln13_reg_1111_pp0_iter21_reg;
        icmp_ln13_reg_1111_pp0_iter23_reg <= icmp_ln13_reg_1111_pp0_iter22_reg;
        icmp_ln13_reg_1111_pp0_iter24_reg <= icmp_ln13_reg_1111_pp0_iter23_reg;
        icmp_ln13_reg_1111_pp0_iter25_reg <= icmp_ln13_reg_1111_pp0_iter24_reg;
        icmp_ln13_reg_1111_pp0_iter26_reg <= icmp_ln13_reg_1111_pp0_iter25_reg;
        icmp_ln13_reg_1111_pp0_iter27_reg <= icmp_ln13_reg_1111_pp0_iter26_reg;
        icmp_ln13_reg_1111_pp0_iter28_reg <= icmp_ln13_reg_1111_pp0_iter27_reg;
        icmp_ln13_reg_1111_pp0_iter29_reg <= icmp_ln13_reg_1111_pp0_iter28_reg;
        icmp_ln13_reg_1111_pp0_iter2_reg <= icmp_ln13_reg_1111_pp0_iter1_reg;
        icmp_ln13_reg_1111_pp0_iter30_reg <= icmp_ln13_reg_1111_pp0_iter29_reg;
        icmp_ln13_reg_1111_pp0_iter31_reg <= icmp_ln13_reg_1111_pp0_iter30_reg;
        icmp_ln13_reg_1111_pp0_iter32_reg <= icmp_ln13_reg_1111_pp0_iter31_reg;
        icmp_ln13_reg_1111_pp0_iter33_reg <= icmp_ln13_reg_1111_pp0_iter32_reg;
        icmp_ln13_reg_1111_pp0_iter34_reg <= icmp_ln13_reg_1111_pp0_iter33_reg;
        icmp_ln13_reg_1111_pp0_iter35_reg <= icmp_ln13_reg_1111_pp0_iter34_reg;
        icmp_ln13_reg_1111_pp0_iter36_reg <= icmp_ln13_reg_1111_pp0_iter35_reg;
        icmp_ln13_reg_1111_pp0_iter3_reg <= icmp_ln13_reg_1111_pp0_iter2_reg;
        icmp_ln13_reg_1111_pp0_iter4_reg <= icmp_ln13_reg_1111_pp0_iter3_reg;
        icmp_ln13_reg_1111_pp0_iter5_reg <= icmp_ln13_reg_1111_pp0_iter4_reg;
        icmp_ln13_reg_1111_pp0_iter6_reg <= icmp_ln13_reg_1111_pp0_iter5_reg;
        icmp_ln13_reg_1111_pp0_iter7_reg <= icmp_ln13_reg_1111_pp0_iter6_reg;
        icmp_ln13_reg_1111_pp0_iter8_reg <= icmp_ln13_reg_1111_pp0_iter7_reg;
        icmp_ln13_reg_1111_pp0_iter9_reg <= icmp_ln13_reg_1111_pp0_iter8_reg;
        icmp_ln21_reg_1142 <= icmp_ln21_fu_471_p2;
        icmp_ln21_reg_1142_pp0_iter10_reg <= icmp_ln21_reg_1142_pp0_iter9_reg;
        icmp_ln21_reg_1142_pp0_iter11_reg <= icmp_ln21_reg_1142_pp0_iter10_reg;
        icmp_ln21_reg_1142_pp0_iter12_reg <= icmp_ln21_reg_1142_pp0_iter11_reg;
        icmp_ln21_reg_1142_pp0_iter13_reg <= icmp_ln21_reg_1142_pp0_iter12_reg;
        icmp_ln21_reg_1142_pp0_iter14_reg <= icmp_ln21_reg_1142_pp0_iter13_reg;
        icmp_ln21_reg_1142_pp0_iter15_reg <= icmp_ln21_reg_1142_pp0_iter14_reg;
        icmp_ln21_reg_1142_pp0_iter16_reg <= icmp_ln21_reg_1142_pp0_iter15_reg;
        icmp_ln21_reg_1142_pp0_iter17_reg <= icmp_ln21_reg_1142_pp0_iter16_reg;
        icmp_ln21_reg_1142_pp0_iter18_reg <= icmp_ln21_reg_1142_pp0_iter17_reg;
        icmp_ln21_reg_1142_pp0_iter19_reg <= icmp_ln21_reg_1142_pp0_iter18_reg;
        icmp_ln21_reg_1142_pp0_iter1_reg <= icmp_ln21_reg_1142;
        icmp_ln21_reg_1142_pp0_iter20_reg <= icmp_ln21_reg_1142_pp0_iter19_reg;
        icmp_ln21_reg_1142_pp0_iter21_reg <= icmp_ln21_reg_1142_pp0_iter20_reg;
        icmp_ln21_reg_1142_pp0_iter22_reg <= icmp_ln21_reg_1142_pp0_iter21_reg;
        icmp_ln21_reg_1142_pp0_iter23_reg <= icmp_ln21_reg_1142_pp0_iter22_reg;
        icmp_ln21_reg_1142_pp0_iter24_reg <= icmp_ln21_reg_1142_pp0_iter23_reg;
        icmp_ln21_reg_1142_pp0_iter25_reg <= icmp_ln21_reg_1142_pp0_iter24_reg;
        icmp_ln21_reg_1142_pp0_iter26_reg <= icmp_ln21_reg_1142_pp0_iter25_reg;
        icmp_ln21_reg_1142_pp0_iter27_reg <= icmp_ln21_reg_1142_pp0_iter26_reg;
        icmp_ln21_reg_1142_pp0_iter28_reg <= icmp_ln21_reg_1142_pp0_iter27_reg;
        icmp_ln21_reg_1142_pp0_iter29_reg <= icmp_ln21_reg_1142_pp0_iter28_reg;
        icmp_ln21_reg_1142_pp0_iter2_reg <= icmp_ln21_reg_1142_pp0_iter1_reg;
        icmp_ln21_reg_1142_pp0_iter30_reg <= icmp_ln21_reg_1142_pp0_iter29_reg;
        icmp_ln21_reg_1142_pp0_iter31_reg <= icmp_ln21_reg_1142_pp0_iter30_reg;
        icmp_ln21_reg_1142_pp0_iter32_reg <= icmp_ln21_reg_1142_pp0_iter31_reg;
        icmp_ln21_reg_1142_pp0_iter33_reg <= icmp_ln21_reg_1142_pp0_iter32_reg;
        icmp_ln21_reg_1142_pp0_iter34_reg <= icmp_ln21_reg_1142_pp0_iter33_reg;
        icmp_ln21_reg_1142_pp0_iter35_reg <= icmp_ln21_reg_1142_pp0_iter34_reg;
        icmp_ln21_reg_1142_pp0_iter36_reg <= icmp_ln21_reg_1142_pp0_iter35_reg;
        icmp_ln21_reg_1142_pp0_iter3_reg <= icmp_ln21_reg_1142_pp0_iter2_reg;
        icmp_ln21_reg_1142_pp0_iter4_reg <= icmp_ln21_reg_1142_pp0_iter3_reg;
        icmp_ln21_reg_1142_pp0_iter5_reg <= icmp_ln21_reg_1142_pp0_iter4_reg;
        icmp_ln21_reg_1142_pp0_iter6_reg <= icmp_ln21_reg_1142_pp0_iter5_reg;
        icmp_ln21_reg_1142_pp0_iter7_reg <= icmp_ln21_reg_1142_pp0_iter6_reg;
        icmp_ln21_reg_1142_pp0_iter8_reg <= icmp_ln21_reg_1142_pp0_iter7_reg;
        icmp_ln21_reg_1142_pp0_iter9_reg <= icmp_ln21_reg_1142_pp0_iter8_reg;
        mul27_i_reg_1255_pp0_iter30_reg <= mul27_i_reg_1255;
        mul27_i_reg_1255_pp0_iter31_reg <= mul27_i_reg_1255_pp0_iter30_reg;
        tmp_1_reg_1116 <= {{empty_fu_402_p2[19:1]}};
        tmp_3_reg_1121 <= {{empty_fu_402_p2[19:2]}};
        tmp_8_reg_1323 <= add_ln486_fu_932_p2[32'd11];
        tmp_9_reg_1333 <= {{lshr_ln71_fu_972_p2[60:53]}};
        trunc_ln15_1_reg_1132 <= {{add_ln15_1_fu_445_p2[63:6]}};
        trunc_ln15_reg_1137 <= trunc_ln15_fu_461_p1;
        trunc_ln15_reg_1137_pp0_iter10_reg <= trunc_ln15_reg_1137_pp0_iter9_reg;
        trunc_ln15_reg_1137_pp0_iter11_reg <= trunc_ln15_reg_1137_pp0_iter10_reg;
        trunc_ln15_reg_1137_pp0_iter12_reg <= trunc_ln15_reg_1137_pp0_iter11_reg;
        trunc_ln15_reg_1137_pp0_iter13_reg <= trunc_ln15_reg_1137_pp0_iter12_reg;
        trunc_ln15_reg_1137_pp0_iter14_reg <= trunc_ln15_reg_1137_pp0_iter13_reg;
        trunc_ln15_reg_1137_pp0_iter15_reg <= trunc_ln15_reg_1137_pp0_iter14_reg;
        trunc_ln15_reg_1137_pp0_iter16_reg <= trunc_ln15_reg_1137_pp0_iter15_reg;
        trunc_ln15_reg_1137_pp0_iter17_reg <= trunc_ln15_reg_1137_pp0_iter16_reg;
        trunc_ln15_reg_1137_pp0_iter18_reg <= trunc_ln15_reg_1137_pp0_iter17_reg;
        trunc_ln15_reg_1137_pp0_iter19_reg <= trunc_ln15_reg_1137_pp0_iter18_reg;
        trunc_ln15_reg_1137_pp0_iter1_reg <= trunc_ln15_reg_1137;
        trunc_ln15_reg_1137_pp0_iter20_reg <= trunc_ln15_reg_1137_pp0_iter19_reg;
        trunc_ln15_reg_1137_pp0_iter21_reg <= trunc_ln15_reg_1137_pp0_iter20_reg;
        trunc_ln15_reg_1137_pp0_iter22_reg <= trunc_ln15_reg_1137_pp0_iter21_reg;
        trunc_ln15_reg_1137_pp0_iter23_reg <= trunc_ln15_reg_1137_pp0_iter22_reg;
        trunc_ln15_reg_1137_pp0_iter24_reg <= trunc_ln15_reg_1137_pp0_iter23_reg;
        trunc_ln15_reg_1137_pp0_iter2_reg <= trunc_ln15_reg_1137_pp0_iter1_reg;
        trunc_ln15_reg_1137_pp0_iter3_reg <= trunc_ln15_reg_1137_pp0_iter2_reg;
        trunc_ln15_reg_1137_pp0_iter4_reg <= trunc_ln15_reg_1137_pp0_iter3_reg;
        trunc_ln15_reg_1137_pp0_iter5_reg <= trunc_ln15_reg_1137_pp0_iter4_reg;
        trunc_ln15_reg_1137_pp0_iter6_reg <= trunc_ln15_reg_1137_pp0_iter5_reg;
        trunc_ln15_reg_1137_pp0_iter7_reg <= trunc_ln15_reg_1137_pp0_iter6_reg;
        trunc_ln15_reg_1137_pp0_iter8_reg <= trunc_ln15_reg_1137_pp0_iter7_reg;
        trunc_ln15_reg_1137_pp0_iter9_reg <= trunc_ln15_reg_1137_pp0_iter8_reg;
        zext_ln68_reg_1318[52 : 1] <= zext_ln68_fu_924_p1[52 : 1];
        zext_ln71_reg_1328[31 : 0] <= zext_ln71_fu_968_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        conv19_i_reg_1230 <= grp_fu_290_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        conv22_i_reg_1235 <= grp_fu_290_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        conv26_i_reg_1240 <= grp_fu_290_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dc_1_reg_1313 <= dc_1_fu_874_p11;
        g_reg_1200 <= g_fu_629_p1;
        gmem_addr_12_read_reg_1205 <= m_axi_gmem_RDATA;
        gray_reg_1270 <= grp_fu_273_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        dc_reg_1275 <= grp_fu_276_p1;
        gmem_addr_11_read_reg_1195 <= m_axi_gmem_RDATA;
        or_ln_reg_1338 <= or_ln_fu_1018_p3;
        r_reg_1190 <= r_fu_609_p1;
        trunc_ln15_3_reg_1158 <= trunc_ln15_3_fu_550_p1;
        trunc_ln15_3_reg_1158_pp0_iter10_reg <= trunc_ln15_3_reg_1158_pp0_iter9_reg;
        trunc_ln15_3_reg_1158_pp0_iter11_reg <= trunc_ln15_3_reg_1158_pp0_iter10_reg;
        trunc_ln15_3_reg_1158_pp0_iter12_reg <= trunc_ln15_3_reg_1158_pp0_iter11_reg;
        trunc_ln15_3_reg_1158_pp0_iter13_reg <= trunc_ln15_3_reg_1158_pp0_iter12_reg;
        trunc_ln15_3_reg_1158_pp0_iter14_reg <= trunc_ln15_3_reg_1158_pp0_iter13_reg;
        trunc_ln15_3_reg_1158_pp0_iter15_reg <= trunc_ln15_3_reg_1158_pp0_iter14_reg;
        trunc_ln15_3_reg_1158_pp0_iter16_reg <= trunc_ln15_3_reg_1158_pp0_iter15_reg;
        trunc_ln15_3_reg_1158_pp0_iter17_reg <= trunc_ln15_3_reg_1158_pp0_iter16_reg;
        trunc_ln15_3_reg_1158_pp0_iter18_reg <= trunc_ln15_3_reg_1158_pp0_iter17_reg;
        trunc_ln15_3_reg_1158_pp0_iter19_reg <= trunc_ln15_3_reg_1158_pp0_iter18_reg;
        trunc_ln15_3_reg_1158_pp0_iter1_reg <= trunc_ln15_3_reg_1158;
        trunc_ln15_3_reg_1158_pp0_iter20_reg <= trunc_ln15_3_reg_1158_pp0_iter19_reg;
        trunc_ln15_3_reg_1158_pp0_iter21_reg <= trunc_ln15_3_reg_1158_pp0_iter20_reg;
        trunc_ln15_3_reg_1158_pp0_iter22_reg <= trunc_ln15_3_reg_1158_pp0_iter21_reg;
        trunc_ln15_3_reg_1158_pp0_iter23_reg <= trunc_ln15_3_reg_1158_pp0_iter22_reg;
        trunc_ln15_3_reg_1158_pp0_iter24_reg <= trunc_ln15_3_reg_1158_pp0_iter23_reg;
        trunc_ln15_3_reg_1158_pp0_iter2_reg <= trunc_ln15_3_reg_1158_pp0_iter1_reg;
        trunc_ln15_3_reg_1158_pp0_iter3_reg <= trunc_ln15_3_reg_1158_pp0_iter2_reg;
        trunc_ln15_3_reg_1158_pp0_iter4_reg <= trunc_ln15_3_reg_1158_pp0_iter3_reg;
        trunc_ln15_3_reg_1158_pp0_iter5_reg <= trunc_ln15_3_reg_1158_pp0_iter4_reg;
        trunc_ln15_3_reg_1158_pp0_iter6_reg <= trunc_ln15_3_reg_1158_pp0_iter5_reg;
        trunc_ln15_3_reg_1158_pp0_iter7_reg <= trunc_ln15_3_reg_1158_pp0_iter6_reg;
        trunc_ln15_3_reg_1158_pp0_iter8_reg <= trunc_ln15_3_reg_1158_pp0_iter7_reg;
        trunc_ln15_3_reg_1158_pp0_iter9_reg <= trunc_ln15_3_reg_1158_pp0_iter8_reg;
        trunc_ln15_5_reg_1153 <= {{add_ln15_2_fu_535_p2[63:6]}};
        trunc_ln15_6_reg_1168 <= trunc_ln15_6_fu_569_p1;
        trunc_ln15_6_reg_1168_pp0_iter10_reg <= trunc_ln15_6_reg_1168_pp0_iter9_reg;
        trunc_ln15_6_reg_1168_pp0_iter11_reg <= trunc_ln15_6_reg_1168_pp0_iter10_reg;
        trunc_ln15_6_reg_1168_pp0_iter12_reg <= trunc_ln15_6_reg_1168_pp0_iter11_reg;
        trunc_ln15_6_reg_1168_pp0_iter13_reg <= trunc_ln15_6_reg_1168_pp0_iter12_reg;
        trunc_ln15_6_reg_1168_pp0_iter14_reg <= trunc_ln15_6_reg_1168_pp0_iter13_reg;
        trunc_ln15_6_reg_1168_pp0_iter15_reg <= trunc_ln15_6_reg_1168_pp0_iter14_reg;
        trunc_ln15_6_reg_1168_pp0_iter16_reg <= trunc_ln15_6_reg_1168_pp0_iter15_reg;
        trunc_ln15_6_reg_1168_pp0_iter17_reg <= trunc_ln15_6_reg_1168_pp0_iter16_reg;
        trunc_ln15_6_reg_1168_pp0_iter18_reg <= trunc_ln15_6_reg_1168_pp0_iter17_reg;
        trunc_ln15_6_reg_1168_pp0_iter19_reg <= trunc_ln15_6_reg_1168_pp0_iter18_reg;
        trunc_ln15_6_reg_1168_pp0_iter1_reg <= trunc_ln15_6_reg_1168;
        trunc_ln15_6_reg_1168_pp0_iter20_reg <= trunc_ln15_6_reg_1168_pp0_iter19_reg;
        trunc_ln15_6_reg_1168_pp0_iter21_reg <= trunc_ln15_6_reg_1168_pp0_iter20_reg;
        trunc_ln15_6_reg_1168_pp0_iter22_reg <= trunc_ln15_6_reg_1168_pp0_iter21_reg;
        trunc_ln15_6_reg_1168_pp0_iter23_reg <= trunc_ln15_6_reg_1168_pp0_iter22_reg;
        trunc_ln15_6_reg_1168_pp0_iter24_reg <= trunc_ln15_6_reg_1168_pp0_iter23_reg;
        trunc_ln15_6_reg_1168_pp0_iter2_reg <= trunc_ln15_6_reg_1168_pp0_iter1_reg;
        trunc_ln15_6_reg_1168_pp0_iter3_reg <= trunc_ln15_6_reg_1168_pp0_iter2_reg;
        trunc_ln15_6_reg_1168_pp0_iter4_reg <= trunc_ln15_6_reg_1168_pp0_iter3_reg;
        trunc_ln15_6_reg_1168_pp0_iter5_reg <= trunc_ln15_6_reg_1168_pp0_iter4_reg;
        trunc_ln15_6_reg_1168_pp0_iter6_reg <= trunc_ln15_6_reg_1168_pp0_iter5_reg;
        trunc_ln15_6_reg_1168_pp0_iter7_reg <= trunc_ln15_6_reg_1168_pp0_iter6_reg;
        trunc_ln15_6_reg_1168_pp0_iter8_reg <= trunc_ln15_6_reg_1168_pp0_iter7_reg;
        trunc_ln15_6_reg_1168_pp0_iter9_reg <= trunc_ln15_6_reg_1168_pp0_iter8_reg;
        trunc_ln15_7_reg_1163 <= {{add_ln15_3_fu_554_p2[63:6]}};
        trunc_ln479_reg_1308 <= trunc_ln479_fu_706_p1;
        xs_exp_reg_1289 <= {{data_1_fu_665_p1[62:52]}};
        xs_sig_reg_1297 <= xs_sig_fu_687_p1;
        xs_sign_reg_1280 <= data_1_fu_665_p1[32'd63];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        mul20_i_reg_1245 <= grp_fu_283_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter29 == 1'b1))) begin
        mul23_i_reg_1250 <= grp_fu_283_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter29 == 1'b1))) begin
        mul27_i_reg_1255 <= grp_fu_283_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln10_reg_1107 == 1'd1))) begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln10_reg_1107_pp0_iter35_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        ap_condition_exit_pp0_iter36_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter36_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter36_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) 
    & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) 
    & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0_0to35 = 1'b1;
    end else begin
        ap_idle_pp0_0to35 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) 
    & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0_1to37 = 1'b1;
    end else begin
        ap_idle_pp0_1to37 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln10_reg_1107 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln10_reg_1107 == 1'd0)))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln21_reg_1142_pp0_iter36_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_273_ce = 1'b1;
    end else begin
        grp_fu_273_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_276_ce = 1'b1;
    end else begin
        grp_fu_276_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_279_ce = 1'b1;
    end else begin
        grp_fu_279_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        grp_fu_279_p0 = add24_i_reg_1260;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter29 == 1'b1))) begin
        grp_fu_279_p0 = mul20_i_reg_1245;
    end else begin
        grp_fu_279_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        grp_fu_279_p1 = mul27_i_reg_1255_pp0_iter31_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter29 == 1'b1))) begin
        grp_fu_279_p1 = mul23_i_reg_1250;
    end else begin
        grp_fu_279_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_283_ce = 1'b1;
    end else begin
        grp_fu_283_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        grp_fu_283_p0 = conv26_i_reg_1240;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        grp_fu_283_p0 = conv22_i_reg_1235;
    end else if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_283_p0 = conv19_i_reg_1230;
    end else begin
        grp_fu_283_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        grp_fu_283_p1 = 64'd4592878986383488713;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        grp_fu_283_p1 = 64'd4603462445507809378;
    end else if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_283_p1 = 64'd4599057925072241033;
    end else begin
        grp_fu_283_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_290_ce = 1'b1;
    end else begin
        grp_fu_290_ce = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter25 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_290_p0 = zext_ln20_2_fu_661_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_290_p0 = zext_ln20_1_fu_657_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_290_p0 = zext_ln20_fu_633_p1;
        end else begin
            grp_fu_290_p0 = 'bx;
        end
    end else begin
        grp_fu_290_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        m_axi_gmem_ARADDR = sext_ln15_2_fu_583_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln10_reg_1107 == 1'd0))) begin
        m_axi_gmem_ARADDR = sext_ln15_1_fu_573_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln10_reg_1107 == 1'd0))) begin
        m_axi_gmem_ARADDR = sext_ln15_fu_525_p1;
    end else begin
        m_axi_gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln10_reg_1107 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln10_reg_1107 == 1'd0)))) begin
        m_axi_gmem_ARVALID = 1'b1;
    end else begin
        m_axi_gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        m_axi_gmem_RREADY = 1'b1;
    end else begin
        m_axi_gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln21_reg_1142_pp0_iter36_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        m_axi_gmem_WVALID = 1'b1;
    end else begin
        m_axi_gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter35 == 1'b1))) begin
        mask_table_ce0_local = 1'b1;
    end else begin
        mask_table_ce0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((1'b1 == ap_condition_exit_pp0_iter36_stage0) & (ap_idle_pp0_0to35 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to37 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln10_1_fu_368_p2 = (i_fu_196 + 9'd1);

assign add_ln10_fu_331_p2 = (indvar_flatten_fu_200 + 19'd1);

assign add_ln13_fu_477_p2 = (select_ln10_1_fu_360_p3 + 10'd1);

assign add_ln15_1_fu_445_p2 = (add_ln15_fu_440_p2 + p_cast77_fu_408_p1);

assign add_ln15_2_fu_535_p2 = (add_ln15_reg_1126 + p_cast78_fu_510_p1);

assign add_ln15_3_fu_554_p2 = (add_ln15_reg_1126 + zext_ln13_fu_521_p1);

assign add_ln15_fu_440_p2 = (zext_ln13_1_fu_432_p1 + image_rgb);

assign add_ln18_fu_465_p2 = (select_ln10_fu_352_p3 + 11'd3);

assign add_ln36_fu_742_p2 = (zext_ln28_fu_731_p1 + t_fu_735_p3);

assign add_ln486_fu_932_p2 = ($signed(zext_ln486_fu_928_p1) + $signed(12'd3073));

assign and_ln19_1_fu_858_p2 = (icmp_ln18_fu_710_p2 & and_ln19_fu_853_p2);

assign and_ln19_fu_853_p2 = (xs_sign_reg_1280 & or_ln19_fu_847_p2);

assign and_ln24_fu_819_p2 = (xor_ln18_fu_813_p2 & icmp_ln24_fu_715_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b1 == ap_block_state76_pp0_stage0_iter25));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((1'b1 == ap_block_state112_io) & (ap_enable_reg_pp0_iter37 == 1'b1)) | ((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b1 == ap_block_state76_pp0_stage0_iter25)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state4_io)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((1'b1 == ap_block_state112_io) & (ap_enable_reg_pp0_iter37 == 1'b1)) | ((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b1 == ap_block_state76_pp0_stage0_iter25)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state4_io)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem_ARREADY == 1'b0)) | ((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b1 == ap_block_state74_pp0_stage1_iter24)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem_ARREADY == 1'b0)) | ((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b1 == ap_block_state74_pp0_stage1_iter24)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b1 == ap_block_state75_pp0_stage2_iter24)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_io)));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b1 == ap_block_state75_pp0_stage2_iter24)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_io)));
end

always @ (*) begin
    ap_block_state112_io = ((icmp_ln21_reg_1142_pp0_iter36_reg == 1'd1) & (m_axi_gmem_WREADY == 1'b0));
end

always @ (*) begin
    ap_block_state3_io = ((icmp_ln10_reg_1107 == 1'd0) & (m_axi_gmem_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state4_io = ((icmp_ln10_reg_1107 == 1'd0) & (m_axi_gmem_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state74_pp0_stage1_iter24 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state75_pp0_stage2_iter24 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state76_pp0_stage0_iter25 = (m_axi_gmem_RVALID == 1'b0);
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage2;

assign ap_ready = ap_ready_sig;

assign b_fu_653_p1 = lshr_ln15_2_fu_648_p2[7:0];

assign data_1_fu_665_p1 = grp_fu_276_p1;

assign data_fu_897_p1 = dc_1_reg_1313;

assign dc_1_fu_874_p10 = {{{and_ln24_fu_819_p2}, {xor_ln24_fu_831_p2}}, {and_ln19_1_fu_858_p2}};

assign dc_1_fu_874_p4 = t_4_fu_799_p4;

assign dc_1_fu_874_p8 = t_3_fu_720_p3;

assign dc_1_fu_874_p9 = 'bx;

assign empty_fu_402_p2 = (p_shl_fu_382_p3 - p_shl16_fu_398_p1);

assign g_fu_629_p1 = lshr_ln15_1_fu_624_p2[7:0];

assign icmp_ln10_fu_325_p2 = ((indvar_flatten_fu_200 == 19'd307200) ? 1'b1 : 1'b0);

assign icmp_ln13_fu_346_p2 = ((j_fu_188 == 10'd640) ? 1'b1 : 1'b0);

assign icmp_ln18_fu_710_p2 = ((xs_exp_reg_1289 < 11'd1023) ? 1'b1 : 1'b0);

assign icmp_ln19_1_fu_842_p2 = ((xs_exp_reg_1289 != 11'd0) ? 1'b1 : 1'b0);

assign icmp_ln19_fu_837_p2 = ((xs_sig_reg_1297 != 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln21_fu_471_p2 = ((trunc_ln13_fu_436_p1 == 6'd63) ? 1'b1 : 1'b0);

assign icmp_ln24_fu_715_p2 = ((xs_exp_reg_1289 > 11'd1075) ? 1'b1 : 1'b0);

assign index_fu_691_p4 = {{data_1_fu_665_p1[57:52]}};

assign lshr_ln15_1_fu_624_p2 = gmem_addr_11_read_reg_1195 >> zext_ln15_1_fu_620_p1;

assign lshr_ln15_2_fu_648_p2 = gmem_addr_12_read_reg_1205 >> zext_ln15_2_fu_644_p1;

assign lshr_ln15_fu_604_p2 = gmem_addr_10_read_reg_1185 >> zext_ln15_fu_600_p1;

assign lshr_ln71_fu_972_p2 = zext_ln68_fu_924_p1 >> zext_ln71_fu_968_p1;

assign m_axi_gmem_ARBURST = 2'd0;

assign m_axi_gmem_ARCACHE = 4'd0;

assign m_axi_gmem_ARID = 1'd0;

assign m_axi_gmem_ARLEN = 64'd1;

assign m_axi_gmem_ARLOCK = 2'd0;

assign m_axi_gmem_ARPROT = 3'd0;

assign m_axi_gmem_ARQOS = 4'd0;

assign m_axi_gmem_ARREGION = 4'd0;

assign m_axi_gmem_ARSIZE = 3'd0;

assign m_axi_gmem_ARUSER = 1'd0;

assign m_axi_gmem_AWADDR = 64'd0;

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLEN = 32'd0;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_AWVALID = 1'b0;

assign m_axi_gmem_BREADY = 1'b0;

assign m_axi_gmem_WDATA = or_ln_reg_1338;

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WSTRB = 64'd18446744073709551615;

assign m_axi_gmem_WUSER = 1'd0;

assign mantissa_fu_914_p4 = {{{{1'd1}, {trunc_ln505_fu_910_p1}}}, {1'd0}};

assign mask_table_address0 = zext_ln32_fu_701_p1;

assign or_ln19_fu_847_p2 = (icmp_ln19_fu_837_p2 | icmp_ln19_1_fu_842_p2);

assign or_ln24_fu_825_p2 = (icmp_ln24_fu_715_p2 | icmp_ln18_fu_710_p2);

assign or_ln_fu_1018_p3 = {{select_ln71_1_fu_1012_p3}, {select_ln10_2_fu_991_p3}};

assign p_cast77_fu_408_p1 = empty_fu_402_p2;

assign p_cast78_fu_510_p1 = tmp_2_fu_503_p3;

assign p_shl16_fu_398_p1 = tmp_fu_390_p3;

assign p_shl_fu_382_p3 = {{select_ln10_3_fu_374_p3}, {11'd0}};

assign r_fu_609_p1 = lshr_ln15_fu_604_p2[7:0];

assign select_ln10_1_fu_360_p3 = ((icmp_ln13_fu_346_p2[0:0] == 1'b1) ? 10'd0 : j_fu_188);

assign select_ln10_2_fu_991_p3 = ((icmp_ln13_reg_1111_pp0_iter36_reg[0:0] == 1'b1) ? 504'd0 : phi_ln21_fu_184);

assign select_ln10_3_fu_374_p3 = ((icmp_ln13_fu_346_p2[0:0] == 1'b1) ? add_ln10_1_fu_368_p2 : i_fu_196);

assign select_ln10_fu_352_p3 = ((icmp_ln13_fu_346_p2[0:0] == 1'b1) ? 11'd0 : jj_fu_192);

assign select_ln21_fu_1044_p3 = ((icmp_ln21_reg_1142_pp0_iter36_reg[0:0] == 1'b1) ? 504'd0 : tmp_6_fu_1036_p3);

assign select_ln71_1_fu_1012_p3 = ((tmp_8_reg_1323[0:0] == 1'b1) ? tmp_9_reg_1333 : tmp_s_fu_1002_p4);

assign select_ln71_fu_956_p3 = ((tmp_8_fu_938_p3[0:0] == 1'b1) ? sext_ln71_fu_952_p1 : add_ln486_fu_932_p2);

assign sext_ln15_1_fu_573_p1 = $signed(trunc_ln15_5_reg_1153);

assign sext_ln15_2_fu_583_p1 = $signed(trunc_ln15_7_reg_1163);

assign sext_ln15_fu_525_p1 = $signed(trunc_ln15_1_reg_1132);

assign sext_ln71_1_fu_964_p1 = $signed(select_ln71_fu_956_p3);

assign sext_ln71_fu_952_p1 = $signed(sub_ln71_fu_946_p2);

assign shl_ln15_1_fu_613_p3 = {{trunc_ln15_3_reg_1158_pp0_iter24_reg}, {3'd0}};

assign shl_ln15_2_fu_637_p3 = {{trunc_ln15_6_reg_1168_pp0_iter24_reg}, {3'd0}};

assign shl_ln71_fu_998_p2 = zext_ln68_reg_1318 << zext_ln71_reg_1328;

assign shl_ln_fu_593_p3 = {{trunc_ln15_reg_1137_pp0_iter24_reg}, {3'd0}};

assign sub_ln71_fu_946_p2 = (11'd1023 - xs_exp_4_fu_900_p4);

assign t_3_fu_720_p3 = {{xs_sign_reg_1280}, {63'd0}};

assign t_4_fu_799_p4 = {{{xs_sign_2_fu_770_p2}, {xs_exp_2_fu_775_p3}}, {xs_sig_3_fu_793_p2}};

assign t_fu_735_p3 = {{1'd1}, {trunc_ln479_reg_1308}};

assign tmp_2_fu_503_p3 = {{tmp_1_reg_1116}, {1'd1}};

assign tmp_4_fu_1026_p4 = {{select_ln10_2_fu_991_p3[503:8]}};

assign tmp_5_fu_514_p3 = {{tmp_3_reg_1121}, {2'd2}};

assign tmp_6_fu_1036_p3 = {{select_ln71_1_fu_1012_p3}, {tmp_4_fu_1026_p4}};

assign tmp_8_fu_938_p3 = add_ln486_fu_932_p2[32'd11];

assign tmp_fu_390_p3 = {{select_ln10_3_fu_374_p3}, {7'd0}};

assign tmp_s_fu_1002_p4 = {{shl_ln71_fu_998_p2[60:53]}};

assign trunc_ln13_fu_436_p1 = select_ln10_1_fu_360_p3[5:0];

assign trunc_ln15_3_fu_550_p1 = add_ln15_2_fu_535_p2[5:0];

assign trunc_ln15_6_fu_569_p1 = add_ln15_3_fu_554_p2[5:0];

assign trunc_ln15_fu_461_p1 = add_ln15_1_fu_445_p2[5:0];

assign trunc_ln479_fu_706_p1 = data_1_fu_665_p1[62:0];

assign trunc_ln505_fu_910_p1 = data_fu_897_p1[51:0];

assign xor_ln18_fu_813_p2 = (icmp_ln18_fu_710_p2 ^ 1'd1);

assign xor_ln24_fu_831_p2 = (or_ln24_fu_825_p2 ^ 1'd1);

assign xor_ln39_fu_787_p2 = (mask_table_q0 ^ 52'd4503599627370495);

assign xs_exp_1_fu_756_p4 = {{add_ln36_fu_742_p2[62:52]}};

assign xs_exp_2_fu_775_p3 = ((xs_sign_reg_1280[0:0] == 1'b1) ? xs_exp_1_fu_756_p4 : xs_exp_reg_1289);

assign xs_exp_4_fu_900_p4 = {{data_fu_897_p1[62:52]}};

assign xs_sig_1_fu_766_p1 = add_ln36_fu_742_p2[51:0];

assign xs_sig_2_fu_781_p3 = ((xs_sign_reg_1280[0:0] == 1'b1) ? xs_sig_1_fu_766_p1 : xs_sig_reg_1297);

assign xs_sig_3_fu_793_p2 = (xs_sig_2_fu_781_p3 & xor_ln39_fu_787_p2);

assign xs_sig_fu_687_p1 = data_1_fu_665_p1[51:0];

assign xs_sign_1_fu_748_p3 = add_ln36_fu_742_p2[32'd63];

assign xs_sign_2_fu_770_p2 = (xs_sign_reg_1280 & xs_sign_1_fu_748_p3);

assign zext_ln13_1_fu_432_p1 = select_ln10_fu_352_p3;

assign zext_ln13_fu_521_p1 = tmp_5_fu_514_p3;

assign zext_ln15_1_fu_620_p1 = shl_ln15_1_fu_613_p3;

assign zext_ln15_2_fu_644_p1 = shl_ln15_2_fu_637_p3;

assign zext_ln15_fu_600_p1 = shl_ln_fu_593_p3;

assign zext_ln20_1_fu_657_p1 = g_reg_1200;

assign zext_ln20_2_fu_661_p1 = b_reg_1215;

assign zext_ln20_fu_633_p1 = r_reg_1190;

assign zext_ln28_fu_731_p1 = mask_table_q0;

assign zext_ln32_fu_701_p1 = index_fu_691_p4;

assign zext_ln486_fu_928_p1 = xs_exp_4_fu_900_p4;

assign zext_ln68_fu_924_p1 = mantissa_fu_914_p4;

assign zext_ln71_fu_968_p1 = $unsigned(sext_ln71_1_fu_964_p1);

always @ (posedge ap_clk) begin
    zext_ln68_reg_1318[0] <= 1'b0;
    zext_ln68_reg_1318[112:53] <= 60'b000000000000000000000000000000000000000000000000000000000001;
    zext_ln71_reg_1328[112:32] <= 81'b000000000000000000000000000000000000000000000000000000000000000000000000000000000;
end

endmodule //edgedetect_edgedetect_Pipeline_VITIS_LOOP_10_1_VITIS_LOOP_13_2
