// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="edgedetect_edgedetect,hls_ip_2024_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu9eg-ffvb1156-2-e,HLS_INPUT_CLOCK=6.667000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.866910,HLS_SYN_LAT=921776,HLS_SYN_TPT=none,HLS_SYN_MEM=60,HLS_SYN_DSP=0,HLS_SYN_FF=7454,HLS_SYN_LUT=13520,HLS_VERSION=2024_1}" *)

module edgedetect (
        ap_clk,
        ap_rst_n,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_pp0_stage0 = 3'd1;
parameter    ap_ST_fsm_pp0_stage1 = 3'd2;
parameter    ap_ST_fsm_pp0_stage2 = 3'd4;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 512;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM_WSTRB_WIDTH = (512 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1:0] m_axi_gmem_BUSER;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

(* shreg_extract = "no" *) reg    ap_rst_reg_2;
(* shreg_extract = "no" *) reg    ap_rst_reg_1;
(* shreg_extract = "no" *) reg    ap_rst_n_inv;
wire    ap_start;
wire    ap_done;
wire    ap_continue;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
reg    ap_enable_reg_pp0_iter42;
reg    ap_enable_reg_pp0_iter43;
reg    ap_enable_reg_pp0_iter44;
reg    ap_enable_reg_pp0_iter45;
reg    ap_enable_reg_pp0_iter46;
reg    ap_enable_reg_pp0_iter47;
reg    ap_enable_reg_pp0_iter48;
reg    ap_enable_reg_pp0_iter49;
reg    ap_enable_reg_pp0_iter50;
reg    ap_enable_reg_pp0_iter51;
reg    ap_enable_reg_pp0_iter52;
reg    ap_enable_reg_pp0_iter53;
reg    ap_enable_reg_pp0_iter54;
reg    ap_enable_reg_pp0_iter55;
reg    ap_enable_reg_pp0_iter56;
reg    ap_enable_reg_pp0_iter57;
reg    ap_enable_reg_pp0_iter58;
reg    ap_enable_reg_pp0_iter59;
reg    ap_idle_pp0;
wire    ap_ready;
wire    ap_CS_fsm_pp0_stage2;
reg    gmem_AWVALID;
wire    gmem_AWREADY;
wire   [31:0] gmem_AWLEN;
reg    gmem_WVALID;
wire    gmem_WREADY;
reg    gmem_ARVALID;
wire    gmem_ARREADY;
reg   [63:0] gmem_ARADDR;
wire   [31:0] gmem_ARLEN;
wire    gmem_RVALID;
reg    gmem_RREADY;
wire   [511:0] gmem_RDATA;
wire   [8:0] gmem_RFIFONUM;
wire    gmem_BVALID;
reg    gmem_BREADY;
reg    ap_block_state75_pp0_stage2_iter24;
reg    ap_block_pp0_stage2_subdone;
wire   [0:0] icmp_ln12_fu_638_p2;
reg    ap_condition_exit_pp0_iter0_stage2;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    ap_condition_exit_pp0_iter0_stage2_pp0_iter1_reg;
reg    ap_block_pp0_stage2_11001;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state73_pp0_stage0_iter24;
reg   [0:0] first_iter_0_reg_307;
reg   [0:0] first_iter_0_reg_307_pp0_iter35_reg;
reg    ap_block_state109_io;
reg   [0:0] icmp_ln12_reg_1268;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter58_reg;
reg    ap_block_state178_pp0_stage0_iter59;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_exit_pp0_iter59_stage0;
reg    ap_idle_pp0_0to58;
reg    ap_condition_exit_pp0_iter0_stage2_pp0_iter2_reg;
reg    ap_condition_exit_pp0_iter0_stage2_pp0_iter3_reg;
reg    ap_condition_exit_pp0_iter0_stage2_pp0_iter4_reg;
reg    ap_condition_exit_pp0_iter0_stage2_pp0_iter5_reg;
reg    ap_condition_exit_pp0_iter0_stage2_pp0_iter6_reg;
reg    ap_condition_exit_pp0_iter0_stage2_pp0_iter7_reg;
reg    ap_condition_exit_pp0_iter0_stage2_pp0_iter8_reg;
reg    ap_condition_exit_pp0_iter0_stage2_pp0_iter9_reg;
reg    ap_condition_exit_pp0_iter0_stage2_pp0_iter10_reg;
reg    ap_condition_exit_pp0_iter0_stage2_pp0_iter11_reg;
reg    ap_condition_exit_pp0_iter0_stage2_pp0_iter12_reg;
reg    ap_condition_exit_pp0_iter0_stage2_pp0_iter13_reg;
reg    ap_condition_exit_pp0_iter0_stage2_pp0_iter14_reg;
reg    ap_condition_exit_pp0_iter0_stage2_pp0_iter15_reg;
reg    ap_condition_exit_pp0_iter0_stage2_pp0_iter16_reg;
reg    ap_condition_exit_pp0_iter0_stage2_pp0_iter17_reg;
reg    ap_condition_exit_pp0_iter0_stage2_pp0_iter18_reg;
reg    ap_condition_exit_pp0_iter0_stage2_pp0_iter19_reg;
reg    ap_condition_exit_pp0_iter0_stage2_pp0_iter20_reg;
reg    ap_condition_exit_pp0_iter0_stage2_pp0_iter21_reg;
reg    ap_condition_exit_pp0_iter0_stage2_pp0_iter22_reg;
reg    ap_condition_exit_pp0_iter0_stage2_pp0_iter23_reg;
reg    ap_condition_exit_pp0_iter0_stage2_pp0_iter24_reg;
reg    ap_condition_exit_pp0_iter0_stage2_pp0_iter25_reg;
reg    ap_condition_exit_pp0_iter0_stage2_pp0_iter26_reg;
reg    ap_condition_exit_pp0_iter0_stage2_pp0_iter27_reg;
reg    ap_condition_exit_pp0_iter0_stage2_pp0_iter28_reg;
reg    ap_condition_exit_pp0_iter0_stage2_pp0_iter29_reg;
reg    ap_condition_exit_pp0_iter0_stage2_pp0_iter30_reg;
reg    ap_condition_exit_pp0_iter0_stage2_pp0_iter31_reg;
reg    ap_condition_exit_pp0_iter0_stage2_pp0_iter32_reg;
reg    ap_condition_exit_pp0_iter0_stage2_pp0_iter33_reg;
reg    ap_condition_exit_pp0_iter0_stage2_pp0_iter34_reg;
reg    ap_condition_exit_pp0_iter0_stage2_pp0_iter35_reg;
reg    ap_condition_exit_pp0_iter0_stage2_pp0_iter36_reg;
reg    ap_loop_exit_ready_delayed;
wire   [63:0] input_image;
wire   [63:0] output_image;
wire   [5:0] mask_table_address0;
wire   [51:0] mask_table_q0;
reg    gmem_blk_n_AW;
wire    ap_block_pp0_stage0;
reg    gmem_blk_n_W;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg   [0:0] icmp_ln23_reg_1258;
reg   [0:0] icmp_ln23_reg_1258_pp0_iter35_reg;
reg    gmem_blk_n_B;
reg    gmem_blk_n_AR;
reg    gmem_blk_n_R;
wire    ap_block_pp0_stage2;
reg   [0:0] first_iter_0_reg_307_pp0_iter1_reg;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] first_iter_0_reg_307_pp0_iter2_reg;
reg   [0:0] first_iter_0_reg_307_pp0_iter3_reg;
reg   [0:0] first_iter_0_reg_307_pp0_iter4_reg;
reg   [0:0] first_iter_0_reg_307_pp0_iter5_reg;
reg   [0:0] first_iter_0_reg_307_pp0_iter6_reg;
reg   [0:0] first_iter_0_reg_307_pp0_iter7_reg;
reg   [0:0] first_iter_0_reg_307_pp0_iter8_reg;
reg   [0:0] first_iter_0_reg_307_pp0_iter9_reg;
reg   [0:0] first_iter_0_reg_307_pp0_iter10_reg;
reg   [0:0] first_iter_0_reg_307_pp0_iter11_reg;
reg   [0:0] first_iter_0_reg_307_pp0_iter12_reg;
reg   [0:0] first_iter_0_reg_307_pp0_iter13_reg;
reg   [0:0] first_iter_0_reg_307_pp0_iter14_reg;
reg   [0:0] first_iter_0_reg_307_pp0_iter15_reg;
reg   [0:0] first_iter_0_reg_307_pp0_iter16_reg;
reg   [0:0] first_iter_0_reg_307_pp0_iter17_reg;
reg   [0:0] first_iter_0_reg_307_pp0_iter18_reg;
reg   [0:0] first_iter_0_reg_307_pp0_iter19_reg;
reg   [0:0] first_iter_0_reg_307_pp0_iter20_reg;
reg   [0:0] first_iter_0_reg_307_pp0_iter21_reg;
reg   [0:0] first_iter_0_reg_307_pp0_iter22_reg;
reg   [0:0] first_iter_0_reg_307_pp0_iter23_reg;
reg   [0:0] first_iter_0_reg_307_pp0_iter24_reg;
reg   [0:0] first_iter_0_reg_307_pp0_iter25_reg;
reg   [0:0] first_iter_0_reg_307_pp0_iter26_reg;
reg   [0:0] first_iter_0_reg_307_pp0_iter27_reg;
reg   [0:0] first_iter_0_reg_307_pp0_iter28_reg;
reg   [0:0] first_iter_0_reg_307_pp0_iter29_reg;
reg   [0:0] first_iter_0_reg_307_pp0_iter30_reg;
reg   [0:0] first_iter_0_reg_307_pp0_iter31_reg;
reg   [0:0] first_iter_0_reg_307_pp0_iter32_reg;
reg   [0:0] first_iter_0_reg_307_pp0_iter33_reg;
reg   [0:0] first_iter_0_reg_307_pp0_iter34_reg;
reg   [0:0] icmp_ln157_reg_320;
reg   [0:0] icmp_ln157_reg_320_pp0_iter1_reg;
reg   [0:0] icmp_ln157_reg_320_pp0_iter2_reg;
reg   [0:0] icmp_ln157_reg_320_pp0_iter3_reg;
reg   [0:0] icmp_ln157_reg_320_pp0_iter4_reg;
reg   [0:0] icmp_ln157_reg_320_pp0_iter5_reg;
reg   [0:0] icmp_ln157_reg_320_pp0_iter6_reg;
reg   [0:0] icmp_ln157_reg_320_pp0_iter7_reg;
reg   [0:0] icmp_ln157_reg_320_pp0_iter8_reg;
reg   [0:0] icmp_ln157_reg_320_pp0_iter9_reg;
reg   [0:0] icmp_ln157_reg_320_pp0_iter10_reg;
reg   [0:0] icmp_ln157_reg_320_pp0_iter11_reg;
reg   [0:0] icmp_ln157_reg_320_pp0_iter12_reg;
reg   [0:0] icmp_ln157_reg_320_pp0_iter13_reg;
reg   [0:0] icmp_ln157_reg_320_pp0_iter14_reg;
reg   [0:0] icmp_ln157_reg_320_pp0_iter15_reg;
reg   [0:0] icmp_ln157_reg_320_pp0_iter16_reg;
reg   [0:0] icmp_ln157_reg_320_pp0_iter17_reg;
reg   [0:0] icmp_ln157_reg_320_pp0_iter18_reg;
reg   [0:0] icmp_ln157_reg_320_pp0_iter19_reg;
reg   [0:0] icmp_ln157_reg_320_pp0_iter20_reg;
reg   [0:0] icmp_ln157_reg_320_pp0_iter21_reg;
reg   [0:0] icmp_ln157_reg_320_pp0_iter22_reg;
reg   [0:0] icmp_ln157_reg_320_pp0_iter23_reg;
reg   [0:0] icmp_ln157_reg_320_pp0_iter24_reg;
reg   [0:0] icmp_ln157_reg_320_pp0_iter25_reg;
reg   [0:0] icmp_ln157_reg_320_pp0_iter26_reg;
reg   [0:0] icmp_ln157_reg_320_pp0_iter27_reg;
reg   [0:0] icmp_ln157_reg_320_pp0_iter28_reg;
reg   [0:0] icmp_ln157_reg_320_pp0_iter29_reg;
reg   [0:0] icmp_ln157_reg_320_pp0_iter30_reg;
reg   [0:0] icmp_ln157_reg_320_pp0_iter31_reg;
reg   [0:0] icmp_ln157_reg_320_pp0_iter32_reg;
reg   [0:0] icmp_ln157_reg_320_pp0_iter33_reg;
reg   [0:0] icmp_ln157_reg_320_pp0_iter34_reg;
reg   [0:0] icmp_ln157_reg_320_pp0_iter35_reg;
reg   [63:0] output_image_read_reg_1195;
reg   [63:0] output_image_read_reg_1195_pp0_iter1_reg;
reg   [63:0] output_image_read_reg_1195_pp0_iter2_reg;
reg   [63:0] output_image_read_reg_1195_pp0_iter3_reg;
reg   [63:0] output_image_read_reg_1195_pp0_iter4_reg;
reg   [63:0] output_image_read_reg_1195_pp0_iter5_reg;
reg   [63:0] output_image_read_reg_1195_pp0_iter6_reg;
reg   [63:0] output_image_read_reg_1195_pp0_iter7_reg;
reg   [63:0] output_image_read_reg_1195_pp0_iter8_reg;
reg   [63:0] output_image_read_reg_1195_pp0_iter9_reg;
reg   [63:0] output_image_read_reg_1195_pp0_iter10_reg;
reg   [63:0] output_image_read_reg_1195_pp0_iter11_reg;
reg   [63:0] output_image_read_reg_1195_pp0_iter12_reg;
reg   [63:0] output_image_read_reg_1195_pp0_iter13_reg;
reg   [63:0] output_image_read_reg_1195_pp0_iter14_reg;
reg   [63:0] output_image_read_reg_1195_pp0_iter15_reg;
reg   [63:0] output_image_read_reg_1195_pp0_iter16_reg;
reg   [63:0] output_image_read_reg_1195_pp0_iter17_reg;
reg   [63:0] output_image_read_reg_1195_pp0_iter18_reg;
reg   [63:0] output_image_read_reg_1195_pp0_iter19_reg;
reg   [63:0] output_image_read_reg_1195_pp0_iter20_reg;
reg   [63:0] output_image_read_reg_1195_pp0_iter21_reg;
reg   [63:0] output_image_read_reg_1195_pp0_iter22_reg;
reg   [63:0] output_image_read_reg_1195_pp0_iter23_reg;
reg   [63:0] output_image_read_reg_1195_pp0_iter24_reg;
reg   [63:0] output_image_read_reg_1195_pp0_iter25_reg;
reg   [63:0] output_image_read_reg_1195_pp0_iter26_reg;
reg   [63:0] output_image_read_reg_1195_pp0_iter27_reg;
reg   [63:0] output_image_read_reg_1195_pp0_iter28_reg;
reg   [63:0] output_image_read_reg_1195_pp0_iter29_reg;
reg   [63:0] output_image_read_reg_1195_pp0_iter30_reg;
reg   [63:0] output_image_read_reg_1195_pp0_iter31_reg;
reg   [63:0] output_image_read_reg_1195_pp0_iter32_reg;
reg   [63:0] output_image_read_reg_1195_pp0_iter33_reg;
reg   [63:0] output_image_read_reg_1195_pp0_iter34_reg;
reg   [63:0] output_image_read_reg_1195_pp0_iter35_reg;
reg   [18:0] tmp_1_reg_1200;
reg   [17:0] tmp_3_reg_1205;
wire   [63:0] add_ln17_fu_460_p2;
reg   [63:0] add_ln17_reg_1210;
reg   [57:0] trunc_ln17_1_reg_1216;
wire   [5:0] trunc_ln17_fu_482_p1;
reg   [5:0] trunc_ln17_reg_1221;
reg   [5:0] trunc_ln17_reg_1221_pp0_iter1_reg;
reg   [5:0] trunc_ln17_reg_1221_pp0_iter2_reg;
reg   [5:0] trunc_ln17_reg_1221_pp0_iter3_reg;
reg   [5:0] trunc_ln17_reg_1221_pp0_iter4_reg;
reg   [5:0] trunc_ln17_reg_1221_pp0_iter5_reg;
reg   [5:0] trunc_ln17_reg_1221_pp0_iter6_reg;
reg   [5:0] trunc_ln17_reg_1221_pp0_iter7_reg;
reg   [5:0] trunc_ln17_reg_1221_pp0_iter8_reg;
reg   [5:0] trunc_ln17_reg_1221_pp0_iter9_reg;
reg   [5:0] trunc_ln17_reg_1221_pp0_iter10_reg;
reg   [5:0] trunc_ln17_reg_1221_pp0_iter11_reg;
reg   [5:0] trunc_ln17_reg_1221_pp0_iter12_reg;
reg   [5:0] trunc_ln17_reg_1221_pp0_iter13_reg;
reg   [5:0] trunc_ln17_reg_1221_pp0_iter14_reg;
reg   [5:0] trunc_ln17_reg_1221_pp0_iter15_reg;
reg   [5:0] trunc_ln17_reg_1221_pp0_iter16_reg;
reg   [5:0] trunc_ln17_reg_1221_pp0_iter17_reg;
reg   [5:0] trunc_ln17_reg_1221_pp0_iter18_reg;
reg   [5:0] trunc_ln17_reg_1221_pp0_iter19_reg;
reg   [5:0] trunc_ln17_reg_1221_pp0_iter20_reg;
reg   [5:0] trunc_ln17_reg_1221_pp0_iter21_reg;
reg   [5:0] trunc_ln17_reg_1221_pp0_iter22_reg;
reg   [5:0] trunc_ln17_reg_1221_pp0_iter23_reg;
reg   [5:0] trunc_ln17_reg_1221_pp0_iter24_reg;
reg    ap_block_state74_pp0_stage1_iter24;
reg    ap_block_state110_io;
reg    ap_block_pp0_stage1_11001;
reg   [57:0] trunc_ln17_5_reg_1232;
wire   [5:0] trunc_ln17_3_fu_560_p1;
reg   [5:0] trunc_ln17_3_reg_1237;
reg   [5:0] trunc_ln17_3_reg_1237_pp0_iter1_reg;
reg   [5:0] trunc_ln17_3_reg_1237_pp0_iter2_reg;
reg   [5:0] trunc_ln17_3_reg_1237_pp0_iter3_reg;
reg   [5:0] trunc_ln17_3_reg_1237_pp0_iter4_reg;
reg   [5:0] trunc_ln17_3_reg_1237_pp0_iter5_reg;
reg   [5:0] trunc_ln17_3_reg_1237_pp0_iter6_reg;
reg   [5:0] trunc_ln17_3_reg_1237_pp0_iter7_reg;
reg   [5:0] trunc_ln17_3_reg_1237_pp0_iter8_reg;
reg   [5:0] trunc_ln17_3_reg_1237_pp0_iter9_reg;
reg   [5:0] trunc_ln17_3_reg_1237_pp0_iter10_reg;
reg   [5:0] trunc_ln17_3_reg_1237_pp0_iter11_reg;
reg   [5:0] trunc_ln17_3_reg_1237_pp0_iter12_reg;
reg   [5:0] trunc_ln17_3_reg_1237_pp0_iter13_reg;
reg   [5:0] trunc_ln17_3_reg_1237_pp0_iter14_reg;
reg   [5:0] trunc_ln17_3_reg_1237_pp0_iter15_reg;
reg   [5:0] trunc_ln17_3_reg_1237_pp0_iter16_reg;
reg   [5:0] trunc_ln17_3_reg_1237_pp0_iter17_reg;
reg   [5:0] trunc_ln17_3_reg_1237_pp0_iter18_reg;
reg   [5:0] trunc_ln17_3_reg_1237_pp0_iter19_reg;
reg   [5:0] trunc_ln17_3_reg_1237_pp0_iter20_reg;
reg   [5:0] trunc_ln17_3_reg_1237_pp0_iter21_reg;
reg   [5:0] trunc_ln17_3_reg_1237_pp0_iter22_reg;
reg   [5:0] trunc_ln17_3_reg_1237_pp0_iter23_reg;
reg   [5:0] trunc_ln17_3_reg_1237_pp0_iter24_reg;
reg   [57:0] trunc_ln17_7_reg_1242;
wire   [5:0] trunc_ln17_6_fu_579_p1;
reg   [5:0] trunc_ln17_6_reg_1247;
reg   [5:0] trunc_ln17_6_reg_1247_pp0_iter1_reg;
reg   [5:0] trunc_ln17_6_reg_1247_pp0_iter2_reg;
reg   [5:0] trunc_ln17_6_reg_1247_pp0_iter3_reg;
reg   [5:0] trunc_ln17_6_reg_1247_pp0_iter4_reg;
reg   [5:0] trunc_ln17_6_reg_1247_pp0_iter5_reg;
reg   [5:0] trunc_ln17_6_reg_1247_pp0_iter6_reg;
reg   [5:0] trunc_ln17_6_reg_1247_pp0_iter7_reg;
reg   [5:0] trunc_ln17_6_reg_1247_pp0_iter8_reg;
reg   [5:0] trunc_ln17_6_reg_1247_pp0_iter9_reg;
reg   [5:0] trunc_ln17_6_reg_1247_pp0_iter10_reg;
reg   [5:0] trunc_ln17_6_reg_1247_pp0_iter11_reg;
reg   [5:0] trunc_ln17_6_reg_1247_pp0_iter12_reg;
reg   [5:0] trunc_ln17_6_reg_1247_pp0_iter13_reg;
reg   [5:0] trunc_ln17_6_reg_1247_pp0_iter14_reg;
reg   [5:0] trunc_ln17_6_reg_1247_pp0_iter15_reg;
reg   [5:0] trunc_ln17_6_reg_1247_pp0_iter16_reg;
reg   [5:0] trunc_ln17_6_reg_1247_pp0_iter17_reg;
reg   [5:0] trunc_ln17_6_reg_1247_pp0_iter18_reg;
reg   [5:0] trunc_ln17_6_reg_1247_pp0_iter19_reg;
reg   [5:0] trunc_ln17_6_reg_1247_pp0_iter20_reg;
reg   [5:0] trunc_ln17_6_reg_1247_pp0_iter21_reg;
reg   [5:0] trunc_ln17_6_reg_1247_pp0_iter22_reg;
reg   [5:0] trunc_ln17_6_reg_1247_pp0_iter23_reg;
reg   [5:0] trunc_ln17_6_reg_1247_pp0_iter24_reg;
wire   [0:0] icmp_ln23_fu_611_p2;
reg   [0:0] icmp_ln23_reg_1258_pp0_iter1_reg;
reg   [0:0] icmp_ln23_reg_1258_pp0_iter2_reg;
reg   [0:0] icmp_ln23_reg_1258_pp0_iter3_reg;
reg   [0:0] icmp_ln23_reg_1258_pp0_iter4_reg;
reg   [0:0] icmp_ln23_reg_1258_pp0_iter5_reg;
reg   [0:0] icmp_ln23_reg_1258_pp0_iter6_reg;
reg   [0:0] icmp_ln23_reg_1258_pp0_iter7_reg;
reg   [0:0] icmp_ln23_reg_1258_pp0_iter8_reg;
reg   [0:0] icmp_ln23_reg_1258_pp0_iter9_reg;
reg   [0:0] icmp_ln23_reg_1258_pp0_iter10_reg;
reg   [0:0] icmp_ln23_reg_1258_pp0_iter11_reg;
reg   [0:0] icmp_ln23_reg_1258_pp0_iter12_reg;
reg   [0:0] icmp_ln23_reg_1258_pp0_iter13_reg;
reg   [0:0] icmp_ln23_reg_1258_pp0_iter14_reg;
reg   [0:0] icmp_ln23_reg_1258_pp0_iter15_reg;
reg   [0:0] icmp_ln23_reg_1258_pp0_iter16_reg;
reg   [0:0] icmp_ln23_reg_1258_pp0_iter17_reg;
reg   [0:0] icmp_ln23_reg_1258_pp0_iter18_reg;
reg   [0:0] icmp_ln23_reg_1258_pp0_iter19_reg;
reg   [0:0] icmp_ln23_reg_1258_pp0_iter20_reg;
reg   [0:0] icmp_ln23_reg_1258_pp0_iter21_reg;
reg   [0:0] icmp_ln23_reg_1258_pp0_iter22_reg;
reg   [0:0] icmp_ln23_reg_1258_pp0_iter23_reg;
reg   [0:0] icmp_ln23_reg_1258_pp0_iter24_reg;
reg   [0:0] icmp_ln23_reg_1258_pp0_iter25_reg;
reg   [0:0] icmp_ln23_reg_1258_pp0_iter26_reg;
reg   [0:0] icmp_ln23_reg_1258_pp0_iter27_reg;
reg   [0:0] icmp_ln23_reg_1258_pp0_iter28_reg;
reg   [0:0] icmp_ln23_reg_1258_pp0_iter29_reg;
reg   [0:0] icmp_ln23_reg_1258_pp0_iter30_reg;
reg   [0:0] icmp_ln23_reg_1258_pp0_iter31_reg;
reg   [0:0] icmp_ln23_reg_1258_pp0_iter32_reg;
reg   [0:0] icmp_ln23_reg_1258_pp0_iter33_reg;
reg   [0:0] icmp_ln23_reg_1258_pp0_iter34_reg;
wire   [0:0] icmp_ln15_fu_632_p2;
reg   [0:0] icmp_ln15_reg_1263;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter1_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter2_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter3_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter4_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter5_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter6_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter7_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter8_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter9_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter10_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter11_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter12_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter13_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter14_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter15_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter16_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter17_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter18_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter19_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter20_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter21_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter22_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter23_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter24_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter25_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter26_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter27_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter28_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter29_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter30_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter31_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter32_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter33_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter34_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter35_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter36_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter37_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter38_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter39_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter40_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter41_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter42_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter43_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter44_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter45_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter46_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter47_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter48_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter49_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter50_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter51_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter52_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter53_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter54_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter55_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter56_reg;
reg   [0:0] icmp_ln12_reg_1268_pp0_iter57_reg;
reg   [511:0] gmem_addr_1_read_reg_1278;
wire   [7:0] r_fu_680_p1;
reg   [7:0] r_reg_1283;
reg   [511:0] gmem_addr_2_read_reg_1288;
wire   [7:0] g_fu_700_p1;
reg   [7:0] g_reg_1293;
reg   [511:0] gmem_addr_3_read_reg_1298;
wire   [31:0] zext_ln22_fu_704_p1;
wire   [7:0] b_fu_724_p1;
reg   [7:0] b_reg_1308;
wire   [31:0] zext_ln22_1_fu_728_p1;
wire   [31:0] zext_ln22_2_fu_732_p1;
wire   [63:0] grp_fu_348_p1;
reg   [63:0] conv_reg_1323;
reg   [63:0] conv1_reg_1328;
reg   [63:0] conv2_reg_1333;
wire   [63:0] grp_fu_341_p2;
reg   [63:0] mul_reg_1338;
reg   [63:0] mul1_reg_1343;
reg   [63:0] mul2_reg_1348;
reg   [63:0] mul2_reg_1348_pp0_iter30_reg;
reg   [63:0] mul2_reg_1348_pp0_iter31_reg;
wire   [63:0] grp_fu_337_p2;
reg   [63:0] add_reg_1353;
reg   [63:0] add1_reg_1358;
wire   [31:0] grp_fu_331_p1;
reg   [31:0] gray_reg_1363;
wire   [63:0] grp_fu_334_p1;
reg   [63:0] dc_reg_1368;
reg   [0:0] xs_sign_reg_1373;
reg   [10:0] xs_exp_reg_1382;
wire   [51:0] xs_sig_fu_758_p1;
reg   [51:0] xs_sig_reg_1390;
wire   [62:0] trunc_ln479_fu_777_p1;
reg   [62:0] trunc_ln479_reg_1401;
wire   [63:0] dc_1_fu_945_p11;
reg   [63:0] dc_1_reg_1406;
wire   [511:0] or_ln_fu_1114_p3;
reg   [511:0] or_ln_reg_1417;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_loop_init;
reg   [0:0] ap_phi_mux_icmp_ln157_phi_fu_323_p4;
wire   [63:0] zext_ln32_fu_772_p1;
wire  signed [63:0] sext_ln17_fu_535_p1;
wire  signed [63:0] sext_ln17_1_fu_601_p1;
wire  signed [63:0] sext_ln17_2_fu_654_p1;
wire   [63:0] sext_ln12_fu_977_p1;
reg    ap_block_pp0_stage1_01001;
reg   [18:0] indvar_flatten2_fu_206;
wire   [18:0] add_ln12_1_fu_617_p2;
reg   [8:0] i3_fu_210;
wire   [8:0] i_fu_398_p3;
reg   [8:0] ap_sig_allocacmp_i3_load;
reg   [10:0] jj4_fu_214;
wire   [10:0] jj_fu_486_p2;
reg   [10:0] ap_sig_allocacmp_jj4_load;
reg   [9:0] j5_fu_218;
wire   [9:0] j_fu_626_p2;
reg   [503:0] phi_ln236_fu_222;
wire   [503:0] select_ln23_fu_1140_p3;
reg   [8:0] add_ln128_fu_226;
wire   [8:0] add_ln12_fu_492_p2;
reg   [8:0] ap_sig_allocacmp_add_ln128_load;
reg    mask_table_ce0_local;
reg   [63:0] grp_fu_337_p0;
reg   [63:0] grp_fu_337_p1;
reg   [63:0] grp_fu_341_p0;
reg   [63:0] grp_fu_341_p1;
reg   [31:0] grp_fu_348_p0;
wire   [15:0] tmp_fu_414_p3;
wire   [19:0] p_shl_fu_406_p3;
wire   [19:0] p_shl29_fu_422_p1;
wire   [19:0] empty_22_fu_426_p2;
wire   [10:0] select_ln12_fu_390_p3;
wire   [63:0] zext_ln15_1_fu_456_p1;
wire   [63:0] p_cast_fu_432_p1;
wire   [63:0] add_ln17_1_fu_466_p2;
wire   [19:0] tmp_2_fu_513_p3;
wire   [19:0] tmp_5_fu_524_p3;
wire   [63:0] p_cast5_fu_520_p1;
wire   [63:0] add_ln17_2_fu_545_p2;
wire   [63:0] zext_ln15_fu_531_p1;
wire   [63:0] add_ln17_3_fu_564_p2;
wire   [9:0] select_ln12_1_fu_589_p3;
wire   [5:0] trunc_ln15_fu_597_p1;
wire   [8:0] shl_ln_fu_664_p3;
wire   [511:0] zext_ln17_fu_671_p1;
wire   [511:0] lshr_ln17_fu_675_p2;
wire   [8:0] shl_ln17_1_fu_684_p3;
wire   [511:0] zext_ln17_1_fu_691_p1;
wire   [511:0] lshr_ln17_1_fu_695_p2;
wire   [8:0] shl_ln17_2_fu_708_p3;
wire   [511:0] zext_ln17_2_fu_715_p1;
wire   [511:0] lshr_ln17_2_fu_719_p2;
wire   [63:0] data_1_fu_736_p1;
wire   [5:0] index_fu_762_p4;
wire   [63:0] t_3_fu_791_p3;
wire   [63:0] zext_ln28_fu_802_p1;
wire   [63:0] t_fu_806_p3;
wire   [63:0] add_ln36_fu_813_p2;
wire   [0:0] xs_sign_1_fu_819_p3;
wire   [10:0] xs_exp_1_fu_827_p4;
wire   [51:0] xs_sig_1_fu_837_p1;
wire   [51:0] xs_sig_2_fu_852_p3;
wire   [51:0] xor_ln39_fu_858_p2;
wire   [0:0] xs_sign_2_fu_841_p2;
wire   [10:0] xs_exp_2_fu_846_p3;
wire   [51:0] xs_sig_3_fu_864_p2;
wire   [63:0] t_4_fu_870_p4;
wire   [0:0] icmp_ln18_fu_781_p2;
wire   [0:0] icmp_ln24_fu_786_p2;
wire   [0:0] xor_ln18_fu_884_p2;
wire   [0:0] or_ln24_fu_896_p2;
wire   [0:0] icmp_ln19_1_fu_913_p2;
wire   [0:0] icmp_ln19_fu_908_p2;
wire   [0:0] or_ln19_fu_918_p2;
wire   [0:0] and_ln19_fu_924_p2;
wire   [0:0] and_ln24_fu_890_p2;
wire   [0:0] xor_ln24_fu_902_p2;
wire   [0:0] and_ln19_1_fu_929_p2;
wire   [63:0] dc_1_fu_945_p4;
wire   [63:0] dc_1_fu_945_p8;
wire   [63:0] dc_1_fu_945_p9;
wire   [2:0] dc_1_fu_945_p10;
wire   [57:0] trunc_ln_fu_968_p4;
wire   [63:0] data_fu_999_p1;
wire   [51:0] trunc_ln505_fu_1012_p1;
wire   [53:0] mantissa_fu_1016_p4;
wire   [10:0] xs_exp_4_fu_1002_p4;
wire   [11:0] zext_ln486_fu_1030_p1;
wire   [11:0] add_ln486_fu_1034_p2;
wire   [10:0] sub_ln71_fu_1048_p2;
wire   [0:0] tmp_7_fu_1040_p3;
wire  signed [11:0] sext_ln71_fu_1054_p1;
wire   [11:0] select_ln71_fu_1058_p3;
wire  signed [31:0] sext_ln71_1_fu_1066_p1;
wire   [112:0] zext_ln68_fu_1026_p1;
wire   [112:0] zext_ln71_fu_1070_p1;
wire   [112:0] lshr_ln71_fu_1074_p2;
wire   [112:0] shl_ln71_fu_1080_p2;
wire   [7:0] tmp_9_fu_1086_p4;
wire   [7:0] tmp_s_fu_1096_p4;
wire   [7:0] select_ln71_1_fu_1106_p3;
wire   [503:0] select_ln12_2_fu_991_p3;
wire   [495:0] tmp_4_fu_1122_p4;
wire   [503:0] tmp_6_fu_1132_p3;
reg    grp_fu_331_ce;
reg    grp_fu_334_ce;
reg    grp_fu_337_ce;
reg    grp_fu_341_ce;
reg    grp_fu_348_ce;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg    ap_loop_exit_ready_pp0_iter34_reg;
reg    ap_loop_exit_ready_pp0_iter35_reg;
reg    ap_loop_exit_ready_pp0_iter36_reg;
reg    ap_loop_exit_ready_pp0_iter37_reg;
reg    ap_loop_exit_ready_pp0_iter38_reg;
reg    ap_loop_exit_ready_pp0_iter39_reg;
reg    ap_loop_exit_ready_pp0_iter40_reg;
reg    ap_loop_exit_ready_pp0_iter41_reg;
reg    ap_loop_exit_ready_pp0_iter42_reg;
reg    ap_loop_exit_ready_pp0_iter43_reg;
reg    ap_loop_exit_ready_pp0_iter44_reg;
reg    ap_loop_exit_ready_pp0_iter45_reg;
reg    ap_loop_exit_ready_pp0_iter46_reg;
reg    ap_loop_exit_ready_pp0_iter47_reg;
reg    ap_loop_exit_ready_pp0_iter48_reg;
reg    ap_loop_exit_ready_pp0_iter49_reg;
reg    ap_loop_exit_ready_pp0_iter50_reg;
reg    ap_loop_exit_ready_pp0_iter51_reg;
reg    ap_loop_exit_ready_pp0_iter52_reg;
reg    ap_loop_exit_ready_pp0_iter53_reg;
reg    ap_loop_exit_ready_pp0_iter54_reg;
reg    ap_loop_exit_ready_pp0_iter55_reg;
reg    ap_loop_exit_ready_pp0_iter56_reg;
reg    ap_loop_exit_ready_pp0_iter57_reg;
reg    ap_loop_exit_ready_pp0_iter58_reg;
reg    ap_loop_exit_ready_pp0_iter59_reg;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0_1to59;
reg    ap_block_pp0_stage1_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
reg    ap_condition_1154;
reg    ap_condition_1848;
reg    ap_condition_1852;
reg    ap_condition_1855;
wire  signed [2:0] dc_1_fu_945_p1;
wire   [2:0] dc_1_fu_945_p3;
wire   [2:0] dc_1_fu_945_p5;
wire   [2:0] dc_1_fu_945_p7;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_rst_reg_2 = 1'b1;
#0 ap_rst_reg_1 = 1'b1;
#0 ap_rst_n_inv = 1'b1;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
#0 ap_enable_reg_pp0_iter43 = 1'b0;
#0 ap_enable_reg_pp0_iter44 = 1'b0;
#0 ap_enable_reg_pp0_iter45 = 1'b0;
#0 ap_enable_reg_pp0_iter46 = 1'b0;
#0 ap_enable_reg_pp0_iter47 = 1'b0;
#0 ap_enable_reg_pp0_iter48 = 1'b0;
#0 ap_enable_reg_pp0_iter49 = 1'b0;
#0 ap_enable_reg_pp0_iter50 = 1'b0;
#0 ap_enable_reg_pp0_iter51 = 1'b0;
#0 ap_enable_reg_pp0_iter52 = 1'b0;
#0 ap_enable_reg_pp0_iter53 = 1'b0;
#0 ap_enable_reg_pp0_iter54 = 1'b0;
#0 ap_enable_reg_pp0_iter55 = 1'b0;
#0 ap_enable_reg_pp0_iter56 = 1'b0;
#0 ap_enable_reg_pp0_iter57 = 1'b0;
#0 ap_enable_reg_pp0_iter58 = 1'b0;
#0 ap_enable_reg_pp0_iter59 = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 indvar_flatten2_fu_206 = 19'd0;
#0 i3_fu_210 = 9'd0;
#0 jj4_fu_214 = 11'd0;
#0 j5_fu_218 = 10'd0;
#0 phi_ln236_fu_222 = 504'd0;
#0 add_ln128_fu_226 = 9'd0;
end

edgedetect_mask_table_ROM_AUTO_1R #(
    .DataWidth( 52 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
mask_table_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(mask_table_address0),
    .ce0(mask_table_ce0_local),
    .q0(mask_table_q0)
);

edgedetect_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .input_image(input_image),
    .output_image(output_image),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_continue(ap_continue),
    .ap_idle(ap_idle)
);

edgedetect_gmem_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 70 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ),
    .CH0_USER_RFIFONUM_WIDTH( 9 ),
    .CH0_USER_DW( 512 ),
    .CH0_USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
gmem_m_axi_U(
    .AWVALID(m_axi_gmem_AWVALID),
    .AWREADY(m_axi_gmem_AWREADY),
    .AWADDR(m_axi_gmem_AWADDR),
    .AWID(m_axi_gmem_AWID),
    .AWLEN(m_axi_gmem_AWLEN),
    .AWSIZE(m_axi_gmem_AWSIZE),
    .AWBURST(m_axi_gmem_AWBURST),
    .AWLOCK(m_axi_gmem_AWLOCK),
    .AWCACHE(m_axi_gmem_AWCACHE),
    .AWPROT(m_axi_gmem_AWPROT),
    .AWQOS(m_axi_gmem_AWQOS),
    .AWREGION(m_axi_gmem_AWREGION),
    .AWUSER(m_axi_gmem_AWUSER),
    .WVALID(m_axi_gmem_WVALID),
    .WREADY(m_axi_gmem_WREADY),
    .WDATA(m_axi_gmem_WDATA),
    .WSTRB(m_axi_gmem_WSTRB),
    .WLAST(m_axi_gmem_WLAST),
    .WID(m_axi_gmem_WID),
    .WUSER(m_axi_gmem_WUSER),
    .ARVALID(m_axi_gmem_ARVALID),
    .ARREADY(m_axi_gmem_ARREADY),
    .ARADDR(m_axi_gmem_ARADDR),
    .ARID(m_axi_gmem_ARID),
    .ARLEN(m_axi_gmem_ARLEN),
    .ARSIZE(m_axi_gmem_ARSIZE),
    .ARBURST(m_axi_gmem_ARBURST),
    .ARLOCK(m_axi_gmem_ARLOCK),
    .ARCACHE(m_axi_gmem_ARCACHE),
    .ARPROT(m_axi_gmem_ARPROT),
    .ARQOS(m_axi_gmem_ARQOS),
    .ARREGION(m_axi_gmem_ARREGION),
    .ARUSER(m_axi_gmem_ARUSER),
    .RVALID(m_axi_gmem_RVALID),
    .RREADY(m_axi_gmem_RREADY),
    .RDATA(m_axi_gmem_RDATA),
    .RLAST(m_axi_gmem_RLAST),
    .RID(m_axi_gmem_RID),
    .RUSER(m_axi_gmem_RUSER),
    .RRESP(m_axi_gmem_RRESP),
    .BVALID(m_axi_gmem_BVALID),
    .BREADY(m_axi_gmem_BREADY),
    .BRESP(m_axi_gmem_BRESP),
    .BID(m_axi_gmem_BID),
    .BUSER(m_axi_gmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_CH0_ARVALID(gmem_ARVALID),
    .I_CH0_ARREADY(gmem_ARREADY),
    .I_CH0_ARADDR(gmem_ARADDR),
    .I_CH0_ARLEN(gmem_ARLEN),
    .I_CH0_RVALID(gmem_RVALID),
    .I_CH0_RREADY(gmem_RREADY),
    .I_CH0_RDATA(gmem_RDATA),
    .I_CH0_RFIFONUM(gmem_RFIFONUM),
    .I_CH0_AWVALID(gmem_AWVALID),
    .I_CH0_AWREADY(gmem_AWREADY),
    .I_CH0_AWADDR(sext_ln12_fu_977_p1),
    .I_CH0_AWLEN(gmem_AWLEN),
    .I_CH0_WVALID(gmem_WVALID),
    .I_CH0_WREADY(gmem_WREADY),
    .I_CH0_WDATA(or_ln_reg_1417),
    .I_CH0_WSTRB(64'd18446744073709551615),
    .I_CH0_BVALID(gmem_BVALID),
    .I_CH0_BREADY(gmem_BREADY)
);

edgedetect_fptrunc_64ns_32_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
fptrunc_64ns_32_2_no_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(add1_reg_1358),
    .ce(grp_fu_331_ce),
    .dout(grp_fu_331_p1)
);

edgedetect_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(gray_reg_1363),
    .ce(grp_fu_334_ce),
    .dout(grp_fu_334_p1)
);

edgedetect_dadd_64ns_64ns_64_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_8_full_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_337_p0),
    .din1(grp_fu_337_p1),
    .ce(grp_fu_337_ce),
    .dout(grp_fu_337_p2)
);

edgedetect_dmul_64ns_64ns_64_7_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_7_max_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_341_p0),
    .din1(grp_fu_341_p1),
    .ce(grp_fu_341_ce),
    .dout(grp_fu_341_p2)
);

edgedetect_sitodp_32ns_64_5_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
sitodp_32ns_64_5_no_dsp_1_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_348_p0),
    .ce(grp_fu_348_ce),
    .dout(grp_fu_348_p1)
);

(* dissolve_hierarchy = "yes" *) edgedetect_sparsemux_9_3_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h4 ),
    .din0_WIDTH( 64 ),
    .CASE1( 3'h2 ),
    .din1_WIDTH( 64 ),
    .CASE2( 3'h1 ),
    .din2_WIDTH( 64 ),
    .CASE3( 3'h0 ),
    .din3_WIDTH( 64 ),
    .def_WIDTH( 64 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 64 ))
sparsemux_9_3_64_1_1_U6(
    .din0(dc_reg_1368),
    .din1(dc_1_fu_945_p4),
    .din2(64'd13830554455654793216),
    .din3(dc_1_fu_945_p8),
    .def(dc_1_fu_945_p9),
    .sel(dc_1_fu_945_p10),
    .dout(dc_1_fu_945_p11)
);

edgedetect_flow_control_loop_delay_pipe flow_control_loop_delay_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage2),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(ap_continue),
    .ap_loop_exit_ready_delayed(ap_loop_exit_ready_delayed)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter59_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter43 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter44 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter44 <= ap_enable_reg_pp0_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter45 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter45 <= ap_enable_reg_pp0_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter46 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter46 <= ap_enable_reg_pp0_iter45;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter47 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter47 <= ap_enable_reg_pp0_iter46;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter48 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter48 <= ap_enable_reg_pp0_iter47;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter49 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter49 <= ap_enable_reg_pp0_iter48;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter50 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter50 <= ap_enable_reg_pp0_iter49;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter51 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter51 <= ap_enable_reg_pp0_iter50;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter52 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter52 <= ap_enable_reg_pp0_iter51;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter53 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter53 <= ap_enable_reg_pp0_iter52;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter54 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter54 <= ap_enable_reg_pp0_iter53;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter55 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter55 <= ap_enable_reg_pp0_iter54;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter56 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter56 <= ap_enable_reg_pp0_iter55;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter57 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter57 <= ap_enable_reg_pp0_iter56;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter58 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter58 <= ap_enable_reg_pp0_iter57;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter59 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter59 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter59 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter59 <= ap_enable_reg_pp0_iter58;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1154)) begin
        add_ln128_fu_226 <= add_ln12_fu_492_p2;
    end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter10_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter10_reg <= ap_condition_exit_pp0_iter0_stage2_pp0_iter9_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter11_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter11_reg <= ap_condition_exit_pp0_iter0_stage2_pp0_iter10_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter12_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter12_reg <= ap_condition_exit_pp0_iter0_stage2_pp0_iter11_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter13_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter13_reg <= ap_condition_exit_pp0_iter0_stage2_pp0_iter12_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter14_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter14_reg <= ap_condition_exit_pp0_iter0_stage2_pp0_iter13_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter15_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter15_reg <= ap_condition_exit_pp0_iter0_stage2_pp0_iter14_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter16_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter16_reg <= ap_condition_exit_pp0_iter0_stage2_pp0_iter15_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter17_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter17_reg <= ap_condition_exit_pp0_iter0_stage2_pp0_iter16_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter18_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter18_reg <= ap_condition_exit_pp0_iter0_stage2_pp0_iter17_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter19_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter19_reg <= ap_condition_exit_pp0_iter0_stage2_pp0_iter18_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter1_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter1_reg <= ap_condition_exit_pp0_iter0_stage2;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter20_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter20_reg <= ap_condition_exit_pp0_iter0_stage2_pp0_iter19_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter21_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter21_reg <= ap_condition_exit_pp0_iter0_stage2_pp0_iter20_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter22_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter22_reg <= ap_condition_exit_pp0_iter0_stage2_pp0_iter21_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter23_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter23_reg <= ap_condition_exit_pp0_iter0_stage2_pp0_iter22_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter24_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter24_reg <= ap_condition_exit_pp0_iter0_stage2_pp0_iter23_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter25_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter25_reg <= ap_condition_exit_pp0_iter0_stage2_pp0_iter24_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter26_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter26_reg <= ap_condition_exit_pp0_iter0_stage2_pp0_iter25_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter27_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter27_reg <= ap_condition_exit_pp0_iter0_stage2_pp0_iter26_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter28_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter28_reg <= ap_condition_exit_pp0_iter0_stage2_pp0_iter27_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter29_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter29_reg <= ap_condition_exit_pp0_iter0_stage2_pp0_iter28_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter2_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter2_reg <= ap_condition_exit_pp0_iter0_stage2_pp0_iter1_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter30_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter30_reg <= ap_condition_exit_pp0_iter0_stage2_pp0_iter29_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter31_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter31_reg <= ap_condition_exit_pp0_iter0_stage2_pp0_iter30_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter32_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter32_reg <= ap_condition_exit_pp0_iter0_stage2_pp0_iter31_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter33_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter33_reg <= ap_condition_exit_pp0_iter0_stage2_pp0_iter32_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter34_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter34_reg <= ap_condition_exit_pp0_iter0_stage2_pp0_iter33_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter35_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter35_reg <= ap_condition_exit_pp0_iter0_stage2_pp0_iter34_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter36_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter36_reg <= ap_condition_exit_pp0_iter0_stage2_pp0_iter35_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter3_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter3_reg <= ap_condition_exit_pp0_iter0_stage2_pp0_iter2_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter4_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter4_reg <= ap_condition_exit_pp0_iter0_stage2_pp0_iter3_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter5_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter5_reg <= ap_condition_exit_pp0_iter0_stage2_pp0_iter4_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter6_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter6_reg <= ap_condition_exit_pp0_iter0_stage2_pp0_iter5_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter7_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter7_reg <= ap_condition_exit_pp0_iter0_stage2_pp0_iter6_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter8_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter8_reg <= ap_condition_exit_pp0_iter0_stage2_pp0_iter7_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter9_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_condition_exit_pp0_iter0_stage2_pp0_iter9_reg <= ap_condition_exit_pp0_iter0_stage2_pp0_iter8_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter10_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter11_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter12_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter13_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter14_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter15_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter16_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter17_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter18_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter19_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter20_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter21_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter22_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter23_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter24_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter25_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter26_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter27_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter28_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter29_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter30_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter31_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter32_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter33_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter34_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter35_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter35_reg <= ap_loop_exit_ready_pp0_iter34_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter36_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter36_reg <= ap_loop_exit_ready_pp0_iter35_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter37_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter37_reg <= ap_loop_exit_ready_pp0_iter36_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter38_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter38_reg <= ap_loop_exit_ready_pp0_iter37_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter39_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter39_reg <= ap_loop_exit_ready_pp0_iter38_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter40_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter40_reg <= ap_loop_exit_ready_pp0_iter39_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter41_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter41_reg <= ap_loop_exit_ready_pp0_iter40_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter42_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter42_reg <= ap_loop_exit_ready_pp0_iter41_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter43_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter43_reg <= ap_loop_exit_ready_pp0_iter42_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter44_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter44_reg <= ap_loop_exit_ready_pp0_iter43_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter45_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter45_reg <= ap_loop_exit_ready_pp0_iter44_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter46_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter46_reg <= ap_loop_exit_ready_pp0_iter45_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter47_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter47_reg <= ap_loop_exit_ready_pp0_iter46_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter48_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter48_reg <= ap_loop_exit_ready_pp0_iter47_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter49_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter49_reg <= ap_loop_exit_ready_pp0_iter48_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter50_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter50_reg <= ap_loop_exit_ready_pp0_iter49_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter51_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter51_reg <= ap_loop_exit_ready_pp0_iter50_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter52_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter52_reg <= ap_loop_exit_ready_pp0_iter51_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter53_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter53_reg <= ap_loop_exit_ready_pp0_iter52_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter54_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter54_reg <= ap_loop_exit_ready_pp0_iter53_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter55_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter55_reg <= ap_loop_exit_ready_pp0_iter54_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter56_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter56_reg <= ap_loop_exit_ready_pp0_iter55_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter57_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter57_reg <= ap_loop_exit_ready_pp0_iter56_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter58_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter58_reg <= ap_loop_exit_ready_pp0_iter57_reg;
end
end

always @ (posedge ap_clk) begin
if ((((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter58_reg == 1'b0)))) begin
    ap_loop_exit_ready_pp0_iter59_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter59_reg <= ap_loop_exit_ready_pp0_iter58_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter8_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
end
end

always @ (posedge ap_clk) begin
if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
    ap_loop_exit_ready_pp0_iter9_reg <= 1'b0;
end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
    ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
end
end

always @ (posedge ap_clk) begin
ap_rst_n_inv <= ap_rst_reg_1;
end

always @ (posedge ap_clk) begin
ap_rst_reg_1 <= ap_rst_reg_2;
end

always @ (posedge ap_clk) begin
ap_rst_reg_2 <= ~ap_rst_n;
end

always @ (posedge ap_clk) begin
if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
    if ((1'b1 == ap_condition_1852)) begin
        first_iter_0_reg_307 <= 1'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_init == 1'b1))) begin
        first_iter_0_reg_307 <= 1'd1;
    end
end
end

always @ (posedge ap_clk) begin
if ((1'b1 == ap_condition_1154)) begin
    i3_fu_210 <= i_fu_398_p3;
end
end

always @ (posedge ap_clk) begin
if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
    if ((1'b1 == ap_condition_1852)) begin
        icmp_ln157_reg_320 <= icmp_ln15_reg_1263;
    end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_init == 1'b1))) begin
        icmp_ln157_reg_320 <= 1'd0;
    end
end
end

always @ (posedge ap_clk) begin
if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
    if ((1'b1 == ap_condition_1855)) begin
        indvar_flatten2_fu_206 <= 19'd0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        indvar_flatten2_fu_206 <= add_ln12_1_fu_617_p2;
    end
end
end

always @ (posedge ap_clk) begin
if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
    if ((1'b1 == ap_condition_1855)) begin
        j5_fu_218 <= 10'd0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        j5_fu_218 <= j_fu_626_p2;
    end
end
end

always @ (posedge ap_clk) begin
if ((1'b1 == ap_condition_1154)) begin
    jj4_fu_214 <= jj_fu_486_p2;
end
end

always @ (posedge ap_clk) begin
if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (ap_loop_init == 1'b1))) begin
        phi_ln236_fu_222 <= 504'd0;
    end else if ((ap_enable_reg_pp0_iter36 == 1'b1)) begin
        phi_ln236_fu_222 <= select_ln23_fu_1140_p3;
    end
end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter34 == 1'b1))) begin
        add1_reg_1358 <= grp_fu_337_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln17_reg_1210 <= add_ln17_fu_460_p2;
        b_reg_1308 <= b_fu_724_p1;
        first_iter_0_reg_307_pp0_iter10_reg <= first_iter_0_reg_307_pp0_iter9_reg;
        first_iter_0_reg_307_pp0_iter11_reg <= first_iter_0_reg_307_pp0_iter10_reg;
        first_iter_0_reg_307_pp0_iter12_reg <= first_iter_0_reg_307_pp0_iter11_reg;
        first_iter_0_reg_307_pp0_iter13_reg <= first_iter_0_reg_307_pp0_iter12_reg;
        first_iter_0_reg_307_pp0_iter14_reg <= first_iter_0_reg_307_pp0_iter13_reg;
        first_iter_0_reg_307_pp0_iter15_reg <= first_iter_0_reg_307_pp0_iter14_reg;
        first_iter_0_reg_307_pp0_iter16_reg <= first_iter_0_reg_307_pp0_iter15_reg;
        first_iter_0_reg_307_pp0_iter17_reg <= first_iter_0_reg_307_pp0_iter16_reg;
        first_iter_0_reg_307_pp0_iter18_reg <= first_iter_0_reg_307_pp0_iter17_reg;
        first_iter_0_reg_307_pp0_iter19_reg <= first_iter_0_reg_307_pp0_iter18_reg;
        first_iter_0_reg_307_pp0_iter1_reg <= first_iter_0_reg_307;
        first_iter_0_reg_307_pp0_iter20_reg <= first_iter_0_reg_307_pp0_iter19_reg;
        first_iter_0_reg_307_pp0_iter21_reg <= first_iter_0_reg_307_pp0_iter20_reg;
        first_iter_0_reg_307_pp0_iter22_reg <= first_iter_0_reg_307_pp0_iter21_reg;
        first_iter_0_reg_307_pp0_iter23_reg <= first_iter_0_reg_307_pp0_iter22_reg;
        first_iter_0_reg_307_pp0_iter24_reg <= first_iter_0_reg_307_pp0_iter23_reg;
        first_iter_0_reg_307_pp0_iter25_reg <= first_iter_0_reg_307_pp0_iter24_reg;
        first_iter_0_reg_307_pp0_iter26_reg <= first_iter_0_reg_307_pp0_iter25_reg;
        first_iter_0_reg_307_pp0_iter27_reg <= first_iter_0_reg_307_pp0_iter26_reg;
        first_iter_0_reg_307_pp0_iter28_reg <= first_iter_0_reg_307_pp0_iter27_reg;
        first_iter_0_reg_307_pp0_iter29_reg <= first_iter_0_reg_307_pp0_iter28_reg;
        first_iter_0_reg_307_pp0_iter2_reg <= first_iter_0_reg_307_pp0_iter1_reg;
        first_iter_0_reg_307_pp0_iter30_reg <= first_iter_0_reg_307_pp0_iter29_reg;
        first_iter_0_reg_307_pp0_iter31_reg <= first_iter_0_reg_307_pp0_iter30_reg;
        first_iter_0_reg_307_pp0_iter32_reg <= first_iter_0_reg_307_pp0_iter31_reg;
        first_iter_0_reg_307_pp0_iter33_reg <= first_iter_0_reg_307_pp0_iter32_reg;
        first_iter_0_reg_307_pp0_iter34_reg <= first_iter_0_reg_307_pp0_iter33_reg;
        first_iter_0_reg_307_pp0_iter35_reg <= first_iter_0_reg_307_pp0_iter34_reg;
        first_iter_0_reg_307_pp0_iter3_reg <= first_iter_0_reg_307_pp0_iter2_reg;
        first_iter_0_reg_307_pp0_iter4_reg <= first_iter_0_reg_307_pp0_iter3_reg;
        first_iter_0_reg_307_pp0_iter5_reg <= first_iter_0_reg_307_pp0_iter4_reg;
        first_iter_0_reg_307_pp0_iter6_reg <= first_iter_0_reg_307_pp0_iter5_reg;
        first_iter_0_reg_307_pp0_iter7_reg <= first_iter_0_reg_307_pp0_iter6_reg;
        first_iter_0_reg_307_pp0_iter8_reg <= first_iter_0_reg_307_pp0_iter7_reg;
        first_iter_0_reg_307_pp0_iter9_reg <= first_iter_0_reg_307_pp0_iter8_reg;
        gmem_addr_1_read_reg_1278 <= gmem_RDATA;
        icmp_ln157_reg_320_pp0_iter10_reg <= icmp_ln157_reg_320_pp0_iter9_reg;
        icmp_ln157_reg_320_pp0_iter11_reg <= icmp_ln157_reg_320_pp0_iter10_reg;
        icmp_ln157_reg_320_pp0_iter12_reg <= icmp_ln157_reg_320_pp0_iter11_reg;
        icmp_ln157_reg_320_pp0_iter13_reg <= icmp_ln157_reg_320_pp0_iter12_reg;
        icmp_ln157_reg_320_pp0_iter14_reg <= icmp_ln157_reg_320_pp0_iter13_reg;
        icmp_ln157_reg_320_pp0_iter15_reg <= icmp_ln157_reg_320_pp0_iter14_reg;
        icmp_ln157_reg_320_pp0_iter16_reg <= icmp_ln157_reg_320_pp0_iter15_reg;
        icmp_ln157_reg_320_pp0_iter17_reg <= icmp_ln157_reg_320_pp0_iter16_reg;
        icmp_ln157_reg_320_pp0_iter18_reg <= icmp_ln157_reg_320_pp0_iter17_reg;
        icmp_ln157_reg_320_pp0_iter19_reg <= icmp_ln157_reg_320_pp0_iter18_reg;
        icmp_ln157_reg_320_pp0_iter1_reg <= icmp_ln157_reg_320;
        icmp_ln157_reg_320_pp0_iter20_reg <= icmp_ln157_reg_320_pp0_iter19_reg;
        icmp_ln157_reg_320_pp0_iter21_reg <= icmp_ln157_reg_320_pp0_iter20_reg;
        icmp_ln157_reg_320_pp0_iter22_reg <= icmp_ln157_reg_320_pp0_iter21_reg;
        icmp_ln157_reg_320_pp0_iter23_reg <= icmp_ln157_reg_320_pp0_iter22_reg;
        icmp_ln157_reg_320_pp0_iter24_reg <= icmp_ln157_reg_320_pp0_iter23_reg;
        icmp_ln157_reg_320_pp0_iter25_reg <= icmp_ln157_reg_320_pp0_iter24_reg;
        icmp_ln157_reg_320_pp0_iter26_reg <= icmp_ln157_reg_320_pp0_iter25_reg;
        icmp_ln157_reg_320_pp0_iter27_reg <= icmp_ln157_reg_320_pp0_iter26_reg;
        icmp_ln157_reg_320_pp0_iter28_reg <= icmp_ln157_reg_320_pp0_iter27_reg;
        icmp_ln157_reg_320_pp0_iter29_reg <= icmp_ln157_reg_320_pp0_iter28_reg;
        icmp_ln157_reg_320_pp0_iter2_reg <= icmp_ln157_reg_320_pp0_iter1_reg;
        icmp_ln157_reg_320_pp0_iter30_reg <= icmp_ln157_reg_320_pp0_iter29_reg;
        icmp_ln157_reg_320_pp0_iter31_reg <= icmp_ln157_reg_320_pp0_iter30_reg;
        icmp_ln157_reg_320_pp0_iter32_reg <= icmp_ln157_reg_320_pp0_iter31_reg;
        icmp_ln157_reg_320_pp0_iter33_reg <= icmp_ln157_reg_320_pp0_iter32_reg;
        icmp_ln157_reg_320_pp0_iter34_reg <= icmp_ln157_reg_320_pp0_iter33_reg;
        icmp_ln157_reg_320_pp0_iter35_reg <= icmp_ln157_reg_320_pp0_iter34_reg;
        icmp_ln157_reg_320_pp0_iter3_reg <= icmp_ln157_reg_320_pp0_iter2_reg;
        icmp_ln157_reg_320_pp0_iter4_reg <= icmp_ln157_reg_320_pp0_iter3_reg;
        icmp_ln157_reg_320_pp0_iter5_reg <= icmp_ln157_reg_320_pp0_iter4_reg;
        icmp_ln157_reg_320_pp0_iter6_reg <= icmp_ln157_reg_320_pp0_iter5_reg;
        icmp_ln157_reg_320_pp0_iter7_reg <= icmp_ln157_reg_320_pp0_iter6_reg;
        icmp_ln157_reg_320_pp0_iter8_reg <= icmp_ln157_reg_320_pp0_iter7_reg;
        icmp_ln157_reg_320_pp0_iter9_reg <= icmp_ln157_reg_320_pp0_iter8_reg;
        mul2_reg_1348_pp0_iter30_reg <= mul2_reg_1348;
        mul2_reg_1348_pp0_iter31_reg <= mul2_reg_1348_pp0_iter30_reg;
        or_ln_reg_1417 <= or_ln_fu_1114_p3;
        output_image_read_reg_1195 <= output_image;
        output_image_read_reg_1195_pp0_iter10_reg <= output_image_read_reg_1195_pp0_iter9_reg;
        output_image_read_reg_1195_pp0_iter11_reg <= output_image_read_reg_1195_pp0_iter10_reg;
        output_image_read_reg_1195_pp0_iter12_reg <= output_image_read_reg_1195_pp0_iter11_reg;
        output_image_read_reg_1195_pp0_iter13_reg <= output_image_read_reg_1195_pp0_iter12_reg;
        output_image_read_reg_1195_pp0_iter14_reg <= output_image_read_reg_1195_pp0_iter13_reg;
        output_image_read_reg_1195_pp0_iter15_reg <= output_image_read_reg_1195_pp0_iter14_reg;
        output_image_read_reg_1195_pp0_iter16_reg <= output_image_read_reg_1195_pp0_iter15_reg;
        output_image_read_reg_1195_pp0_iter17_reg <= output_image_read_reg_1195_pp0_iter16_reg;
        output_image_read_reg_1195_pp0_iter18_reg <= output_image_read_reg_1195_pp0_iter17_reg;
        output_image_read_reg_1195_pp0_iter19_reg <= output_image_read_reg_1195_pp0_iter18_reg;
        output_image_read_reg_1195_pp0_iter1_reg <= output_image_read_reg_1195;
        output_image_read_reg_1195_pp0_iter20_reg <= output_image_read_reg_1195_pp0_iter19_reg;
        output_image_read_reg_1195_pp0_iter21_reg <= output_image_read_reg_1195_pp0_iter20_reg;
        output_image_read_reg_1195_pp0_iter22_reg <= output_image_read_reg_1195_pp0_iter21_reg;
        output_image_read_reg_1195_pp0_iter23_reg <= output_image_read_reg_1195_pp0_iter22_reg;
        output_image_read_reg_1195_pp0_iter24_reg <= output_image_read_reg_1195_pp0_iter23_reg;
        output_image_read_reg_1195_pp0_iter25_reg <= output_image_read_reg_1195_pp0_iter24_reg;
        output_image_read_reg_1195_pp0_iter26_reg <= output_image_read_reg_1195_pp0_iter25_reg;
        output_image_read_reg_1195_pp0_iter27_reg <= output_image_read_reg_1195_pp0_iter26_reg;
        output_image_read_reg_1195_pp0_iter28_reg <= output_image_read_reg_1195_pp0_iter27_reg;
        output_image_read_reg_1195_pp0_iter29_reg <= output_image_read_reg_1195_pp0_iter28_reg;
        output_image_read_reg_1195_pp0_iter2_reg <= output_image_read_reg_1195_pp0_iter1_reg;
        output_image_read_reg_1195_pp0_iter30_reg <= output_image_read_reg_1195_pp0_iter29_reg;
        output_image_read_reg_1195_pp0_iter31_reg <= output_image_read_reg_1195_pp0_iter30_reg;
        output_image_read_reg_1195_pp0_iter32_reg <= output_image_read_reg_1195_pp0_iter31_reg;
        output_image_read_reg_1195_pp0_iter33_reg <= output_image_read_reg_1195_pp0_iter32_reg;
        output_image_read_reg_1195_pp0_iter34_reg <= output_image_read_reg_1195_pp0_iter33_reg;
        output_image_read_reg_1195_pp0_iter35_reg <= output_image_read_reg_1195_pp0_iter34_reg;
        output_image_read_reg_1195_pp0_iter3_reg <= output_image_read_reg_1195_pp0_iter2_reg;
        output_image_read_reg_1195_pp0_iter4_reg <= output_image_read_reg_1195_pp0_iter3_reg;
        output_image_read_reg_1195_pp0_iter5_reg <= output_image_read_reg_1195_pp0_iter4_reg;
        output_image_read_reg_1195_pp0_iter6_reg <= output_image_read_reg_1195_pp0_iter5_reg;
        output_image_read_reg_1195_pp0_iter7_reg <= output_image_read_reg_1195_pp0_iter6_reg;
        output_image_read_reg_1195_pp0_iter8_reg <= output_image_read_reg_1195_pp0_iter7_reg;
        output_image_read_reg_1195_pp0_iter9_reg <= output_image_read_reg_1195_pp0_iter8_reg;
        tmp_1_reg_1200 <= {{empty_22_fu_426_p2[19:1]}};
        tmp_3_reg_1205 <= {{empty_22_fu_426_p2[19:2]}};
        trunc_ln17_1_reg_1216 <= {{add_ln17_1_fu_466_p2[63:6]}};
        trunc_ln17_reg_1221 <= trunc_ln17_fu_482_p1;
        trunc_ln17_reg_1221_pp0_iter10_reg <= trunc_ln17_reg_1221_pp0_iter9_reg;
        trunc_ln17_reg_1221_pp0_iter11_reg <= trunc_ln17_reg_1221_pp0_iter10_reg;
        trunc_ln17_reg_1221_pp0_iter12_reg <= trunc_ln17_reg_1221_pp0_iter11_reg;
        trunc_ln17_reg_1221_pp0_iter13_reg <= trunc_ln17_reg_1221_pp0_iter12_reg;
        trunc_ln17_reg_1221_pp0_iter14_reg <= trunc_ln17_reg_1221_pp0_iter13_reg;
        trunc_ln17_reg_1221_pp0_iter15_reg <= trunc_ln17_reg_1221_pp0_iter14_reg;
        trunc_ln17_reg_1221_pp0_iter16_reg <= trunc_ln17_reg_1221_pp0_iter15_reg;
        trunc_ln17_reg_1221_pp0_iter17_reg <= trunc_ln17_reg_1221_pp0_iter16_reg;
        trunc_ln17_reg_1221_pp0_iter18_reg <= trunc_ln17_reg_1221_pp0_iter17_reg;
        trunc_ln17_reg_1221_pp0_iter19_reg <= trunc_ln17_reg_1221_pp0_iter18_reg;
        trunc_ln17_reg_1221_pp0_iter1_reg <= trunc_ln17_reg_1221;
        trunc_ln17_reg_1221_pp0_iter20_reg <= trunc_ln17_reg_1221_pp0_iter19_reg;
        trunc_ln17_reg_1221_pp0_iter21_reg <= trunc_ln17_reg_1221_pp0_iter20_reg;
        trunc_ln17_reg_1221_pp0_iter22_reg <= trunc_ln17_reg_1221_pp0_iter21_reg;
        trunc_ln17_reg_1221_pp0_iter23_reg <= trunc_ln17_reg_1221_pp0_iter22_reg;
        trunc_ln17_reg_1221_pp0_iter24_reg <= trunc_ln17_reg_1221_pp0_iter23_reg;
        trunc_ln17_reg_1221_pp0_iter2_reg <= trunc_ln17_reg_1221_pp0_iter1_reg;
        trunc_ln17_reg_1221_pp0_iter3_reg <= trunc_ln17_reg_1221_pp0_iter2_reg;
        trunc_ln17_reg_1221_pp0_iter4_reg <= trunc_ln17_reg_1221_pp0_iter3_reg;
        trunc_ln17_reg_1221_pp0_iter5_reg <= trunc_ln17_reg_1221_pp0_iter4_reg;
        trunc_ln17_reg_1221_pp0_iter6_reg <= trunc_ln17_reg_1221_pp0_iter5_reg;
        trunc_ln17_reg_1221_pp0_iter7_reg <= trunc_ln17_reg_1221_pp0_iter6_reg;
        trunc_ln17_reg_1221_pp0_iter8_reg <= trunc_ln17_reg_1221_pp0_iter7_reg;
        trunc_ln17_reg_1221_pp0_iter9_reg <= trunc_ln17_reg_1221_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter31 == 1'b1))) begin
        add_reg_1353 <= grp_fu_337_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter26 == 1'b1))) begin
        conv1_reg_1328 <= grp_fu_348_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter26 == 1'b1))) begin
        conv2_reg_1333 <= grp_fu_348_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter26 == 1'b1))) begin
        conv_reg_1323 <= grp_fu_348_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        dc_1_reg_1406 <= dc_1_fu_945_p11;
        g_reg_1293 <= g_fu_700_p1;
        gmem_addr_3_read_reg_1298 <= gmem_RDATA;
        gray_reg_1363 <= grp_fu_331_p1;
        icmp_ln12_reg_1268 <= icmp_ln12_fu_638_p2;
        icmp_ln12_reg_1268_pp0_iter10_reg <= icmp_ln12_reg_1268_pp0_iter9_reg;
        icmp_ln12_reg_1268_pp0_iter11_reg <= icmp_ln12_reg_1268_pp0_iter10_reg;
        icmp_ln12_reg_1268_pp0_iter12_reg <= icmp_ln12_reg_1268_pp0_iter11_reg;
        icmp_ln12_reg_1268_pp0_iter13_reg <= icmp_ln12_reg_1268_pp0_iter12_reg;
        icmp_ln12_reg_1268_pp0_iter14_reg <= icmp_ln12_reg_1268_pp0_iter13_reg;
        icmp_ln12_reg_1268_pp0_iter15_reg <= icmp_ln12_reg_1268_pp0_iter14_reg;
        icmp_ln12_reg_1268_pp0_iter16_reg <= icmp_ln12_reg_1268_pp0_iter15_reg;
        icmp_ln12_reg_1268_pp0_iter17_reg <= icmp_ln12_reg_1268_pp0_iter16_reg;
        icmp_ln12_reg_1268_pp0_iter18_reg <= icmp_ln12_reg_1268_pp0_iter17_reg;
        icmp_ln12_reg_1268_pp0_iter19_reg <= icmp_ln12_reg_1268_pp0_iter18_reg;
        icmp_ln12_reg_1268_pp0_iter1_reg <= icmp_ln12_reg_1268;
        icmp_ln12_reg_1268_pp0_iter20_reg <= icmp_ln12_reg_1268_pp0_iter19_reg;
        icmp_ln12_reg_1268_pp0_iter21_reg <= icmp_ln12_reg_1268_pp0_iter20_reg;
        icmp_ln12_reg_1268_pp0_iter22_reg <= icmp_ln12_reg_1268_pp0_iter21_reg;
        icmp_ln12_reg_1268_pp0_iter23_reg <= icmp_ln12_reg_1268_pp0_iter22_reg;
        icmp_ln12_reg_1268_pp0_iter24_reg <= icmp_ln12_reg_1268_pp0_iter23_reg;
        icmp_ln12_reg_1268_pp0_iter25_reg <= icmp_ln12_reg_1268_pp0_iter24_reg;
        icmp_ln12_reg_1268_pp0_iter26_reg <= icmp_ln12_reg_1268_pp0_iter25_reg;
        icmp_ln12_reg_1268_pp0_iter27_reg <= icmp_ln12_reg_1268_pp0_iter26_reg;
        icmp_ln12_reg_1268_pp0_iter28_reg <= icmp_ln12_reg_1268_pp0_iter27_reg;
        icmp_ln12_reg_1268_pp0_iter29_reg <= icmp_ln12_reg_1268_pp0_iter28_reg;
        icmp_ln12_reg_1268_pp0_iter2_reg <= icmp_ln12_reg_1268_pp0_iter1_reg;
        icmp_ln12_reg_1268_pp0_iter30_reg <= icmp_ln12_reg_1268_pp0_iter29_reg;
        icmp_ln12_reg_1268_pp0_iter31_reg <= icmp_ln12_reg_1268_pp0_iter30_reg;
        icmp_ln12_reg_1268_pp0_iter32_reg <= icmp_ln12_reg_1268_pp0_iter31_reg;
        icmp_ln12_reg_1268_pp0_iter33_reg <= icmp_ln12_reg_1268_pp0_iter32_reg;
        icmp_ln12_reg_1268_pp0_iter34_reg <= icmp_ln12_reg_1268_pp0_iter33_reg;
        icmp_ln12_reg_1268_pp0_iter35_reg <= icmp_ln12_reg_1268_pp0_iter34_reg;
        icmp_ln12_reg_1268_pp0_iter36_reg <= icmp_ln12_reg_1268_pp0_iter35_reg;
        icmp_ln12_reg_1268_pp0_iter37_reg <= icmp_ln12_reg_1268_pp0_iter36_reg;
        icmp_ln12_reg_1268_pp0_iter38_reg <= icmp_ln12_reg_1268_pp0_iter37_reg;
        icmp_ln12_reg_1268_pp0_iter39_reg <= icmp_ln12_reg_1268_pp0_iter38_reg;
        icmp_ln12_reg_1268_pp0_iter3_reg <= icmp_ln12_reg_1268_pp0_iter2_reg;
        icmp_ln12_reg_1268_pp0_iter40_reg <= icmp_ln12_reg_1268_pp0_iter39_reg;
        icmp_ln12_reg_1268_pp0_iter41_reg <= icmp_ln12_reg_1268_pp0_iter40_reg;
        icmp_ln12_reg_1268_pp0_iter42_reg <= icmp_ln12_reg_1268_pp0_iter41_reg;
        icmp_ln12_reg_1268_pp0_iter43_reg <= icmp_ln12_reg_1268_pp0_iter42_reg;
        icmp_ln12_reg_1268_pp0_iter44_reg <= icmp_ln12_reg_1268_pp0_iter43_reg;
        icmp_ln12_reg_1268_pp0_iter45_reg <= icmp_ln12_reg_1268_pp0_iter44_reg;
        icmp_ln12_reg_1268_pp0_iter46_reg <= icmp_ln12_reg_1268_pp0_iter45_reg;
        icmp_ln12_reg_1268_pp0_iter47_reg <= icmp_ln12_reg_1268_pp0_iter46_reg;
        icmp_ln12_reg_1268_pp0_iter48_reg <= icmp_ln12_reg_1268_pp0_iter47_reg;
        icmp_ln12_reg_1268_pp0_iter49_reg <= icmp_ln12_reg_1268_pp0_iter48_reg;
        icmp_ln12_reg_1268_pp0_iter4_reg <= icmp_ln12_reg_1268_pp0_iter3_reg;
        icmp_ln12_reg_1268_pp0_iter50_reg <= icmp_ln12_reg_1268_pp0_iter49_reg;
        icmp_ln12_reg_1268_pp0_iter51_reg <= icmp_ln12_reg_1268_pp0_iter50_reg;
        icmp_ln12_reg_1268_pp0_iter52_reg <= icmp_ln12_reg_1268_pp0_iter51_reg;
        icmp_ln12_reg_1268_pp0_iter53_reg <= icmp_ln12_reg_1268_pp0_iter52_reg;
        icmp_ln12_reg_1268_pp0_iter54_reg <= icmp_ln12_reg_1268_pp0_iter53_reg;
        icmp_ln12_reg_1268_pp0_iter55_reg <= icmp_ln12_reg_1268_pp0_iter54_reg;
        icmp_ln12_reg_1268_pp0_iter56_reg <= icmp_ln12_reg_1268_pp0_iter55_reg;
        icmp_ln12_reg_1268_pp0_iter57_reg <= icmp_ln12_reg_1268_pp0_iter56_reg;
        icmp_ln12_reg_1268_pp0_iter58_reg <= icmp_ln12_reg_1268_pp0_iter57_reg;
        icmp_ln12_reg_1268_pp0_iter5_reg <= icmp_ln12_reg_1268_pp0_iter4_reg;
        icmp_ln12_reg_1268_pp0_iter6_reg <= icmp_ln12_reg_1268_pp0_iter5_reg;
        icmp_ln12_reg_1268_pp0_iter7_reg <= icmp_ln12_reg_1268_pp0_iter6_reg;
        icmp_ln12_reg_1268_pp0_iter8_reg <= icmp_ln12_reg_1268_pp0_iter7_reg;
        icmp_ln12_reg_1268_pp0_iter9_reg <= icmp_ln12_reg_1268_pp0_iter8_reg;
        icmp_ln23_reg_1258 <= icmp_ln23_fu_611_p2;
        icmp_ln23_reg_1258_pp0_iter10_reg <= icmp_ln23_reg_1258_pp0_iter9_reg;
        icmp_ln23_reg_1258_pp0_iter11_reg <= icmp_ln23_reg_1258_pp0_iter10_reg;
        icmp_ln23_reg_1258_pp0_iter12_reg <= icmp_ln23_reg_1258_pp0_iter11_reg;
        icmp_ln23_reg_1258_pp0_iter13_reg <= icmp_ln23_reg_1258_pp0_iter12_reg;
        icmp_ln23_reg_1258_pp0_iter14_reg <= icmp_ln23_reg_1258_pp0_iter13_reg;
        icmp_ln23_reg_1258_pp0_iter15_reg <= icmp_ln23_reg_1258_pp0_iter14_reg;
        icmp_ln23_reg_1258_pp0_iter16_reg <= icmp_ln23_reg_1258_pp0_iter15_reg;
        icmp_ln23_reg_1258_pp0_iter17_reg <= icmp_ln23_reg_1258_pp0_iter16_reg;
        icmp_ln23_reg_1258_pp0_iter18_reg <= icmp_ln23_reg_1258_pp0_iter17_reg;
        icmp_ln23_reg_1258_pp0_iter19_reg <= icmp_ln23_reg_1258_pp0_iter18_reg;
        icmp_ln23_reg_1258_pp0_iter1_reg <= icmp_ln23_reg_1258;
        icmp_ln23_reg_1258_pp0_iter20_reg <= icmp_ln23_reg_1258_pp0_iter19_reg;
        icmp_ln23_reg_1258_pp0_iter21_reg <= icmp_ln23_reg_1258_pp0_iter20_reg;
        icmp_ln23_reg_1258_pp0_iter22_reg <= icmp_ln23_reg_1258_pp0_iter21_reg;
        icmp_ln23_reg_1258_pp0_iter23_reg <= icmp_ln23_reg_1258_pp0_iter22_reg;
        icmp_ln23_reg_1258_pp0_iter24_reg <= icmp_ln23_reg_1258_pp0_iter23_reg;
        icmp_ln23_reg_1258_pp0_iter25_reg <= icmp_ln23_reg_1258_pp0_iter24_reg;
        icmp_ln23_reg_1258_pp0_iter26_reg <= icmp_ln23_reg_1258_pp0_iter25_reg;
        icmp_ln23_reg_1258_pp0_iter27_reg <= icmp_ln23_reg_1258_pp0_iter26_reg;
        icmp_ln23_reg_1258_pp0_iter28_reg <= icmp_ln23_reg_1258_pp0_iter27_reg;
        icmp_ln23_reg_1258_pp0_iter29_reg <= icmp_ln23_reg_1258_pp0_iter28_reg;
        icmp_ln23_reg_1258_pp0_iter2_reg <= icmp_ln23_reg_1258_pp0_iter1_reg;
        icmp_ln23_reg_1258_pp0_iter30_reg <= icmp_ln23_reg_1258_pp0_iter29_reg;
        icmp_ln23_reg_1258_pp0_iter31_reg <= icmp_ln23_reg_1258_pp0_iter30_reg;
        icmp_ln23_reg_1258_pp0_iter32_reg <= icmp_ln23_reg_1258_pp0_iter31_reg;
        icmp_ln23_reg_1258_pp0_iter33_reg <= icmp_ln23_reg_1258_pp0_iter32_reg;
        icmp_ln23_reg_1258_pp0_iter34_reg <= icmp_ln23_reg_1258_pp0_iter33_reg;
        icmp_ln23_reg_1258_pp0_iter35_reg <= icmp_ln23_reg_1258_pp0_iter34_reg;
        icmp_ln23_reg_1258_pp0_iter3_reg <= icmp_ln23_reg_1258_pp0_iter2_reg;
        icmp_ln23_reg_1258_pp0_iter4_reg <= icmp_ln23_reg_1258_pp0_iter3_reg;
        icmp_ln23_reg_1258_pp0_iter5_reg <= icmp_ln23_reg_1258_pp0_iter4_reg;
        icmp_ln23_reg_1258_pp0_iter6_reg <= icmp_ln23_reg_1258_pp0_iter5_reg;
        icmp_ln23_reg_1258_pp0_iter7_reg <= icmp_ln23_reg_1258_pp0_iter6_reg;
        icmp_ln23_reg_1258_pp0_iter8_reg <= icmp_ln23_reg_1258_pp0_iter7_reg;
        icmp_ln23_reg_1258_pp0_iter9_reg <= icmp_ln23_reg_1258_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        dc_reg_1368 <= grp_fu_334_p1;
        gmem_addr_2_read_reg_1288 <= gmem_RDATA;
        r_reg_1283 <= r_fu_680_p1;
        trunc_ln17_3_reg_1237 <= trunc_ln17_3_fu_560_p1;
        trunc_ln17_3_reg_1237_pp0_iter10_reg <= trunc_ln17_3_reg_1237_pp0_iter9_reg;
        trunc_ln17_3_reg_1237_pp0_iter11_reg <= trunc_ln17_3_reg_1237_pp0_iter10_reg;
        trunc_ln17_3_reg_1237_pp0_iter12_reg <= trunc_ln17_3_reg_1237_pp0_iter11_reg;
        trunc_ln17_3_reg_1237_pp0_iter13_reg <= trunc_ln17_3_reg_1237_pp0_iter12_reg;
        trunc_ln17_3_reg_1237_pp0_iter14_reg <= trunc_ln17_3_reg_1237_pp0_iter13_reg;
        trunc_ln17_3_reg_1237_pp0_iter15_reg <= trunc_ln17_3_reg_1237_pp0_iter14_reg;
        trunc_ln17_3_reg_1237_pp0_iter16_reg <= trunc_ln17_3_reg_1237_pp0_iter15_reg;
        trunc_ln17_3_reg_1237_pp0_iter17_reg <= trunc_ln17_3_reg_1237_pp0_iter16_reg;
        trunc_ln17_3_reg_1237_pp0_iter18_reg <= trunc_ln17_3_reg_1237_pp0_iter17_reg;
        trunc_ln17_3_reg_1237_pp0_iter19_reg <= trunc_ln17_3_reg_1237_pp0_iter18_reg;
        trunc_ln17_3_reg_1237_pp0_iter1_reg <= trunc_ln17_3_reg_1237;
        trunc_ln17_3_reg_1237_pp0_iter20_reg <= trunc_ln17_3_reg_1237_pp0_iter19_reg;
        trunc_ln17_3_reg_1237_pp0_iter21_reg <= trunc_ln17_3_reg_1237_pp0_iter20_reg;
        trunc_ln17_3_reg_1237_pp0_iter22_reg <= trunc_ln17_3_reg_1237_pp0_iter21_reg;
        trunc_ln17_3_reg_1237_pp0_iter23_reg <= trunc_ln17_3_reg_1237_pp0_iter22_reg;
        trunc_ln17_3_reg_1237_pp0_iter24_reg <= trunc_ln17_3_reg_1237_pp0_iter23_reg;
        trunc_ln17_3_reg_1237_pp0_iter2_reg <= trunc_ln17_3_reg_1237_pp0_iter1_reg;
        trunc_ln17_3_reg_1237_pp0_iter3_reg <= trunc_ln17_3_reg_1237_pp0_iter2_reg;
        trunc_ln17_3_reg_1237_pp0_iter4_reg <= trunc_ln17_3_reg_1237_pp0_iter3_reg;
        trunc_ln17_3_reg_1237_pp0_iter5_reg <= trunc_ln17_3_reg_1237_pp0_iter4_reg;
        trunc_ln17_3_reg_1237_pp0_iter6_reg <= trunc_ln17_3_reg_1237_pp0_iter5_reg;
        trunc_ln17_3_reg_1237_pp0_iter7_reg <= trunc_ln17_3_reg_1237_pp0_iter6_reg;
        trunc_ln17_3_reg_1237_pp0_iter8_reg <= trunc_ln17_3_reg_1237_pp0_iter7_reg;
        trunc_ln17_3_reg_1237_pp0_iter9_reg <= trunc_ln17_3_reg_1237_pp0_iter8_reg;
        trunc_ln17_5_reg_1232 <= {{add_ln17_2_fu_545_p2[63:6]}};
        trunc_ln17_6_reg_1247 <= trunc_ln17_6_fu_579_p1;
        trunc_ln17_6_reg_1247_pp0_iter10_reg <= trunc_ln17_6_reg_1247_pp0_iter9_reg;
        trunc_ln17_6_reg_1247_pp0_iter11_reg <= trunc_ln17_6_reg_1247_pp0_iter10_reg;
        trunc_ln17_6_reg_1247_pp0_iter12_reg <= trunc_ln17_6_reg_1247_pp0_iter11_reg;
        trunc_ln17_6_reg_1247_pp0_iter13_reg <= trunc_ln17_6_reg_1247_pp0_iter12_reg;
        trunc_ln17_6_reg_1247_pp0_iter14_reg <= trunc_ln17_6_reg_1247_pp0_iter13_reg;
        trunc_ln17_6_reg_1247_pp0_iter15_reg <= trunc_ln17_6_reg_1247_pp0_iter14_reg;
        trunc_ln17_6_reg_1247_pp0_iter16_reg <= trunc_ln17_6_reg_1247_pp0_iter15_reg;
        trunc_ln17_6_reg_1247_pp0_iter17_reg <= trunc_ln17_6_reg_1247_pp0_iter16_reg;
        trunc_ln17_6_reg_1247_pp0_iter18_reg <= trunc_ln17_6_reg_1247_pp0_iter17_reg;
        trunc_ln17_6_reg_1247_pp0_iter19_reg <= trunc_ln17_6_reg_1247_pp0_iter18_reg;
        trunc_ln17_6_reg_1247_pp0_iter1_reg <= trunc_ln17_6_reg_1247;
        trunc_ln17_6_reg_1247_pp0_iter20_reg <= trunc_ln17_6_reg_1247_pp0_iter19_reg;
        trunc_ln17_6_reg_1247_pp0_iter21_reg <= trunc_ln17_6_reg_1247_pp0_iter20_reg;
        trunc_ln17_6_reg_1247_pp0_iter22_reg <= trunc_ln17_6_reg_1247_pp0_iter21_reg;
        trunc_ln17_6_reg_1247_pp0_iter23_reg <= trunc_ln17_6_reg_1247_pp0_iter22_reg;
        trunc_ln17_6_reg_1247_pp0_iter24_reg <= trunc_ln17_6_reg_1247_pp0_iter23_reg;
        trunc_ln17_6_reg_1247_pp0_iter2_reg <= trunc_ln17_6_reg_1247_pp0_iter1_reg;
        trunc_ln17_6_reg_1247_pp0_iter3_reg <= trunc_ln17_6_reg_1247_pp0_iter2_reg;
        trunc_ln17_6_reg_1247_pp0_iter4_reg <= trunc_ln17_6_reg_1247_pp0_iter3_reg;
        trunc_ln17_6_reg_1247_pp0_iter5_reg <= trunc_ln17_6_reg_1247_pp0_iter4_reg;
        trunc_ln17_6_reg_1247_pp0_iter6_reg <= trunc_ln17_6_reg_1247_pp0_iter5_reg;
        trunc_ln17_6_reg_1247_pp0_iter7_reg <= trunc_ln17_6_reg_1247_pp0_iter6_reg;
        trunc_ln17_6_reg_1247_pp0_iter8_reg <= trunc_ln17_6_reg_1247_pp0_iter7_reg;
        trunc_ln17_6_reg_1247_pp0_iter9_reg <= trunc_ln17_6_reg_1247_pp0_iter8_reg;
        trunc_ln17_7_reg_1242 <= {{add_ln17_3_fu_564_p2[63:6]}};
        trunc_ln479_reg_1401 <= trunc_ln479_fu_777_p1;
        xs_exp_reg_1382 <= {{data_1_fu_736_p1[62:52]}};
        xs_sig_reg_1390 <= xs_sig_fu_758_p1;
        xs_sign_reg_1373 <= data_1_fu_736_p1[32'd63];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        icmp_ln15_reg_1263 <= icmp_ln15_fu_632_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        mul1_reg_1343 <= grp_fu_341_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter29 == 1'b1))) begin
        mul2_reg_1348 <= grp_fu_341_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        mul_reg_1338 <= grp_fu_341_p2;
    end
end

always @ (*) begin
    if (((icmp_ln12_fu_638_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln12_reg_1268_pp0_iter58_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter59 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter59_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter59_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter59_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter59 == 1'b0) & (ap_enable_reg_pp0_iter58 == 1'b0) & (ap_enable_reg_pp0_iter57 == 1'b0) 
    & (ap_enable_reg_pp0_iter56 == 1'b0) & (ap_enable_reg_pp0_iter55 == 1'b0) & (ap_enable_reg_pp0_iter54 == 1'b0) & (ap_enable_reg_pp0_iter53 == 1'b0) & (ap_enable_reg_pp0_iter52 == 1'b0) & (ap_enable_reg_pp0_iter51 == 1'b0) & (ap_enable_reg_pp0_iter50 == 1'b0) & (ap_enable_reg_pp0_iter49 == 1'b0) & (ap_enable_reg_pp0_iter48 == 1'b0) & (ap_enable_reg_pp0_iter47 == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b0) & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 
    == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter58 == 1'b0) & (ap_enable_reg_pp0_iter57 == 1'b0) & (ap_enable_reg_pp0_iter56 == 1'b0) 
    & (ap_enable_reg_pp0_iter55 == 1'b0) & (ap_enable_reg_pp0_iter54 == 1'b0) & (ap_enable_reg_pp0_iter53 == 1'b0) & (ap_enable_reg_pp0_iter52 == 1'b0) & (ap_enable_reg_pp0_iter51 == 1'b0) & (ap_enable_reg_pp0_iter50 == 1'b0) & (ap_enable_reg_pp0_iter49 == 1'b0) & (ap_enable_reg_pp0_iter48 == 1'b0) & (ap_enable_reg_pp0_iter47 == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b0) & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 
    == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0))) begin
        ap_idle_pp0_0to58 = 1'b1;
    end else begin
        ap_idle_pp0_0to58 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter59 == 1'b0) & (ap_enable_reg_pp0_iter58 == 1'b0) & (ap_enable_reg_pp0_iter57 == 1'b0) & (ap_enable_reg_pp0_iter56 == 1'b0) 
    & (ap_enable_reg_pp0_iter55 == 1'b0) & (ap_enable_reg_pp0_iter54 == 1'b0) & (ap_enable_reg_pp0_iter53 == 1'b0) & (ap_enable_reg_pp0_iter52 == 1'b0) & (ap_enable_reg_pp0_iter51 == 1'b0) & (ap_enable_reg_pp0_iter50 == 1'b0) & (ap_enable_reg_pp0_iter49 == 1'b0) & (ap_enable_reg_pp0_iter48 == 1'b0) & (ap_enable_reg_pp0_iter47 == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b0) & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 
    == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0))) begin
        ap_idle_pp0_1to59 = 1'b1;
    end else begin
        ap_idle_pp0_1to59 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_condition_exit_pp0_iter0_stage2_pp0_iter36_reg) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_delayed = 1'b1;
    end else begin
        ap_loop_exit_ready_delayed = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        if ((1'b1 == ap_condition_1848)) begin
            ap_phi_mux_icmp_ln157_phi_fu_323_p4 = icmp_ln15_reg_1263;
        end else if ((ap_loop_init == 1'b1)) begin
            ap_phi_mux_icmp_ln157_phi_fu_323_p4 = 1'd0;
        end else begin
            ap_phi_mux_icmp_ln157_phi_fu_323_p4 = icmp_ln15_reg_1263;
        end
    end else begin
        ap_phi_mux_icmp_ln157_phi_fu_323_p4 = icmp_ln15_reg_1263;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_add_ln128_load = 9'd1;
    end else begin
        ap_sig_allocacmp_add_ln128_load = add_ln128_fu_226;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i3_load = 9'd0;
    end else begin
        ap_sig_allocacmp_i3_load = i3_fu_210;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_jj4_load = 11'd0;
    end else begin
        ap_sig_allocacmp_jj4_load = jj4_fu_214;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gmem_ARADDR = sext_ln17_2_fu_654_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        gmem_ARADDR = sext_ln17_1_fu_601_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        gmem_ARADDR = sext_ln17_fu_535_p1;
    end else begin
        gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        gmem_ARVALID = 1'b1;
    end else begin
        gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((first_iter_0_reg_307_pp0_iter35_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        gmem_AWVALID = 1'b1;
    end else begin
        gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln12_reg_1268_pp0_iter58_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter59 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gmem_BREADY = 1'b1;
    end else begin
        gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        gmem_RREADY = 1'b1;
    end else begin
        gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln23_reg_1258_pp0_iter35_reg == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        gmem_WVALID = 1'b1;
    end else begin
        gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((first_iter_0_reg_307_pp0_iter35_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln12_reg_1268_pp0_iter58_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter59 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln23_reg_1258_pp0_iter35_reg == 1'd1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_331_ce = 1'b1;
    end else begin
        grp_fu_331_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_334_ce = 1'b1;
    end else begin
        grp_fu_334_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_337_ce = 1'b1;
    end else begin
        grp_fu_337_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter31 == 1'b1))) begin
        grp_fu_337_p0 = add_reg_1353;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter29 == 1'b1))) begin
        grp_fu_337_p0 = mul_reg_1338;
    end else begin
        grp_fu_337_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter31 == 1'b1))) begin
        grp_fu_337_p1 = mul2_reg_1348_pp0_iter31_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter29 == 1'b1))) begin
        grp_fu_337_p1 = mul1_reg_1343;
    end else begin
        grp_fu_337_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_341_ce = 1'b1;
    end else begin
        grp_fu_341_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        grp_fu_341_p0 = conv2_reg_1333;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter26 == 1'b1))) begin
        grp_fu_341_p0 = conv1_reg_1328;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter26 == 1'b1))) begin
        grp_fu_341_p0 = conv_reg_1323;
    end else begin
        grp_fu_341_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        grp_fu_341_p1 = 64'd4592878986383488713;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter26 == 1'b1))) begin
        grp_fu_341_p1 = 64'd4603462445507809378;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter26 == 1'b1))) begin
        grp_fu_341_p1 = 64'd4599057925072241033;
    end else begin
        grp_fu_341_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_348_ce = 1'b1;
    end else begin
        grp_fu_348_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter25 == 1'b1))) begin
        grp_fu_348_p0 = zext_ln22_2_fu_732_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter25 == 1'b1))) begin
        grp_fu_348_p0 = zext_ln22_1_fu_728_p1;
    end else if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_348_p0 = zext_ln22_fu_704_p1;
    end else begin
        grp_fu_348_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter35 == 1'b1))) begin
        mask_table_ce0_local = 1'b1;
    end else begin
        mask_table_ce0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_idle_pp0_0to58 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter59_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to59 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln12_1_fu_617_p2 = (indvar_flatten2_fu_206 + 19'd1);

assign add_ln12_fu_492_p2 = (i_fu_398_p3 + 9'd1);

assign add_ln17_1_fu_466_p2 = (add_ln17_fu_460_p2 + p_cast_fu_432_p1);

assign add_ln17_2_fu_545_p2 = (add_ln17_reg_1210 + p_cast5_fu_520_p1);

assign add_ln17_3_fu_564_p2 = (add_ln17_reg_1210 + zext_ln15_fu_531_p1);

assign add_ln17_fu_460_p2 = (zext_ln15_1_fu_456_p1 + input_image);

assign add_ln36_fu_813_p2 = (zext_ln28_fu_802_p1 + t_fu_806_p3);

assign add_ln486_fu_1034_p2 = ($signed(zext_ln486_fu_1030_p1) + $signed(12'd3073));

assign and_ln19_1_fu_929_p2 = (icmp_ln18_fu_781_p2 & and_ln19_fu_924_p2);

assign and_ln19_fu_924_p2 = (xs_sign_reg_1373 & or_ln19_fu_918_p2);

assign and_ln24_fu_890_p2 = (xor_ln18_fu_884_p2 & icmp_ln24_fu_786_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((1'b1 == ap_block_state178_pp0_stage0_iter59) & (ap_enable_reg_pp0_iter59 == 1'b1)) | ((1'b1 == ap_block_state109_io) & (ap_enable_reg_pp0_iter36 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (gmem_ARREADY == 1'b0)) | ((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b1 == ap_block_state73_pp0_stage0_iter24)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((1'b1 == ap_block_state178_pp0_stage0_iter59) & (ap_enable_reg_pp0_iter59 == 1'b1)) | ((1'b1 == ap_block_state109_io) & (ap_enable_reg_pp0_iter36 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (gmem_ARREADY == 1'b0)) | ((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b1 == ap_block_state73_pp0_stage0_iter24)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b1 == ap_block_state74_pp0_stage1_iter24)));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_done_reg == 1'b1) | ((1'b1 == ap_block_state110_io) & (ap_enable_reg_pp0_iter36 == 1'b1)) | ((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b1 == ap_block_state74_pp0_stage1_iter24)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (gmem_ARREADY == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_done_reg == 1'b1) | ((1'b1 == ap_block_state110_io) & (ap_enable_reg_pp0_iter36 == 1'b1)) | ((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b1 == ap_block_state74_pp0_stage1_iter24)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (gmem_ARREADY == 1'b0)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b1 == ap_block_state75_pp0_stage2_iter24)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (gmem_ARREADY == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b1 == ap_block_state75_pp0_stage2_iter24)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (gmem_ARREADY == 1'b0)));
end

always @ (*) begin
    ap_block_state109_io = ((first_iter_0_reg_307_pp0_iter35_reg == 1'd1) & (gmem_AWREADY == 1'b0));
end

always @ (*) begin
    ap_block_state110_io = ((icmp_ln23_reg_1258_pp0_iter35_reg == 1'd1) & (gmem_WREADY == 1'b0));
end

always @ (*) begin
    ap_block_state178_pp0_stage0_iter59 = ((icmp_ln12_reg_1268_pp0_iter58_reg == 1'd1) & (gmem_BVALID == 1'b0));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_state73_pp0_stage0_iter24 = (gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state74_pp0_stage1_iter24 = (gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state75_pp0_stage2_iter24 = (gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_condition_1154 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_1848 = ((icmp_ln12_reg_1268 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0));
end

always @ (*) begin
    ap_condition_1852 = ((icmp_ln12_reg_1268 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_1855 = ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1));
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage2;

assign ap_ready = ap_ready_sig;

assign b_fu_724_p1 = lshr_ln17_2_fu_719_p2[7:0];

assign data_1_fu_736_p1 = grp_fu_334_p1;

assign data_fu_999_p1 = dc_1_reg_1406;

assign dc_1_fu_945_p10 = {{{and_ln24_fu_890_p2}, {xor_ln24_fu_902_p2}}, {and_ln19_1_fu_929_p2}};

assign dc_1_fu_945_p4 = t_4_fu_870_p4;

assign dc_1_fu_945_p8 = t_3_fu_791_p3;

assign dc_1_fu_945_p9 = 'bx;

assign empty_22_fu_426_p2 = (p_shl_fu_406_p3 - p_shl29_fu_422_p1);

assign g_fu_700_p1 = lshr_ln17_1_fu_695_p2[7:0];

assign gmem_ARLEN = 64'd1;

assign gmem_AWLEN = 64'd4800;

assign i_fu_398_p3 = ((ap_phi_mux_icmp_ln157_phi_fu_323_p4[0:0] == 1'b1) ? ap_sig_allocacmp_add_ln128_load : ap_sig_allocacmp_i3_load);

assign icmp_ln12_fu_638_p2 = ((indvar_flatten2_fu_206 == 19'd307199) ? 1'b1 : 1'b0);

assign icmp_ln15_fu_632_p2 = ((j_fu_626_p2 == 10'd640) ? 1'b1 : 1'b0);

assign icmp_ln18_fu_781_p2 = ((xs_exp_reg_1382 < 11'd1023) ? 1'b1 : 1'b0);

assign icmp_ln19_1_fu_913_p2 = ((xs_exp_reg_1382 != 11'd0) ? 1'b1 : 1'b0);

assign icmp_ln19_fu_908_p2 = ((xs_sig_reg_1390 != 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln23_fu_611_p2 = ((trunc_ln15_fu_597_p1 == 6'd63) ? 1'b1 : 1'b0);

assign icmp_ln24_fu_786_p2 = ((xs_exp_reg_1382 > 11'd1075) ? 1'b1 : 1'b0);

assign index_fu_762_p4 = {{data_1_fu_736_p1[57:52]}};

assign j_fu_626_p2 = (select_ln12_1_fu_589_p3 + 10'd1);

assign jj_fu_486_p2 = (select_ln12_fu_390_p3 + 11'd3);

assign lshr_ln17_1_fu_695_p2 = gmem_addr_2_read_reg_1288 >> zext_ln17_1_fu_691_p1;

assign lshr_ln17_2_fu_719_p2 = gmem_addr_3_read_reg_1298 >> zext_ln17_2_fu_715_p1;

assign lshr_ln17_fu_675_p2 = gmem_addr_1_read_reg_1278 >> zext_ln17_fu_671_p1;

assign lshr_ln71_fu_1074_p2 = zext_ln68_fu_1026_p1 >> zext_ln71_fu_1070_p1;

assign mantissa_fu_1016_p4 = {{{{1'd1}, {trunc_ln505_fu_1012_p1}}}, {1'd0}};

assign mask_table_address0 = zext_ln32_fu_772_p1;

assign or_ln19_fu_918_p2 = (icmp_ln19_fu_908_p2 | icmp_ln19_1_fu_913_p2);

assign or_ln24_fu_896_p2 = (icmp_ln24_fu_786_p2 | icmp_ln18_fu_781_p2);

assign or_ln_fu_1114_p3 = {{select_ln71_1_fu_1106_p3}, {select_ln12_2_fu_991_p3}};

assign p_cast5_fu_520_p1 = tmp_2_fu_513_p3;

assign p_cast_fu_432_p1 = empty_22_fu_426_p2;

assign p_shl29_fu_422_p1 = tmp_fu_414_p3;

assign p_shl_fu_406_p3 = {{i_fu_398_p3}, {11'd0}};

assign r_fu_680_p1 = lshr_ln17_fu_675_p2[7:0];

assign select_ln12_1_fu_589_p3 = ((icmp_ln157_reg_320[0:0] == 1'b1) ? 10'd0 : j5_fu_218);

assign select_ln12_2_fu_991_p3 = ((icmp_ln157_reg_320_pp0_iter35_reg[0:0] == 1'b1) ? 504'd0 : phi_ln236_fu_222);

assign select_ln12_fu_390_p3 = ((ap_phi_mux_icmp_ln157_phi_fu_323_p4[0:0] == 1'b1) ? 11'd0 : ap_sig_allocacmp_jj4_load);

assign select_ln23_fu_1140_p3 = ((icmp_ln23_reg_1258_pp0_iter35_reg[0:0] == 1'b1) ? 504'd0 : tmp_6_fu_1132_p3);

assign select_ln71_1_fu_1106_p3 = ((tmp_7_fu_1040_p3[0:0] == 1'b1) ? tmp_9_fu_1086_p4 : tmp_s_fu_1096_p4);

assign select_ln71_fu_1058_p3 = ((tmp_7_fu_1040_p3[0:0] == 1'b1) ? sext_ln71_fu_1054_p1 : add_ln486_fu_1034_p2);

assign sext_ln12_fu_977_p1 = $signed(trunc_ln_fu_968_p4);

assign sext_ln17_1_fu_601_p1 = $signed(trunc_ln17_5_reg_1232);

assign sext_ln17_2_fu_654_p1 = $signed(trunc_ln17_7_reg_1242);

assign sext_ln17_fu_535_p1 = $signed(trunc_ln17_1_reg_1216);

assign sext_ln71_1_fu_1066_p1 = $signed(select_ln71_fu_1058_p3);

assign sext_ln71_fu_1054_p1 = $signed(sub_ln71_fu_1048_p2);

assign shl_ln17_1_fu_684_p3 = {{trunc_ln17_3_reg_1237_pp0_iter24_reg}, {3'd0}};

assign shl_ln17_2_fu_708_p3 = {{trunc_ln17_6_reg_1247_pp0_iter24_reg}, {3'd0}};

assign shl_ln71_fu_1080_p2 = zext_ln68_fu_1026_p1 << zext_ln71_fu_1070_p1;

assign shl_ln_fu_664_p3 = {{trunc_ln17_reg_1221_pp0_iter24_reg}, {3'd0}};

assign sub_ln71_fu_1048_p2 = (11'd1023 - xs_exp_4_fu_1002_p4);

assign t_3_fu_791_p3 = {{xs_sign_reg_1373}, {63'd0}};

assign t_4_fu_870_p4 = {{{xs_sign_2_fu_841_p2}, {xs_exp_2_fu_846_p3}}, {xs_sig_3_fu_864_p2}};

assign t_fu_806_p3 = {{1'd1}, {trunc_ln479_reg_1401}};

assign tmp_2_fu_513_p3 = {{tmp_1_reg_1200}, {1'd1}};

assign tmp_4_fu_1122_p4 = {{select_ln12_2_fu_991_p3[503:8]}};

assign tmp_5_fu_524_p3 = {{tmp_3_reg_1205}, {2'd2}};

assign tmp_6_fu_1132_p3 = {{select_ln71_1_fu_1106_p3}, {tmp_4_fu_1122_p4}};

assign tmp_7_fu_1040_p3 = add_ln486_fu_1034_p2[32'd11];

assign tmp_9_fu_1086_p4 = {{lshr_ln71_fu_1074_p2[60:53]}};

assign tmp_fu_414_p3 = {{i_fu_398_p3}, {7'd0}};

assign tmp_s_fu_1096_p4 = {{shl_ln71_fu_1080_p2[60:53]}};

assign trunc_ln15_fu_597_p1 = select_ln12_1_fu_589_p3[5:0];

assign trunc_ln17_3_fu_560_p1 = add_ln17_2_fu_545_p2[5:0];

assign trunc_ln17_6_fu_579_p1 = add_ln17_3_fu_564_p2[5:0];

assign trunc_ln17_fu_482_p1 = add_ln17_1_fu_466_p2[5:0];

assign trunc_ln479_fu_777_p1 = data_1_fu_736_p1[62:0];

assign trunc_ln505_fu_1012_p1 = data_fu_999_p1[51:0];

assign trunc_ln_fu_968_p4 = {{output_image_read_reg_1195_pp0_iter35_reg[63:6]}};

assign xor_ln18_fu_884_p2 = (icmp_ln18_fu_781_p2 ^ 1'd1);

assign xor_ln24_fu_902_p2 = (or_ln24_fu_896_p2 ^ 1'd1);

assign xor_ln39_fu_858_p2 = (mask_table_q0 ^ 52'd4503599627370495);

assign xs_exp_1_fu_827_p4 = {{add_ln36_fu_813_p2[62:52]}};

assign xs_exp_2_fu_846_p3 = ((xs_sign_reg_1373[0:0] == 1'b1) ? xs_exp_1_fu_827_p4 : xs_exp_reg_1382);

assign xs_exp_4_fu_1002_p4 = {{data_fu_999_p1[62:52]}};

assign xs_sig_1_fu_837_p1 = add_ln36_fu_813_p2[51:0];

assign xs_sig_2_fu_852_p3 = ((xs_sign_reg_1373[0:0] == 1'b1) ? xs_sig_1_fu_837_p1 : xs_sig_reg_1390);

assign xs_sig_3_fu_864_p2 = (xs_sig_2_fu_852_p3 & xor_ln39_fu_858_p2);

assign xs_sig_fu_758_p1 = data_1_fu_736_p1[51:0];

assign xs_sign_1_fu_819_p3 = add_ln36_fu_813_p2[32'd63];

assign xs_sign_2_fu_841_p2 = (xs_sign_reg_1373 & xs_sign_1_fu_819_p3);

assign zext_ln15_1_fu_456_p1 = select_ln12_fu_390_p3;

assign zext_ln15_fu_531_p1 = tmp_5_fu_524_p3;

assign zext_ln17_1_fu_691_p1 = shl_ln17_1_fu_684_p3;

assign zext_ln17_2_fu_715_p1 = shl_ln17_2_fu_708_p3;

assign zext_ln17_fu_671_p1 = shl_ln_fu_664_p3;

assign zext_ln22_1_fu_728_p1 = g_reg_1293;

assign zext_ln22_2_fu_732_p1 = b_reg_1308;

assign zext_ln22_fu_704_p1 = r_reg_1283;

assign zext_ln28_fu_802_p1 = mask_table_q0;

assign zext_ln32_fu_772_p1 = index_fu_762_p4;

assign zext_ln486_fu_1030_p1 = xs_exp_4_fu_1002_p4;

assign zext_ln68_fu_1026_p1 = mantissa_fu_1016_p4;

assign zext_ln71_fu_1070_p1 = $unsigned(sext_ln71_1_fu_1066_p1);

endmodule //edgedetect
