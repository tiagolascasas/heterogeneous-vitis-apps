// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module cluster_cluster_Pipeline_VITIS_LOOP_98_2_VITIS_LOOP_101_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        SAD_w,
        bound139,
        SAD_w_cast34,
        integralImg_w_cast,
        integralImg_data,
        zext_ln98_1,
        SAD_data,
        zext_ln98,
        p_cast33,
        grp_fu_889_p_din0,
        grp_fu_889_p_din1,
        grp_fu_889_p_opcode,
        grp_fu_889_p_dout0,
        grp_fu_889_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 150'd1;
parameter    ap_ST_fsm_pp0_stage1 = 150'd2;
parameter    ap_ST_fsm_pp0_stage2 = 150'd4;
parameter    ap_ST_fsm_pp0_stage3 = 150'd8;
parameter    ap_ST_fsm_pp0_stage4 = 150'd16;
parameter    ap_ST_fsm_pp0_stage5 = 150'd32;
parameter    ap_ST_fsm_pp0_stage6 = 150'd64;
parameter    ap_ST_fsm_pp0_stage7 = 150'd128;
parameter    ap_ST_fsm_pp0_stage8 = 150'd256;
parameter    ap_ST_fsm_pp0_stage9 = 150'd512;
parameter    ap_ST_fsm_pp0_stage10 = 150'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 150'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 150'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 150'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 150'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 150'd32768;
parameter    ap_ST_fsm_pp0_stage16 = 150'd65536;
parameter    ap_ST_fsm_pp0_stage17 = 150'd131072;
parameter    ap_ST_fsm_pp0_stage18 = 150'd262144;
parameter    ap_ST_fsm_pp0_stage19 = 150'd524288;
parameter    ap_ST_fsm_pp0_stage20 = 150'd1048576;
parameter    ap_ST_fsm_pp0_stage21 = 150'd2097152;
parameter    ap_ST_fsm_pp0_stage22 = 150'd4194304;
parameter    ap_ST_fsm_pp0_stage23 = 150'd8388608;
parameter    ap_ST_fsm_pp0_stage24 = 150'd16777216;
parameter    ap_ST_fsm_pp0_stage25 = 150'd33554432;
parameter    ap_ST_fsm_pp0_stage26 = 150'd67108864;
parameter    ap_ST_fsm_pp0_stage27 = 150'd134217728;
parameter    ap_ST_fsm_pp0_stage28 = 150'd268435456;
parameter    ap_ST_fsm_pp0_stage29 = 150'd536870912;
parameter    ap_ST_fsm_pp0_stage30 = 150'd1073741824;
parameter    ap_ST_fsm_pp0_stage31 = 150'd2147483648;
parameter    ap_ST_fsm_pp0_stage32 = 150'd4294967296;
parameter    ap_ST_fsm_pp0_stage33 = 150'd8589934592;
parameter    ap_ST_fsm_pp0_stage34 = 150'd17179869184;
parameter    ap_ST_fsm_pp0_stage35 = 150'd34359738368;
parameter    ap_ST_fsm_pp0_stage36 = 150'd68719476736;
parameter    ap_ST_fsm_pp0_stage37 = 150'd137438953472;
parameter    ap_ST_fsm_pp0_stage38 = 150'd274877906944;
parameter    ap_ST_fsm_pp0_stage39 = 150'd549755813888;
parameter    ap_ST_fsm_pp0_stage40 = 150'd1099511627776;
parameter    ap_ST_fsm_pp0_stage41 = 150'd2199023255552;
parameter    ap_ST_fsm_pp0_stage42 = 150'd4398046511104;
parameter    ap_ST_fsm_pp0_stage43 = 150'd8796093022208;
parameter    ap_ST_fsm_pp0_stage44 = 150'd17592186044416;
parameter    ap_ST_fsm_pp0_stage45 = 150'd35184372088832;
parameter    ap_ST_fsm_pp0_stage46 = 150'd70368744177664;
parameter    ap_ST_fsm_pp0_stage47 = 150'd140737488355328;
parameter    ap_ST_fsm_pp0_stage48 = 150'd281474976710656;
parameter    ap_ST_fsm_pp0_stage49 = 150'd562949953421312;
parameter    ap_ST_fsm_pp0_stage50 = 150'd1125899906842624;
parameter    ap_ST_fsm_pp0_stage51 = 150'd2251799813685248;
parameter    ap_ST_fsm_pp0_stage52 = 150'd4503599627370496;
parameter    ap_ST_fsm_pp0_stage53 = 150'd9007199254740992;
parameter    ap_ST_fsm_pp0_stage54 = 150'd18014398509481984;
parameter    ap_ST_fsm_pp0_stage55 = 150'd36028797018963968;
parameter    ap_ST_fsm_pp0_stage56 = 150'd72057594037927936;
parameter    ap_ST_fsm_pp0_stage57 = 150'd144115188075855872;
parameter    ap_ST_fsm_pp0_stage58 = 150'd288230376151711744;
parameter    ap_ST_fsm_pp0_stage59 = 150'd576460752303423488;
parameter    ap_ST_fsm_pp0_stage60 = 150'd1152921504606846976;
parameter    ap_ST_fsm_pp0_stage61 = 150'd2305843009213693952;
parameter    ap_ST_fsm_pp0_stage62 = 150'd4611686018427387904;
parameter    ap_ST_fsm_pp0_stage63 = 150'd9223372036854775808;
parameter    ap_ST_fsm_pp0_stage64 = 150'd18446744073709551616;
parameter    ap_ST_fsm_pp0_stage65 = 150'd36893488147419103232;
parameter    ap_ST_fsm_pp0_stage66 = 150'd73786976294838206464;
parameter    ap_ST_fsm_pp0_stage67 = 150'd147573952589676412928;
parameter    ap_ST_fsm_pp0_stage68 = 150'd295147905179352825856;
parameter    ap_ST_fsm_pp0_stage69 = 150'd590295810358705651712;
parameter    ap_ST_fsm_pp0_stage70 = 150'd1180591620717411303424;
parameter    ap_ST_fsm_pp0_stage71 = 150'd2361183241434822606848;
parameter    ap_ST_fsm_pp0_stage72 = 150'd4722366482869645213696;
parameter    ap_ST_fsm_pp0_stage73 = 150'd9444732965739290427392;
parameter    ap_ST_fsm_pp0_stage74 = 150'd18889465931478580854784;
parameter    ap_ST_fsm_pp0_stage75 = 150'd37778931862957161709568;
parameter    ap_ST_fsm_pp0_stage76 = 150'd75557863725914323419136;
parameter    ap_ST_fsm_pp0_stage77 = 150'd151115727451828646838272;
parameter    ap_ST_fsm_pp0_stage78 = 150'd302231454903657293676544;
parameter    ap_ST_fsm_pp0_stage79 = 150'd604462909807314587353088;
parameter    ap_ST_fsm_pp0_stage80 = 150'd1208925819614629174706176;
parameter    ap_ST_fsm_pp0_stage81 = 150'd2417851639229258349412352;
parameter    ap_ST_fsm_pp0_stage82 = 150'd4835703278458516698824704;
parameter    ap_ST_fsm_pp0_stage83 = 150'd9671406556917033397649408;
parameter    ap_ST_fsm_pp0_stage84 = 150'd19342813113834066795298816;
parameter    ap_ST_fsm_pp0_stage85 = 150'd38685626227668133590597632;
parameter    ap_ST_fsm_pp0_stage86 = 150'd77371252455336267181195264;
parameter    ap_ST_fsm_pp0_stage87 = 150'd154742504910672534362390528;
parameter    ap_ST_fsm_pp0_stage88 = 150'd309485009821345068724781056;
parameter    ap_ST_fsm_pp0_stage89 = 150'd618970019642690137449562112;
parameter    ap_ST_fsm_pp0_stage90 = 150'd1237940039285380274899124224;
parameter    ap_ST_fsm_pp0_stage91 = 150'd2475880078570760549798248448;
parameter    ap_ST_fsm_pp0_stage92 = 150'd4951760157141521099596496896;
parameter    ap_ST_fsm_pp0_stage93 = 150'd9903520314283042199192993792;
parameter    ap_ST_fsm_pp0_stage94 = 150'd19807040628566084398385987584;
parameter    ap_ST_fsm_pp0_stage95 = 150'd39614081257132168796771975168;
parameter    ap_ST_fsm_pp0_stage96 = 150'd79228162514264337593543950336;
parameter    ap_ST_fsm_pp0_stage97 = 150'd158456325028528675187087900672;
parameter    ap_ST_fsm_pp0_stage98 = 150'd316912650057057350374175801344;
parameter    ap_ST_fsm_pp0_stage99 = 150'd633825300114114700748351602688;
parameter    ap_ST_fsm_pp0_stage100 = 150'd1267650600228229401496703205376;
parameter    ap_ST_fsm_pp0_stage101 = 150'd2535301200456458802993406410752;
parameter    ap_ST_fsm_pp0_stage102 = 150'd5070602400912917605986812821504;
parameter    ap_ST_fsm_pp0_stage103 = 150'd10141204801825835211973625643008;
parameter    ap_ST_fsm_pp0_stage104 = 150'd20282409603651670423947251286016;
parameter    ap_ST_fsm_pp0_stage105 = 150'd40564819207303340847894502572032;
parameter    ap_ST_fsm_pp0_stage106 = 150'd81129638414606681695789005144064;
parameter    ap_ST_fsm_pp0_stage107 = 150'd162259276829213363391578010288128;
parameter    ap_ST_fsm_pp0_stage108 = 150'd324518553658426726783156020576256;
parameter    ap_ST_fsm_pp0_stage109 = 150'd649037107316853453566312041152512;
parameter    ap_ST_fsm_pp0_stage110 = 150'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_pp0_stage111 = 150'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_pp0_stage112 = 150'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_pp0_stage113 = 150'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_pp0_stage114 = 150'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_pp0_stage115 = 150'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_pp0_stage116 = 150'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_pp0_stage117 = 150'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_pp0_stage118 = 150'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_pp0_stage119 = 150'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_pp0_stage120 = 150'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_pp0_stage121 = 150'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_pp0_stage122 = 150'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_pp0_stage123 = 150'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_pp0_stage124 = 150'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_pp0_stage125 = 150'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_pp0_stage126 = 150'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_pp0_stage127 = 150'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_pp0_stage128 = 150'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_pp0_stage129 = 150'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_pp0_stage130 = 150'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_pp0_stage131 = 150'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_pp0_stage132 = 150'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_pp0_stage133 = 150'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_pp0_stage134 = 150'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_pp0_stage135 = 150'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_pp0_stage136 = 150'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_pp0_stage137 = 150'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_pp0_stage138 = 150'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_pp0_stage139 = 150'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_pp0_stage140 = 150'd1393796574908163946345982392040522594123776;
parameter    ap_ST_fsm_pp0_stage141 = 150'd2787593149816327892691964784081045188247552;
parameter    ap_ST_fsm_pp0_stage142 = 150'd5575186299632655785383929568162090376495104;
parameter    ap_ST_fsm_pp0_stage143 = 150'd11150372599265311570767859136324180752990208;
parameter    ap_ST_fsm_pp0_stage144 = 150'd22300745198530623141535718272648361505980416;
parameter    ap_ST_fsm_pp0_stage145 = 150'd44601490397061246283071436545296723011960832;
parameter    ap_ST_fsm_pp0_stage146 = 150'd89202980794122492566142873090593446023921664;
parameter    ap_ST_fsm_pp0_stage147 = 150'd178405961588244985132285746181186892047843328;
parameter    ap_ST_fsm_pp0_stage148 = 150'd356811923176489970264571492362373784095686656;
parameter    ap_ST_fsm_pp0_stage149 = 150'd713623846352979940529142984724747568191373312;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [63:0] m_axi_gmem_WDATA;
output  [7:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [63:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [8:0] m_axi_gmem_RFIFONUM;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
input  [31:0] SAD_w;
input  [63:0] bound139;
input  [31:0] SAD_w_cast34;
input  [31:0] integralImg_w_cast;
input  [63:0] integralImg_data;
input  [31:0] zext_ln98_1;
input  [63:0] SAD_data;
input  [33:0] zext_ln98;
input  [33:0] p_cast33;
output  [31:0] grp_fu_889_p_din0;
output  [31:0] grp_fu_889_p_din1;
output  [0:0] grp_fu_889_p_opcode;
input  [31:0] grp_fu_889_p_dout0;
output   grp_fu_889_p_ce;

reg ap_idle;
reg m_axi_gmem_AWVALID;
reg m_axi_gmem_WVALID;
reg m_axi_gmem_ARVALID;
reg[63:0] m_axi_gmem_ARADDR;
reg m_axi_gmem_RREADY;
reg m_axi_gmem_BREADY;

(* fsm_encoding = "none" *) reg   [149:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage3;
reg    ap_block_state154_pp0_stage3_iter1;
reg    ap_block_pp0_stage3_subdone;
reg   [0:0] icmp_ln98_reg_684;
reg    ap_condition_exit_pp0_iter0_stage3;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage149;
wire    ap_block_pp0_stage149_subdone;
reg    gmem_blk_n_AR;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
reg    gmem_blk_n_R;
wire    ap_CS_fsm_pp0_stage75;
wire    ap_block_pp0_stage75;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
wire    ap_CS_fsm_pp0_stage76;
wire    ap_block_pp0_stage76;
reg    gmem_blk_n_AW;
wire    ap_CS_fsm_pp0_stage84;
wire    ap_block_pp0_stage84;
reg    gmem_blk_n_W;
wire    ap_CS_fsm_pp0_stage85;
wire    ap_block_pp0_stage85;
reg    gmem_blk_n_B;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage0_11001;
wire  signed [63:0] p_cast33_cast_fu_213_p1;
reg  signed [63:0] p_cast33_cast_reg_654;
wire   [63:0] zext_ln98_cast_fu_217_p1;
reg   [63:0] zext_ln98_cast_reg_659;
wire   [32:0] zext_ln98_1_cast_fu_221_p1;
reg   [32:0] zext_ln98_1_cast_reg_664;
wire  signed [61:0] integralImg_w_cast_cast_fu_225_p1;
reg  signed [61:0] integralImg_w_cast_cast_reg_669;
wire  signed [61:0] SAD_w_cast34_cast_fu_229_p1;
reg  signed [61:0] SAD_w_cast34_cast_reg_674;
wire   [0:0] icmp_ln101_fu_263_p2;
reg   [0:0] icmp_ln101_reg_679;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_11001;
wire   [0:0] icmp_ln98_fu_268_p2;
wire   [30:0] select_ln98_fu_282_p3;
reg   [30:0] select_ln98_reg_688;
wire   [30:0] select_ln98_2_fu_296_p3;
reg   [30:0] select_ln98_2_reg_693;
wire   [63:0] add_ln106_2_fu_329_p2;
reg   [63:0] add_ln106_2_reg_699;
wire   [30:0] select_ln98_1_fu_365_p3;
reg   [30:0] select_ln98_1_reg_704;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2_11001;
wire   [61:0] grp_fu_209_p2;
reg   [61:0] empty_44_reg_709;
wire   [61:0] zext_ln101_fu_399_p1;
reg   [61:0] zext_ln101_reg_714;
reg    ap_block_pp0_stage3_11001;
reg   [60:0] trunc_ln105_2_reg_719;
wire   [2:0] trunc_ln105_fu_430_p1;
reg   [2:0] trunc_ln105_reg_724;
reg   [60:0] trunc_ln106_2_reg_729;
wire   [2:0] trunc_ln106_fu_454_p1;
reg   [2:0] trunc_ln106_reg_734;
reg    ap_block_state5_io;
reg    ap_block_pp0_stage4_11001;
wire   [61:0] add_ln104_fu_472_p2;
reg   [61:0] add_ln104_reg_745;
reg    ap_block_state6_io;
reg    ap_block_pp0_stage5_11001;
wire   [2:0] trunc_ln104_fu_499_p1;
reg   [2:0] trunc_ln104_reg_756;
wire   [7:0] shl_ln104_fu_507_p2;
reg   [7:0] shl_ln104_reg_761;
reg   [60:0] trunc_ln104_1_reg_766;
reg   [63:0] gmem_addr_read_reg_771;
reg    ap_block_state76_pp0_stage75_iter0;
reg    ap_block_pp0_stage75_11001;
wire   [31:0] trunc_ln105_1_fu_539_p1;
reg   [31:0] trunc_ln105_1_reg_776;
reg    ap_block_state77_pp0_stage76_iter0;
reg    ap_block_pp0_stage76_11001;
reg   [63:0] gmem_addr_1_read_reg_781;
wire   [31:0] trunc_ln106_1_fu_559_p1;
reg   [31:0] trunc_ln106_1_reg_786;
wire    ap_CS_fsm_pp0_stage77;
wire    ap_block_pp0_stage77_11001;
wire   [31:0] bitcast_ln105_fu_563_p1;
wire    ap_CS_fsm_pp0_stage78;
wire    ap_block_pp0_stage78_11001;
wire   [31:0] bitcast_ln106_fu_567_p1;
reg   [31:0] add19_i_reg_801;
wire    ap_CS_fsm_pp0_stage83;
wire    ap_block_pp0_stage83_11001;
wire   [63:0] shl_ln104_1_fu_589_p2;
reg   [63:0] shl_ln104_1_reg_806;
reg    ap_block_state85_io;
reg    ap_block_pp0_stage84_11001;
reg    ap_enable_reg_pp0_iter0_reg;
wire  signed [63:0] sext_ln105_fu_462_p1;
wire  signed [63:0] sext_ln106_fu_477_p1;
wire  signed [63:0] sext_ln104_fu_595_p1;
reg    ap_block_state86_io;
reg    ap_block_pp0_stage85_11001;
wire    ap_block_pp0_stage85_01001;
reg   [30:0] j_fu_96;
wire   [30:0] add_ln101_fu_335_p2;
wire    ap_loop_init;
wire    ap_block_pp0_stage1;
reg   [30:0] i_fu_100;
reg   [30:0] indvar_fu_104;
wire    ap_block_pp0_stage2;
reg   [63:0] indvar_flatten144_fu_108;
wire   [63:0] add_ln98_fu_273_p2;
wire    ap_block_pp0_stage0;
wire    ap_block_pp0_stage78;
reg   [30:0] grp_fu_209_p0;
wire   [61:0] p_cast_fu_377_p1;
wire   [61:0] indvar_cast_fu_387_p1;
wire   [61:0] zext_ln98_2_fu_458_p1;
reg  signed [31:0] grp_fu_209_p1;
wire   [31:0] zext_ln101_1_fu_259_p1;
wire   [30:0] add_ln98_2_fu_290_p2;
wire   [32:0] j_2_cast22_fu_304_p1;
wire   [32:0] tmp3_fu_308_p2;
wire   [34:0] tmp1_fu_313_p3;
wire   [63:0] empty_46_fu_325_p2;
wire   [63:0] tmp1_cast_fu_321_p1;
wire   [30:0] add_ln98_1_fu_359_p2;
wire   [30:0] empty_43_fu_372_p2;
wire   [61:0] add_ln105_fu_402_p2;
wire   [63:0] shl_ln7_fu_407_p3;
wire   [63:0] add_ln105_1_fu_415_p2;
wire   [63:0] tmp_s_fu_391_p3;
wire   [63:0] add_ln106_1_fu_434_p2;
wire   [63:0] add_ln106_fu_439_p2;
wire   [63:0] shl_ln9_fu_487_p3;
wire   [63:0] add_ln104_1_fu_494_p2;
wire   [7:0] zext_ln104_1_fu_503_p1;
wire   [5:0] shl_ln105_1_fu_523_p3;
wire   [63:0] zext_ln105_fu_530_p1;
wire   [63:0] lshr_ln105_fu_534_p2;
wire    ap_block_pp0_stage77;
wire   [5:0] shl_ln8_fu_543_p3;
wire   [63:0] zext_ln106_fu_550_p1;
wire   [63:0] lshr_ln106_fu_554_p2;
wire   [31:0] bitcast_ln104_fu_571_p1;
wire   [5:0] shl_ln104_2_fu_578_p3;
wire   [63:0] zext_ln104_fu_574_p1;
wire   [63:0] zext_ln104_2_fu_585_p1;
wire    ap_block_pp0_stage78_00001;
reg    grp_fu_205_ce;
wire    ap_block_pp0_stage79_11001;
wire    ap_CS_fsm_pp0_stage79;
wire    ap_block_pp0_stage80_11001;
wire    ap_CS_fsm_pp0_stage80;
wire    ap_block_pp0_stage81_11001;
wire    ap_CS_fsm_pp0_stage81;
wire    ap_block_pp0_stage82_11001;
wire    ap_CS_fsm_pp0_stage82;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [149:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_pp0_stage14_subdone;
wire    ap_block_pp0_stage15_subdone;
wire    ap_block_pp0_stage16_subdone;
wire    ap_block_pp0_stage17_subdone;
wire    ap_block_pp0_stage18_subdone;
wire    ap_block_pp0_stage19_subdone;
wire    ap_block_pp0_stage20_subdone;
wire    ap_block_pp0_stage21_subdone;
wire    ap_block_pp0_stage22_subdone;
wire    ap_block_pp0_stage23_subdone;
wire    ap_block_pp0_stage24_subdone;
wire    ap_block_pp0_stage25_subdone;
wire    ap_block_pp0_stage26_subdone;
wire    ap_block_pp0_stage27_subdone;
wire    ap_block_pp0_stage28_subdone;
wire    ap_block_pp0_stage29_subdone;
wire    ap_block_pp0_stage30_subdone;
wire    ap_block_pp0_stage31_subdone;
wire    ap_block_pp0_stage32_subdone;
wire    ap_block_pp0_stage33_subdone;
wire    ap_block_pp0_stage34_subdone;
wire    ap_block_pp0_stage35_subdone;
wire    ap_block_pp0_stage36_subdone;
wire    ap_block_pp0_stage37_subdone;
wire    ap_block_pp0_stage38_subdone;
wire    ap_block_pp0_stage39_subdone;
wire    ap_block_pp0_stage40_subdone;
wire    ap_block_pp0_stage41_subdone;
wire    ap_block_pp0_stage42_subdone;
wire    ap_block_pp0_stage43_subdone;
wire    ap_block_pp0_stage44_subdone;
wire    ap_block_pp0_stage45_subdone;
wire    ap_block_pp0_stage46_subdone;
wire    ap_block_pp0_stage47_subdone;
wire    ap_block_pp0_stage48_subdone;
wire    ap_block_pp0_stage49_subdone;
wire    ap_block_pp0_stage50_subdone;
wire    ap_block_pp0_stage51_subdone;
wire    ap_block_pp0_stage52_subdone;
wire    ap_block_pp0_stage53_subdone;
wire    ap_block_pp0_stage54_subdone;
wire    ap_block_pp0_stage55_subdone;
wire    ap_block_pp0_stage56_subdone;
wire    ap_block_pp0_stage57_subdone;
wire    ap_block_pp0_stage58_subdone;
wire    ap_block_pp0_stage59_subdone;
wire    ap_block_pp0_stage60_subdone;
wire    ap_block_pp0_stage61_subdone;
wire    ap_block_pp0_stage62_subdone;
wire    ap_block_pp0_stage63_subdone;
wire    ap_block_pp0_stage64_subdone;
wire    ap_block_pp0_stage65_subdone;
wire    ap_block_pp0_stage66_subdone;
wire    ap_block_pp0_stage67_subdone;
wire    ap_block_pp0_stage68_subdone;
wire    ap_block_pp0_stage69_subdone;
wire    ap_block_pp0_stage70_subdone;
wire    ap_block_pp0_stage71_subdone;
wire    ap_block_pp0_stage72_subdone;
wire    ap_block_pp0_stage73_subdone;
wire    ap_block_pp0_stage74_subdone;
reg    ap_block_pp0_stage75_subdone;
reg    ap_block_pp0_stage76_subdone;
wire    ap_block_pp0_stage77_subdone;
wire    ap_block_pp0_stage78_subdone;
wire    ap_block_pp0_stage79_subdone;
wire    ap_block_pp0_stage80_subdone;
wire    ap_block_pp0_stage81_subdone;
wire    ap_block_pp0_stage82_subdone;
wire    ap_block_pp0_stage83_subdone;
reg    ap_block_pp0_stage84_subdone;
reg    ap_block_pp0_stage85_subdone;
wire    ap_block_pp0_stage86_subdone;
wire    ap_block_pp0_stage87_subdone;
wire    ap_block_pp0_stage88_subdone;
wire    ap_block_pp0_stage89_subdone;
wire    ap_block_pp0_stage90_subdone;
wire    ap_block_pp0_stage91_subdone;
wire    ap_block_pp0_stage92_subdone;
wire    ap_block_pp0_stage93_subdone;
wire    ap_block_pp0_stage94_subdone;
wire    ap_block_pp0_stage95_subdone;
wire    ap_block_pp0_stage96_subdone;
wire    ap_block_pp0_stage97_subdone;
wire    ap_block_pp0_stage98_subdone;
wire    ap_block_pp0_stage99_subdone;
wire    ap_block_pp0_stage100_subdone;
wire    ap_block_pp0_stage101_subdone;
wire    ap_block_pp0_stage102_subdone;
wire    ap_block_pp0_stage103_subdone;
wire    ap_block_pp0_stage104_subdone;
wire    ap_block_pp0_stage105_subdone;
wire    ap_block_pp0_stage106_subdone;
wire    ap_block_pp0_stage107_subdone;
wire    ap_block_pp0_stage108_subdone;
wire    ap_block_pp0_stage109_subdone;
wire    ap_block_pp0_stage110_subdone;
wire    ap_block_pp0_stage111_subdone;
wire    ap_block_pp0_stage112_subdone;
wire    ap_block_pp0_stage113_subdone;
wire    ap_block_pp0_stage114_subdone;
wire    ap_block_pp0_stage115_subdone;
wire    ap_block_pp0_stage116_subdone;
wire    ap_block_pp0_stage117_subdone;
wire    ap_block_pp0_stage118_subdone;
wire    ap_block_pp0_stage119_subdone;
wire    ap_block_pp0_stage120_subdone;
wire    ap_block_pp0_stage121_subdone;
wire    ap_block_pp0_stage122_subdone;
wire    ap_block_pp0_stage123_subdone;
wire    ap_block_pp0_stage124_subdone;
wire    ap_block_pp0_stage125_subdone;
wire    ap_block_pp0_stage126_subdone;
wire    ap_block_pp0_stage127_subdone;
wire    ap_block_pp0_stage128_subdone;
wire    ap_block_pp0_stage129_subdone;
wire    ap_block_pp0_stage130_subdone;
wire    ap_block_pp0_stage131_subdone;
wire    ap_block_pp0_stage132_subdone;
wire    ap_block_pp0_stage133_subdone;
wire    ap_block_pp0_stage134_subdone;
wire    ap_block_pp0_stage135_subdone;
wire    ap_block_pp0_stage136_subdone;
wire    ap_block_pp0_stage137_subdone;
wire    ap_block_pp0_stage138_subdone;
wire    ap_block_pp0_stage139_subdone;
wire    ap_block_pp0_stage140_subdone;
wire    ap_block_pp0_stage141_subdone;
wire    ap_block_pp0_stage142_subdone;
wire    ap_block_pp0_stage143_subdone;
wire    ap_block_pp0_stage144_subdone;
wire    ap_block_pp0_stage145_subdone;
wire    ap_block_pp0_stage146_subdone;
wire    ap_block_pp0_stage147_subdone;
wire    ap_block_pp0_stage148_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 150'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 j_fu_96 = 31'd0;
#0 i_fu_100 = 31'd0;
#0 indvar_fu_104 = 31'd0;
#0 indvar_flatten144_fu_108 = 64'd0;
#0 ap_done_reg = 1'b0;
end

cluster_mul_31ns_32s_62_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 62 ))
mul_31ns_32s_62_1_1_U35(
    .din0(grp_fu_209_p0),
    .din1(grp_fu_209_p1),
    .dout(grp_fu_209_p2)
);

cluster_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage3),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage3)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage149_subdone) & (1'b1 == ap_CS_fsm_pp0_stage149))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_fu_100 <= 31'd1;
    end else if (((icmp_ln98_fu_268_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        i_fu_100 <= select_ln98_2_fu_296_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten144_fu_108 <= 64'd0;
    end else if (((icmp_ln98_fu_268_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        indvar_flatten144_fu_108 <= add_ln98_fu_273_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_fu_104 <= 31'd0;
    end else if (((icmp_ln98_reg_684 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        indvar_fu_104 <= select_ln98_1_fu_365_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_fu_96 <= 31'd0;
    end else if (((icmp_ln98_fu_268_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        j_fu_96 <= add_ln101_fu_335_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        SAD_w_cast34_cast_reg_674 <= SAD_w_cast34_cast_fu_229_p1;
        integralImg_w_cast_cast_reg_669 <= integralImg_w_cast_cast_fu_225_p1;
        p_cast33_cast_reg_654 <= p_cast33_cast_fu_213_p1;
        zext_ln98_1_cast_reg_664[31 : 0] <= zext_ln98_1_cast_fu_221_p1[31 : 0];
        zext_ln98_cast_reg_659[33 : 0] <= zext_ln98_cast_fu_217_p1[33 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage83_11001) & (1'b1 == ap_CS_fsm_pp0_stage83))) begin
        add19_i_reg_801 <= grp_fu_889_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        add_ln104_reg_745 <= add_ln104_fu_472_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln106_2_reg_699 <= add_ln106_2_fu_329_p2;
        icmp_ln101_reg_679 <= icmp_ln101_fu_263_p2;
        icmp_ln98_reg_684 <= icmp_ln98_fu_268_p2;
        select_ln98_2_reg_693 <= select_ln98_2_fu_296_p3;
        select_ln98_reg_688 <= select_ln98_fu_282_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        empty_44_reg_709 <= grp_fu_209_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage76_11001) & (1'b1 == ap_CS_fsm_pp0_stage76))) begin
        gmem_addr_1_read_reg_781 <= m_axi_gmem_RDATA;
        trunc_ln105_1_reg_776 <= trunc_ln105_1_fu_539_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage75_11001) & (1'b1 == ap_CS_fsm_pp0_stage75))) begin
        gmem_addr_read_reg_771 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        select_ln98_1_reg_704 <= select_ln98_1_fu_365_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage84_11001) & (1'b1 == ap_CS_fsm_pp0_stage84))) begin
        shl_ln104_1_reg_806 <= shl_ln104_1_fu_589_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        shl_ln104_reg_761 <= shl_ln104_fu_507_p2;
        trunc_ln104_1_reg_766 <= {{add_ln104_1_fu_494_p2[63:3]}};
        trunc_ln104_reg_756 <= trunc_ln104_fu_499_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        trunc_ln105_2_reg_719 <= {{add_ln105_1_fu_415_p2[63:3]}};
        trunc_ln105_reg_724 <= trunc_ln105_fu_430_p1;
        trunc_ln106_2_reg_729 <= {{add_ln106_fu_439_p2[63:3]}};
        trunc_ln106_reg_734 <= trunc_ln106_fu_454_p1;
        zext_ln101_reg_714[30 : 0] <= zext_ln101_fu_399_p1[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage77_11001) & (1'b1 == ap_CS_fsm_pp0_stage77))) begin
        trunc_ln106_1_reg_786 <= trunc_ln106_1_fu_559_p1;
    end
end

always @ (*) begin
    if (((icmp_ln98_reg_684 == 1'd1) & (1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage149_subdone) & (1'b1 == ap_CS_fsm_pp0_stage149) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln98_reg_684 == 1'd0) & (1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln98_reg_684 == 1'd0) & (1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln98_reg_684 == 1'd0) & (1'b0 == ap_block_pp0_stage84) & (1'b1 == ap_CS_fsm_pp0_stage84) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln98_reg_684 == 1'd0) & (1'b0 == ap_block_pp0_stage76) & (1'b1 == ap_CS_fsm_pp0_stage76) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln98_reg_684 == 1'd0) & (1'b0 == ap_block_pp0_stage75) & (1'b1 == ap_CS_fsm_pp0_stage75) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln98_reg_684 == 1'd0) & (1'b0 == ap_block_pp0_stage85) & (1'b1 == ap_CS_fsm_pp0_stage85) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage82_11001) & (1'b1 == ap_CS_fsm_pp0_stage82)) | ((1'b0 == ap_block_pp0_stage81_11001) & (1'b1 == ap_CS_fsm_pp0_stage81)) | ((1'b0 == ap_block_pp0_stage80_11001) & (1'b1 == ap_CS_fsm_pp0_stage80)) | ((1'b0 == ap_block_pp0_stage79_11001) & (1'b1 == ap_CS_fsm_pp0_stage79)) | ((1'b0 == ap_block_pp0_stage83_11001) & (1'b1 == ap_CS_fsm_pp0_stage83)) | ((1'b0 == ap_block_pp0_stage78_11001) & (1'b1 == ap_CS_fsm_pp0_stage78)))) begin
        grp_fu_205_ce = 1'b1;
    end else begin
        grp_fu_205_ce = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            grp_fu_209_p0 = zext_ln98_2_fu_458_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_209_p0 = indvar_cast_fu_387_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_209_p0 = p_cast_fu_377_p1;
        end else begin
            grp_fu_209_p0 = 'bx;
        end
    end else begin
        grp_fu_209_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_209_p1 = SAD_w_cast34_cast_reg_674;
    end else if ((((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_209_p1 = integralImg_w_cast_cast_reg_669;
    end else begin
        grp_fu_209_p1 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln98_reg_684 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            m_axi_gmem_ARADDR = sext_ln106_fu_477_p1;
        end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            m_axi_gmem_ARADDR = sext_ln105_fu_462_p1;
        end else begin
            m_axi_gmem_ARADDR = 'bx;
        end
    end else begin
        m_axi_gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln98_reg_684 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln98_reg_684 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        m_axi_gmem_ARVALID = 1'b1;
    end else begin
        m_axi_gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln98_reg_684 == 1'd0) & (1'b0 == ap_block_pp0_stage84_11001) & (1'b1 == ap_CS_fsm_pp0_stage84) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        m_axi_gmem_AWVALID = 1'b1;
    end else begin
        m_axi_gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        m_axi_gmem_BREADY = 1'b1;
    end else begin
        m_axi_gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln98_reg_684 == 1'd0) & (1'b0 == ap_block_pp0_stage76_11001) & (1'b1 == ap_CS_fsm_pp0_stage76) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln98_reg_684 == 1'd0) & (1'b0 == ap_block_pp0_stage75_11001) & (1'b1 == ap_CS_fsm_pp0_stage75) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        m_axi_gmem_RREADY = 1'b1;
    end else begin
        m_axi_gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln98_reg_684 == 1'd0) & (1'b0 == ap_block_pp0_stage85_11001) & (1'b1 == ap_CS_fsm_pp0_stage85) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        m_axi_gmem_WVALID = 1'b1;
    end else begin
        m_axi_gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_idle_pp0_1to1 == 1'b1) & (ap_start_int == 1'b0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage3)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((1'b0 == ap_block_pp0_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((1'b0 == ap_block_pp0_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_pp0_stage21 : begin
            if ((1'b0 == ap_block_pp0_stage21_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end
        end
        ap_ST_fsm_pp0_stage22 : begin
            if ((1'b0 == ap_block_pp0_stage22_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end
        end
        ap_ST_fsm_pp0_stage23 : begin
            if ((1'b0 == ap_block_pp0_stage23_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end
        end
        ap_ST_fsm_pp0_stage24 : begin
            if ((1'b0 == ap_block_pp0_stage24_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end
        end
        ap_ST_fsm_pp0_stage25 : begin
            if ((1'b0 == ap_block_pp0_stage25_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end
        end
        ap_ST_fsm_pp0_stage26 : begin
            if ((1'b0 == ap_block_pp0_stage26_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end
        end
        ap_ST_fsm_pp0_stage27 : begin
            if ((1'b0 == ap_block_pp0_stage27_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end
        end
        ap_ST_fsm_pp0_stage28 : begin
            if ((1'b0 == ap_block_pp0_stage28_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end
        end
        ap_ST_fsm_pp0_stage29 : begin
            if ((1'b0 == ap_block_pp0_stage29_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end
        end
        ap_ST_fsm_pp0_stage30 : begin
            if ((1'b0 == ap_block_pp0_stage30_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end
        end
        ap_ST_fsm_pp0_stage31 : begin
            if ((1'b0 == ap_block_pp0_stage31_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end
        end
        ap_ST_fsm_pp0_stage32 : begin
            if ((1'b0 == ap_block_pp0_stage32_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage32;
            end
        end
        ap_ST_fsm_pp0_stage33 : begin
            if ((1'b0 == ap_block_pp0_stage33_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage33;
            end
        end
        ap_ST_fsm_pp0_stage34 : begin
            if ((1'b0 == ap_block_pp0_stage34_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage34;
            end
        end
        ap_ST_fsm_pp0_stage35 : begin
            if ((1'b0 == ap_block_pp0_stage35_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage35;
            end
        end
        ap_ST_fsm_pp0_stage36 : begin
            if ((1'b0 == ap_block_pp0_stage36_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage36;
            end
        end
        ap_ST_fsm_pp0_stage37 : begin
            if ((1'b0 == ap_block_pp0_stage37_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage37;
            end
        end
        ap_ST_fsm_pp0_stage38 : begin
            if ((1'b0 == ap_block_pp0_stage38_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage38;
            end
        end
        ap_ST_fsm_pp0_stage39 : begin
            if ((1'b0 == ap_block_pp0_stage39_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage39;
            end
        end
        ap_ST_fsm_pp0_stage40 : begin
            if ((1'b0 == ap_block_pp0_stage40_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage40;
            end
        end
        ap_ST_fsm_pp0_stage41 : begin
            if ((1'b0 == ap_block_pp0_stage41_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage41;
            end
        end
        ap_ST_fsm_pp0_stage42 : begin
            if ((1'b0 == ap_block_pp0_stage42_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage42;
            end
        end
        ap_ST_fsm_pp0_stage43 : begin
            if ((1'b0 == ap_block_pp0_stage43_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage43;
            end
        end
        ap_ST_fsm_pp0_stage44 : begin
            if ((1'b0 == ap_block_pp0_stage44_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage44;
            end
        end
        ap_ST_fsm_pp0_stage45 : begin
            if ((1'b0 == ap_block_pp0_stage45_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage45;
            end
        end
        ap_ST_fsm_pp0_stage46 : begin
            if ((1'b0 == ap_block_pp0_stage46_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage46;
            end
        end
        ap_ST_fsm_pp0_stage47 : begin
            if ((1'b0 == ap_block_pp0_stage47_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage47;
            end
        end
        ap_ST_fsm_pp0_stage48 : begin
            if ((1'b0 == ap_block_pp0_stage48_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage48;
            end
        end
        ap_ST_fsm_pp0_stage49 : begin
            if ((1'b0 == ap_block_pp0_stage49_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage49;
            end
        end
        ap_ST_fsm_pp0_stage50 : begin
            if ((1'b0 == ap_block_pp0_stage50_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage50;
            end
        end
        ap_ST_fsm_pp0_stage51 : begin
            if ((1'b0 == ap_block_pp0_stage51_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage51;
            end
        end
        ap_ST_fsm_pp0_stage52 : begin
            if ((1'b0 == ap_block_pp0_stage52_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage52;
            end
        end
        ap_ST_fsm_pp0_stage53 : begin
            if ((1'b0 == ap_block_pp0_stage53_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage53;
            end
        end
        ap_ST_fsm_pp0_stage54 : begin
            if ((1'b0 == ap_block_pp0_stage54_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage54;
            end
        end
        ap_ST_fsm_pp0_stage55 : begin
            if ((1'b0 == ap_block_pp0_stage55_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage56;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage55;
            end
        end
        ap_ST_fsm_pp0_stage56 : begin
            if ((1'b0 == ap_block_pp0_stage56_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage57;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage56;
            end
        end
        ap_ST_fsm_pp0_stage57 : begin
            if ((1'b0 == ap_block_pp0_stage57_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage58;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage57;
            end
        end
        ap_ST_fsm_pp0_stage58 : begin
            if ((1'b0 == ap_block_pp0_stage58_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage59;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage58;
            end
        end
        ap_ST_fsm_pp0_stage59 : begin
            if ((1'b0 == ap_block_pp0_stage59_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage60;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage59;
            end
        end
        ap_ST_fsm_pp0_stage60 : begin
            if ((1'b0 == ap_block_pp0_stage60_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage60;
            end
        end
        ap_ST_fsm_pp0_stage61 : begin
            if ((1'b0 == ap_block_pp0_stage61_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage62;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage61;
            end
        end
        ap_ST_fsm_pp0_stage62 : begin
            if ((1'b0 == ap_block_pp0_stage62_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage63;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage62;
            end
        end
        ap_ST_fsm_pp0_stage63 : begin
            if ((1'b0 == ap_block_pp0_stage63_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage64;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage63;
            end
        end
        ap_ST_fsm_pp0_stage64 : begin
            if ((1'b0 == ap_block_pp0_stage64_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage65;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage64;
            end
        end
        ap_ST_fsm_pp0_stage65 : begin
            if ((1'b0 == ap_block_pp0_stage65_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage66;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage65;
            end
        end
        ap_ST_fsm_pp0_stage66 : begin
            if ((1'b0 == ap_block_pp0_stage66_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage67;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage66;
            end
        end
        ap_ST_fsm_pp0_stage67 : begin
            if ((1'b0 == ap_block_pp0_stage67_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage68;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage67;
            end
        end
        ap_ST_fsm_pp0_stage68 : begin
            if ((1'b0 == ap_block_pp0_stage68_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage69;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage68;
            end
        end
        ap_ST_fsm_pp0_stage69 : begin
            if ((1'b0 == ap_block_pp0_stage69_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage70;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage69;
            end
        end
        ap_ST_fsm_pp0_stage70 : begin
            if ((1'b0 == ap_block_pp0_stage70_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage71;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage70;
            end
        end
        ap_ST_fsm_pp0_stage71 : begin
            if ((1'b0 == ap_block_pp0_stage71_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage72;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage71;
            end
        end
        ap_ST_fsm_pp0_stage72 : begin
            if ((1'b0 == ap_block_pp0_stage72_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage73;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage72;
            end
        end
        ap_ST_fsm_pp0_stage73 : begin
            if ((1'b0 == ap_block_pp0_stage73_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage74;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage73;
            end
        end
        ap_ST_fsm_pp0_stage74 : begin
            if ((1'b0 == ap_block_pp0_stage74_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage75;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage74;
            end
        end
        ap_ST_fsm_pp0_stage75 : begin
            if ((1'b0 == ap_block_pp0_stage75_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage76;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage75;
            end
        end
        ap_ST_fsm_pp0_stage76 : begin
            if ((1'b0 == ap_block_pp0_stage76_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage77;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage76;
            end
        end
        ap_ST_fsm_pp0_stage77 : begin
            if ((1'b0 == ap_block_pp0_stage77_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage78;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage77;
            end
        end
        ap_ST_fsm_pp0_stage78 : begin
            if ((1'b0 == ap_block_pp0_stage78_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage79;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage78;
            end
        end
        ap_ST_fsm_pp0_stage79 : begin
            if ((1'b0 == ap_block_pp0_stage79_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage80;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage79;
            end
        end
        ap_ST_fsm_pp0_stage80 : begin
            if ((1'b0 == ap_block_pp0_stage80_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage81;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage80;
            end
        end
        ap_ST_fsm_pp0_stage81 : begin
            if ((1'b0 == ap_block_pp0_stage81_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage82;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage81;
            end
        end
        ap_ST_fsm_pp0_stage82 : begin
            if ((1'b0 == ap_block_pp0_stage82_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage83;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage82;
            end
        end
        ap_ST_fsm_pp0_stage83 : begin
            if ((1'b0 == ap_block_pp0_stage83_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage84;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage83;
            end
        end
        ap_ST_fsm_pp0_stage84 : begin
            if ((1'b0 == ap_block_pp0_stage84_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage85;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage84;
            end
        end
        ap_ST_fsm_pp0_stage85 : begin
            if ((1'b0 == ap_block_pp0_stage85_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage86;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage85;
            end
        end
        ap_ST_fsm_pp0_stage86 : begin
            if ((1'b0 == ap_block_pp0_stage86_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage87;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage86;
            end
        end
        ap_ST_fsm_pp0_stage87 : begin
            if ((1'b0 == ap_block_pp0_stage87_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage88;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage87;
            end
        end
        ap_ST_fsm_pp0_stage88 : begin
            if ((1'b0 == ap_block_pp0_stage88_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage89;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage88;
            end
        end
        ap_ST_fsm_pp0_stage89 : begin
            if ((1'b0 == ap_block_pp0_stage89_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage90;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage89;
            end
        end
        ap_ST_fsm_pp0_stage90 : begin
            if ((1'b0 == ap_block_pp0_stage90_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage91;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage90;
            end
        end
        ap_ST_fsm_pp0_stage91 : begin
            if ((1'b0 == ap_block_pp0_stage91_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage92;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage91;
            end
        end
        ap_ST_fsm_pp0_stage92 : begin
            if ((1'b0 == ap_block_pp0_stage92_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage93;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage92;
            end
        end
        ap_ST_fsm_pp0_stage93 : begin
            if ((1'b0 == ap_block_pp0_stage93_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage94;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage93;
            end
        end
        ap_ST_fsm_pp0_stage94 : begin
            if ((1'b0 == ap_block_pp0_stage94_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage95;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage94;
            end
        end
        ap_ST_fsm_pp0_stage95 : begin
            if ((1'b0 == ap_block_pp0_stage95_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage96;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage95;
            end
        end
        ap_ST_fsm_pp0_stage96 : begin
            if ((1'b0 == ap_block_pp0_stage96_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage97;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage96;
            end
        end
        ap_ST_fsm_pp0_stage97 : begin
            if ((1'b0 == ap_block_pp0_stage97_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage98;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage97;
            end
        end
        ap_ST_fsm_pp0_stage98 : begin
            if ((1'b0 == ap_block_pp0_stage98_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage99;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage98;
            end
        end
        ap_ST_fsm_pp0_stage99 : begin
            if ((1'b0 == ap_block_pp0_stage99_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage100;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage99;
            end
        end
        ap_ST_fsm_pp0_stage100 : begin
            if ((1'b0 == ap_block_pp0_stage100_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage101;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage100;
            end
        end
        ap_ST_fsm_pp0_stage101 : begin
            if ((1'b0 == ap_block_pp0_stage101_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage102;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage101;
            end
        end
        ap_ST_fsm_pp0_stage102 : begin
            if ((1'b0 == ap_block_pp0_stage102_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage103;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage102;
            end
        end
        ap_ST_fsm_pp0_stage103 : begin
            if ((1'b0 == ap_block_pp0_stage103_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage104;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage103;
            end
        end
        ap_ST_fsm_pp0_stage104 : begin
            if ((1'b0 == ap_block_pp0_stage104_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage105;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage104;
            end
        end
        ap_ST_fsm_pp0_stage105 : begin
            if ((1'b0 == ap_block_pp0_stage105_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage106;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage105;
            end
        end
        ap_ST_fsm_pp0_stage106 : begin
            if ((1'b0 == ap_block_pp0_stage106_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage107;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage106;
            end
        end
        ap_ST_fsm_pp0_stage107 : begin
            if ((1'b0 == ap_block_pp0_stage107_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage108;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage107;
            end
        end
        ap_ST_fsm_pp0_stage108 : begin
            if ((1'b0 == ap_block_pp0_stage108_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage109;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage108;
            end
        end
        ap_ST_fsm_pp0_stage109 : begin
            if ((1'b0 == ap_block_pp0_stage109_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage110;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage109;
            end
        end
        ap_ST_fsm_pp0_stage110 : begin
            if ((1'b0 == ap_block_pp0_stage110_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage111;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage110;
            end
        end
        ap_ST_fsm_pp0_stage111 : begin
            if ((1'b0 == ap_block_pp0_stage111_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage112;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage111;
            end
        end
        ap_ST_fsm_pp0_stage112 : begin
            if ((1'b0 == ap_block_pp0_stage112_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage113;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage112;
            end
        end
        ap_ST_fsm_pp0_stage113 : begin
            if ((1'b0 == ap_block_pp0_stage113_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage114;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage113;
            end
        end
        ap_ST_fsm_pp0_stage114 : begin
            if ((1'b0 == ap_block_pp0_stage114_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage115;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage114;
            end
        end
        ap_ST_fsm_pp0_stage115 : begin
            if ((1'b0 == ap_block_pp0_stage115_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage116;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage115;
            end
        end
        ap_ST_fsm_pp0_stage116 : begin
            if ((1'b0 == ap_block_pp0_stage116_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage117;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage116;
            end
        end
        ap_ST_fsm_pp0_stage117 : begin
            if ((1'b0 == ap_block_pp0_stage117_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage118;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage117;
            end
        end
        ap_ST_fsm_pp0_stage118 : begin
            if ((1'b0 == ap_block_pp0_stage118_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage119;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage118;
            end
        end
        ap_ST_fsm_pp0_stage119 : begin
            if ((1'b0 == ap_block_pp0_stage119_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage120;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage119;
            end
        end
        ap_ST_fsm_pp0_stage120 : begin
            if ((1'b0 == ap_block_pp0_stage120_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage121;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage120;
            end
        end
        ap_ST_fsm_pp0_stage121 : begin
            if ((1'b0 == ap_block_pp0_stage121_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage122;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage121;
            end
        end
        ap_ST_fsm_pp0_stage122 : begin
            if ((1'b0 == ap_block_pp0_stage122_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage123;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage122;
            end
        end
        ap_ST_fsm_pp0_stage123 : begin
            if ((1'b0 == ap_block_pp0_stage123_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage124;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage123;
            end
        end
        ap_ST_fsm_pp0_stage124 : begin
            if ((1'b0 == ap_block_pp0_stage124_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage125;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage124;
            end
        end
        ap_ST_fsm_pp0_stage125 : begin
            if ((1'b0 == ap_block_pp0_stage125_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage126;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage125;
            end
        end
        ap_ST_fsm_pp0_stage126 : begin
            if ((1'b0 == ap_block_pp0_stage126_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage127;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage126;
            end
        end
        ap_ST_fsm_pp0_stage127 : begin
            if ((1'b0 == ap_block_pp0_stage127_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage128;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage127;
            end
        end
        ap_ST_fsm_pp0_stage128 : begin
            if ((1'b0 == ap_block_pp0_stage128_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage129;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage128;
            end
        end
        ap_ST_fsm_pp0_stage129 : begin
            if ((1'b0 == ap_block_pp0_stage129_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage130;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage129;
            end
        end
        ap_ST_fsm_pp0_stage130 : begin
            if ((1'b0 == ap_block_pp0_stage130_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage131;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage130;
            end
        end
        ap_ST_fsm_pp0_stage131 : begin
            if ((1'b0 == ap_block_pp0_stage131_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage132;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage131;
            end
        end
        ap_ST_fsm_pp0_stage132 : begin
            if ((1'b0 == ap_block_pp0_stage132_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage133;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage132;
            end
        end
        ap_ST_fsm_pp0_stage133 : begin
            if ((1'b0 == ap_block_pp0_stage133_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage134;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage133;
            end
        end
        ap_ST_fsm_pp0_stage134 : begin
            if ((1'b0 == ap_block_pp0_stage134_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage135;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage134;
            end
        end
        ap_ST_fsm_pp0_stage135 : begin
            if ((1'b0 == ap_block_pp0_stage135_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage136;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage135;
            end
        end
        ap_ST_fsm_pp0_stage136 : begin
            if ((1'b0 == ap_block_pp0_stage136_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage137;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage136;
            end
        end
        ap_ST_fsm_pp0_stage137 : begin
            if ((1'b0 == ap_block_pp0_stage137_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage138;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage137;
            end
        end
        ap_ST_fsm_pp0_stage138 : begin
            if ((1'b0 == ap_block_pp0_stage138_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage139;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage138;
            end
        end
        ap_ST_fsm_pp0_stage139 : begin
            if ((1'b0 == ap_block_pp0_stage139_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage140;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage139;
            end
        end
        ap_ST_fsm_pp0_stage140 : begin
            if ((1'b0 == ap_block_pp0_stage140_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage141;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage140;
            end
        end
        ap_ST_fsm_pp0_stage141 : begin
            if ((1'b0 == ap_block_pp0_stage141_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage142;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage141;
            end
        end
        ap_ST_fsm_pp0_stage142 : begin
            if ((1'b0 == ap_block_pp0_stage142_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage143;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage142;
            end
        end
        ap_ST_fsm_pp0_stage143 : begin
            if ((1'b0 == ap_block_pp0_stage143_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage144;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage143;
            end
        end
        ap_ST_fsm_pp0_stage144 : begin
            if ((1'b0 == ap_block_pp0_stage144_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage145;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage144;
            end
        end
        ap_ST_fsm_pp0_stage145 : begin
            if ((1'b0 == ap_block_pp0_stage145_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage146;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage145;
            end
        end
        ap_ST_fsm_pp0_stage146 : begin
            if ((1'b0 == ap_block_pp0_stage146_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage147;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage146;
            end
        end
        ap_ST_fsm_pp0_stage147 : begin
            if ((1'b0 == ap_block_pp0_stage147_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage148;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage147;
            end
        end
        ap_ST_fsm_pp0_stage148 : begin
            if ((1'b0 == ap_block_pp0_stage148_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage149;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage148;
            end
        end
        ap_ST_fsm_pp0_stage149 : begin
            if ((1'b0 == ap_block_pp0_stage149_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage149;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign SAD_w_cast34_cast_fu_229_p1 = $signed(SAD_w_cast34);

assign add_ln101_fu_335_p2 = (select_ln98_fu_282_p3 + 31'd1);

assign add_ln104_1_fu_494_p2 = (shl_ln9_fu_487_p3 + integralImg_data);

assign add_ln104_fu_472_p2 = (zext_ln101_reg_714 + grp_fu_209_p2);

assign add_ln105_1_fu_415_p2 = (shl_ln7_fu_407_p3 + integralImg_data);

assign add_ln105_fu_402_p2 = (zext_ln101_fu_399_p1 + empty_44_reg_709);

assign add_ln106_1_fu_434_p2 = ($signed(p_cast33_cast_reg_654) + $signed(tmp_s_fu_391_p3));

assign add_ln106_2_fu_329_p2 = (empty_46_fu_325_p2 + tmp1_cast_fu_321_p1);

assign add_ln106_fu_439_p2 = (add_ln106_2_reg_699 + add_ln106_1_fu_434_p2);

assign add_ln98_1_fu_359_p2 = (indvar_fu_104 + 31'd1);

assign add_ln98_2_fu_290_p2 = (i_fu_100 + 31'd1);

assign add_ln98_fu_273_p2 = (indvar_flatten144_fu_108 + 64'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage149 = ap_CS_fsm[32'd149];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage75 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_pp0_stage76 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_pp0_stage77 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_pp0_stage78 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_pp0_stage79 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_pp0_stage80 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_pp0_stage81 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_pp0_stage82 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_pp0_stage83 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_pp0_stage84 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_pp0_stage85 = ap_CS_fsm[32'd85];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage100_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage101_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage102_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage103_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage104_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage105_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage106_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage107_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage108_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage109_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage110_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage111_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage112_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage113_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage114_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage115_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage116_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage117_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage118_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage119_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage120_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage121_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage122_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage123_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage124_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage125_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage126_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage127_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage128_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage129_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage130_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage131_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage132_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage133_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage134_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage135_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage136_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage137_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage138_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage139_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage140_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage141_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage142_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage143_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage144_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage145_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage146_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage147_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage148_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage149_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage29_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage32_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage33_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage34_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage35_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage36_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage37_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage38_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage39_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state154_pp0_stage3_iter1));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state154_pp0_stage3_iter1));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage40_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage41_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage42_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage43_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage44_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage45_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage46_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage47_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage48_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage49_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state5_io));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state5_io));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage50_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage51_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage52_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage53_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage54_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage55_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage56_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage57_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage58_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage59_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state6_io));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state6_io));
end

assign ap_block_pp0_stage60_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage61_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage62_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage63_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage64_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage65_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage66_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage67_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage68_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage69_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage70_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage71_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage72_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage73_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage74_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage75 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage75_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state76_pp0_stage75_iter0));
end

always @ (*) begin
    ap_block_pp0_stage75_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state76_pp0_stage75_iter0));
end

assign ap_block_pp0_stage76 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage76_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state77_pp0_stage76_iter0));
end

always @ (*) begin
    ap_block_pp0_stage76_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state77_pp0_stage76_iter0));
end

assign ap_block_pp0_stage77 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage77_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage77_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage78 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage78_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage78_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage78_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage79_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage79_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage80_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage80_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage81_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage81_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage82_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage82_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage83_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage83_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage84 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage84_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state85_io));
end

always @ (*) begin
    ap_block_pp0_stage84_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state85_io));
end

assign ap_block_pp0_stage85 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage85_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage85_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state86_io));
end

always @ (*) begin
    ap_block_pp0_stage85_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state86_io));
end

assign ap_block_pp0_stage86_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage87_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage88_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage89_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage90_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage91_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage92_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage93_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage94_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage95_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage96_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage97_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage98_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage99_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state154_pp0_stage3_iter1 = (m_axi_gmem_BVALID == 1'b0);
end

always @ (*) begin
    ap_block_state5_io = ((icmp_ln98_reg_684 == 1'd0) & (m_axi_gmem_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state6_io = ((icmp_ln98_reg_684 == 1'd0) & (m_axi_gmem_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state76_pp0_stage75_iter0 = ((icmp_ln98_reg_684 == 1'd0) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state77_pp0_stage76_iter0 = ((icmp_ln98_reg_684 == 1'd0) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state85_io = ((icmp_ln98_reg_684 == 1'd0) & (m_axi_gmem_AWREADY == 1'b0));
end

always @ (*) begin
    ap_block_state86_io = ((icmp_ln98_reg_684 == 1'd0) & (m_axi_gmem_WREADY == 1'b0));
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage3;

assign ap_ready = ap_ready_sig;

assign bitcast_ln104_fu_571_p1 = add19_i_reg_801;

assign bitcast_ln105_fu_563_p1 = trunc_ln105_1_reg_776;

assign bitcast_ln106_fu_567_p1 = trunc_ln106_1_reg_786;

assign empty_43_fu_372_p2 = ($signed(select_ln98_2_reg_693) + $signed(31'd2147483647));

assign empty_46_fu_325_p2 = (SAD_data - zext_ln98_cast_reg_659);

assign grp_fu_889_p_ce = grp_fu_205_ce;

assign grp_fu_889_p_din0 = bitcast_ln105_fu_563_p1;

assign grp_fu_889_p_din1 = bitcast_ln106_fu_567_p1;

assign grp_fu_889_p_opcode = 2'd0;

assign icmp_ln101_fu_263_p2 = (($signed(zext_ln101_1_fu_259_p1) < $signed(SAD_w)) ? 1'b1 : 1'b0);

assign icmp_ln98_fu_268_p2 = ((indvar_flatten144_fu_108 == bound139) ? 1'b1 : 1'b0);

assign indvar_cast_fu_387_p1 = select_ln98_1_reg_704;

assign integralImg_w_cast_cast_fu_225_p1 = $signed(integralImg_w_cast);

assign j_2_cast22_fu_304_p1 = select_ln98_fu_282_p3;

assign lshr_ln105_fu_534_p2 = gmem_addr_read_reg_771 >> zext_ln105_fu_530_p1;

assign lshr_ln106_fu_554_p2 = gmem_addr_1_read_reg_781 >> zext_ln106_fu_550_p1;

assign m_axi_gmem_ARBURST = 2'd0;

assign m_axi_gmem_ARCACHE = 4'd0;

assign m_axi_gmem_ARID = 1'd0;

assign m_axi_gmem_ARLEN = 64'd1;

assign m_axi_gmem_ARLOCK = 2'd0;

assign m_axi_gmem_ARPROT = 3'd0;

assign m_axi_gmem_ARQOS = 4'd0;

assign m_axi_gmem_ARREGION = 4'd0;

assign m_axi_gmem_ARSIZE = 3'd0;

assign m_axi_gmem_ARUSER = 1'd0;

assign m_axi_gmem_AWADDR = sext_ln104_fu_595_p1;

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLEN = 64'd1;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_WDATA = shl_ln104_1_reg_806;

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WSTRB = shl_ln104_reg_761;

assign m_axi_gmem_WUSER = 1'd0;

assign p_cast33_cast_fu_213_p1 = $signed(p_cast33);

assign p_cast_fu_377_p1 = empty_43_fu_372_p2;

assign select_ln98_1_fu_365_p3 = ((icmp_ln101_reg_679[0:0] == 1'b1) ? indvar_fu_104 : add_ln98_1_fu_359_p2);

assign select_ln98_2_fu_296_p3 = ((icmp_ln101_fu_263_p2[0:0] == 1'b1) ? i_fu_100 : add_ln98_2_fu_290_p2);

assign select_ln98_fu_282_p3 = ((icmp_ln101_fu_263_p2[0:0] == 1'b1) ? j_fu_96 : 31'd0);

assign sext_ln104_fu_595_p1 = $signed(trunc_ln104_1_reg_766);

assign sext_ln105_fu_462_p1 = $signed(trunc_ln105_2_reg_719);

assign sext_ln106_fu_477_p1 = $signed(trunc_ln106_2_reg_729);

assign shl_ln104_1_fu_589_p2 = zext_ln104_fu_574_p1 << zext_ln104_2_fu_585_p1;

assign shl_ln104_2_fu_578_p3 = {{trunc_ln104_reg_756}, {3'd0}};

assign shl_ln104_fu_507_p2 = 8'd15 << zext_ln104_1_fu_503_p1;

assign shl_ln105_1_fu_523_p3 = {{trunc_ln105_reg_724}, {3'd0}};

assign shl_ln7_fu_407_p3 = {{add_ln105_fu_402_p2}, {2'd0}};

assign shl_ln8_fu_543_p3 = {{trunc_ln106_reg_734}, {3'd0}};

assign shl_ln9_fu_487_p3 = {{add_ln104_reg_745}, {2'd0}};

assign tmp1_cast_fu_321_p1 = tmp1_fu_313_p3;

assign tmp1_fu_313_p3 = {{tmp3_fu_308_p2}, {2'd0}};

assign tmp3_fu_308_p2 = (j_2_cast22_fu_304_p1 + zext_ln98_1_cast_reg_664);

assign tmp_s_fu_391_p3 = {{grp_fu_209_p2}, {2'd0}};

assign trunc_ln104_fu_499_p1 = add_ln104_1_fu_494_p2[2:0];

assign trunc_ln105_1_fu_539_p1 = lshr_ln105_fu_534_p2[31:0];

assign trunc_ln105_fu_430_p1 = add_ln105_1_fu_415_p2[2:0];

assign trunc_ln106_1_fu_559_p1 = lshr_ln106_fu_554_p2[31:0];

assign trunc_ln106_fu_454_p1 = add_ln106_fu_439_p2[2:0];

assign zext_ln101_1_fu_259_p1 = j_fu_96;

assign zext_ln101_fu_399_p1 = select_ln98_reg_688;

assign zext_ln104_1_fu_503_p1 = trunc_ln104_fu_499_p1;

assign zext_ln104_2_fu_585_p1 = shl_ln104_2_fu_578_p3;

assign zext_ln104_fu_574_p1 = bitcast_ln104_fu_571_p1;

assign zext_ln105_fu_530_p1 = shl_ln105_1_fu_523_p3;

assign zext_ln106_fu_550_p1 = shl_ln8_fu_543_p3;

assign zext_ln98_1_cast_fu_221_p1 = zext_ln98_1;

assign zext_ln98_2_fu_458_p1 = select_ln98_2_reg_693;

assign zext_ln98_cast_fu_217_p1 = zext_ln98;

always @ (posedge ap_clk) begin
    zext_ln98_cast_reg_659[63:34] <= 30'b000000000000000000000000000000;
    zext_ln98_1_cast_reg_664[32] <= 1'b0;
    zext_ln101_reg_714[61:31] <= 31'b0000000000000000000000000000000;
end

endmodule //cluster_cluster_Pipeline_VITIS_LOOP_98_2_VITIS_LOOP_101_3
