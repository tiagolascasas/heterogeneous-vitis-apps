// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module cluster_cluster_Pipeline_VITIS_LOOP_137_1_VITIS_LOOP_140_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        sub2_i,
        bound149,
        sext_ln137_1,
        integralImg_w_cast,
        integralImg_data,
        sext_ln137,
        retSAD_data,
        grp_fu_889_p_din0,
        grp_fu_889_p_din1,
        grp_fu_889_p_opcode,
        grp_fu_889_p_dout0,
        grp_fu_889_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 4'd1;
parameter    ap_ST_fsm_pp0_stage1 = 4'd2;
parameter    ap_ST_fsm_pp0_stage2 = 4'd4;
parameter    ap_ST_fsm_pp0_stage3 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [63:0] m_axi_gmem_WDATA;
output  [7:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [63:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [8:0] m_axi_gmem_RFIFONUM;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
input  [31:0] sub2_i;
input  [63:0] bound149;
input  [31:0] sext_ln137_1;
input  [31:0] integralImg_w_cast;
input  [63:0] integralImg_data;
input  [31:0] sext_ln137;
input  [63:0] retSAD_data;
output  [31:0] grp_fu_889_p_din0;
output  [31:0] grp_fu_889_p_din1;
output  [1:0] grp_fu_889_p_opcode;
input  [31:0] grp_fu_889_p_dout0;
output   grp_fu_889_p_ce;

reg ap_idle;
reg m_axi_gmem_AWVALID;
reg m_axi_gmem_WVALID;
reg m_axi_gmem_ARVALID;
reg[63:0] m_axi_gmem_ARADDR;
reg m_axi_gmem_RREADY;
reg m_axi_gmem_BREADY;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage3;
reg    ap_block_state76_pp0_stage3_iter18;
reg    ap_block_state168_pp0_stage3_iter41;
reg    ap_block_pp0_stage3_subdone;
reg   [0:0] icmp_ln137_reg_777;
reg    ap_condition_exit_pp0_iter0_stage3;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem_blk_n_AR;
wire    ap_block_pp0_stage0;
reg    gmem_blk_n_R;
wire    ap_block_pp0_stage3;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
reg    gmem_blk_n_AW;
reg    gmem_blk_n_W;
reg    gmem_blk_n_B;
reg    ap_block_state5_io;
reg    ap_block_state77_pp0_stage0_iter19;
reg    ap_block_pp0_stage0_11001;
wire  signed [61:0] sext_ln137_cast_fu_217_p1;
reg  signed [61:0] sext_ln137_cast_reg_748;
wire  signed [61:0] integralImg_w_cast_cast_fu_221_p1;
reg  signed [61:0] integralImg_w_cast_cast_reg_753;
wire  signed [32:0] sext_ln137_1_cast_fu_225_p1;
reg  signed [32:0] sext_ln137_1_cast_reg_759;
reg   [30:0] i_2_reg_765;
reg    ap_block_state78_pp0_stage1_iter19;
reg    ap_block_pp0_stage1_11001;
wire   [0:0] icmp_ln140_fu_254_p2;
reg   [0:0] icmp_ln140_reg_770;
wire   [0:0] icmp_ln137_fu_259_p2;
wire   [30:0] select_ln137_fu_275_p3;
reg   [30:0] select_ln137_reg_781;
reg    ap_block_state79_pp0_stage2_iter19;
reg    ap_block_pp0_stage2_11001;
reg   [30:0] select_ln137_reg_781_pp0_iter1_reg;
reg   [30:0] select_ln137_reg_781_pp0_iter2_reg;
reg   [30:0] select_ln137_reg_781_pp0_iter3_reg;
reg   [30:0] select_ln137_reg_781_pp0_iter4_reg;
reg   [30:0] select_ln137_reg_781_pp0_iter5_reg;
reg   [30:0] select_ln137_reg_781_pp0_iter6_reg;
reg   [30:0] select_ln137_reg_781_pp0_iter7_reg;
reg   [30:0] select_ln137_reg_781_pp0_iter8_reg;
reg   [30:0] select_ln137_reg_781_pp0_iter9_reg;
reg   [30:0] select_ln137_reg_781_pp0_iter10_reg;
reg   [30:0] select_ln137_reg_781_pp0_iter11_reg;
reg   [30:0] select_ln137_reg_781_pp0_iter12_reg;
reg   [30:0] select_ln137_reg_781_pp0_iter13_reg;
reg   [30:0] select_ln137_reg_781_pp0_iter14_reg;
reg   [30:0] select_ln137_reg_781_pp0_iter15_reg;
reg   [30:0] select_ln137_reg_781_pp0_iter16_reg;
reg   [30:0] select_ln137_reg_781_pp0_iter17_reg;
reg   [30:0] select_ln137_reg_781_pp0_iter18_reg;
reg   [30:0] select_ln137_reg_781_pp0_iter19_reg;
reg   [30:0] select_ln137_reg_781_pp0_iter20_reg;
reg   [30:0] select_ln137_reg_781_pp0_iter21_reg;
reg   [30:0] select_ln137_reg_781_pp0_iter22_reg;
reg   [30:0] select_ln137_reg_781_pp0_iter23_reg;
wire   [61:0] mul_ln144_fu_213_p2;
reg   [61:0] mul_ln144_reg_787;
reg   [30:0] j_load_reg_793;
reg    ap_block_pp0_stage3_11001;
wire   [30:0] indvars_iv_next16_i24162_fu_298_p2;
reg   [30:0] indvars_iv_next16_i24162_reg_798;
wire   [30:0] select_ln137_2_fu_304_p3;
reg   [30:0] select_ln137_2_reg_803;
reg   [30:0] select_ln137_2_reg_803_pp0_iter1_reg;
reg   [30:0] select_ln137_2_reg_803_pp0_iter2_reg;
reg   [30:0] select_ln137_2_reg_803_pp0_iter3_reg;
reg   [30:0] select_ln137_2_reg_803_pp0_iter4_reg;
reg   [30:0] select_ln137_2_reg_803_pp0_iter5_reg;
reg   [30:0] select_ln137_2_reg_803_pp0_iter6_reg;
reg   [30:0] select_ln137_2_reg_803_pp0_iter7_reg;
reg   [30:0] select_ln137_2_reg_803_pp0_iter8_reg;
reg   [30:0] select_ln137_2_reg_803_pp0_iter9_reg;
reg   [30:0] select_ln137_2_reg_803_pp0_iter10_reg;
reg   [30:0] select_ln137_2_reg_803_pp0_iter11_reg;
reg   [30:0] select_ln137_2_reg_803_pp0_iter12_reg;
reg   [30:0] select_ln137_2_reg_803_pp0_iter13_reg;
reg   [30:0] select_ln137_2_reg_803_pp0_iter14_reg;
reg   [30:0] select_ln137_2_reg_803_pp0_iter15_reg;
reg   [30:0] select_ln137_2_reg_803_pp0_iter16_reg;
reg   [30:0] select_ln137_2_reg_803_pp0_iter17_reg;
reg   [30:0] select_ln137_2_reg_803_pp0_iter18_reg;
reg   [30:0] select_ln137_2_reg_803_pp0_iter19_reg;
reg   [30:0] select_ln137_2_reg_803_pp0_iter20_reg;
reg   [30:0] select_ln137_2_reg_803_pp0_iter21_reg;
reg   [30:0] select_ln137_2_reg_803_pp0_iter22_reg;
reg   [30:0] select_ln137_2_reg_803_pp0_iter23_reg;
wire  signed [61:0] p_cast27_fu_320_p1;
reg  signed [61:0] p_cast27_reg_808;
reg   [60:0] trunc_ln144_2_reg_813;
wire   [2:0] trunc_ln144_fu_352_p1;
reg   [2:0] trunc_ln144_reg_818;
reg   [2:0] trunc_ln144_reg_818_pp0_iter1_reg;
reg   [2:0] trunc_ln144_reg_818_pp0_iter2_reg;
reg   [2:0] trunc_ln144_reg_818_pp0_iter3_reg;
reg   [2:0] trunc_ln144_reg_818_pp0_iter4_reg;
reg   [2:0] trunc_ln144_reg_818_pp0_iter5_reg;
reg   [2:0] trunc_ln144_reg_818_pp0_iter6_reg;
reg   [2:0] trunc_ln144_reg_818_pp0_iter7_reg;
reg   [2:0] trunc_ln144_reg_818_pp0_iter8_reg;
reg   [2:0] trunc_ln144_reg_818_pp0_iter9_reg;
reg   [2:0] trunc_ln144_reg_818_pp0_iter10_reg;
reg   [2:0] trunc_ln144_reg_818_pp0_iter11_reg;
reg   [2:0] trunc_ln144_reg_818_pp0_iter12_reg;
reg   [2:0] trunc_ln144_reg_818_pp0_iter13_reg;
reg   [2:0] trunc_ln144_reg_818_pp0_iter14_reg;
reg   [2:0] trunc_ln144_reg_818_pp0_iter15_reg;
reg   [2:0] trunc_ln144_reg_818_pp0_iter16_reg;
reg   [2:0] trunc_ln144_reg_818_pp0_iter17_reg;
reg   [2:0] trunc_ln144_reg_818_pp0_iter18_reg;
wire   [61:0] grp_fu_209_p2;
reg   [61:0] mul_ln145_reg_823;
reg   [60:0] trunc_ln145_2_reg_835;
wire   [2:0] trunc_ln145_fu_429_p1;
reg   [2:0] trunc_ln145_reg_840;
reg   [2:0] trunc_ln145_reg_840_pp0_iter2_reg;
reg   [2:0] trunc_ln145_reg_840_pp0_iter3_reg;
reg   [2:0] trunc_ln145_reg_840_pp0_iter4_reg;
reg   [2:0] trunc_ln145_reg_840_pp0_iter5_reg;
reg   [2:0] trunc_ln145_reg_840_pp0_iter6_reg;
reg   [2:0] trunc_ln145_reg_840_pp0_iter7_reg;
reg   [2:0] trunc_ln145_reg_840_pp0_iter8_reg;
reg   [2:0] trunc_ln145_reg_840_pp0_iter9_reg;
reg   [2:0] trunc_ln145_reg_840_pp0_iter10_reg;
reg   [2:0] trunc_ln145_reg_840_pp0_iter11_reg;
reg   [2:0] trunc_ln145_reg_840_pp0_iter12_reg;
reg   [2:0] trunc_ln145_reg_840_pp0_iter13_reg;
reg   [2:0] trunc_ln145_reg_840_pp0_iter14_reg;
reg   [2:0] trunc_ln145_reg_840_pp0_iter15_reg;
reg   [2:0] trunc_ln145_reg_840_pp0_iter16_reg;
reg   [2:0] trunc_ln145_reg_840_pp0_iter17_reg;
reg   [2:0] trunc_ln145_reg_840_pp0_iter18_reg;
reg   [2:0] trunc_ln145_reg_840_pp0_iter19_reg;
wire   [61:0] add_ln146_fu_433_p2;
reg   [61:0] add_ln146_reg_845;
reg   [60:0] trunc_ln147_2_reg_850;
wire   [2:0] trunc_ln147_fu_465_p1;
reg   [2:0] trunc_ln147_reg_855;
reg   [2:0] trunc_ln147_reg_855_pp0_iter2_reg;
reg   [2:0] trunc_ln147_reg_855_pp0_iter3_reg;
reg   [2:0] trunc_ln147_reg_855_pp0_iter4_reg;
reg   [2:0] trunc_ln147_reg_855_pp0_iter5_reg;
reg   [2:0] trunc_ln147_reg_855_pp0_iter6_reg;
reg   [2:0] trunc_ln147_reg_855_pp0_iter7_reg;
reg   [2:0] trunc_ln147_reg_855_pp0_iter8_reg;
reg   [2:0] trunc_ln147_reg_855_pp0_iter9_reg;
reg   [2:0] trunc_ln147_reg_855_pp0_iter10_reg;
reg   [2:0] trunc_ln147_reg_855_pp0_iter11_reg;
reg   [2:0] trunc_ln147_reg_855_pp0_iter12_reg;
reg   [2:0] trunc_ln147_reg_855_pp0_iter13_reg;
reg   [2:0] trunc_ln147_reg_855_pp0_iter14_reg;
reg   [2:0] trunc_ln147_reg_855_pp0_iter15_reg;
reg   [2:0] trunc_ln147_reg_855_pp0_iter16_reg;
reg   [2:0] trunc_ln147_reg_855_pp0_iter17_reg;
reg   [2:0] trunc_ln147_reg_855_pp0_iter18_reg;
reg   [2:0] trunc_ln147_reg_855_pp0_iter19_reg;
reg   [60:0] trunc_ln146_2_reg_866;
wire   [2:0] trunc_ln146_fu_501_p1;
reg   [2:0] trunc_ln146_reg_871;
reg   [2:0] trunc_ln146_reg_871_pp0_iter2_reg;
reg   [2:0] trunc_ln146_reg_871_pp0_iter3_reg;
reg   [2:0] trunc_ln146_reg_871_pp0_iter4_reg;
reg   [2:0] trunc_ln146_reg_871_pp0_iter5_reg;
reg   [2:0] trunc_ln146_reg_871_pp0_iter6_reg;
reg   [2:0] trunc_ln146_reg_871_pp0_iter7_reg;
reg   [2:0] trunc_ln146_reg_871_pp0_iter8_reg;
reg   [2:0] trunc_ln146_reg_871_pp0_iter9_reg;
reg   [2:0] trunc_ln146_reg_871_pp0_iter10_reg;
reg   [2:0] trunc_ln146_reg_871_pp0_iter11_reg;
reg   [2:0] trunc_ln146_reg_871_pp0_iter12_reg;
reg   [2:0] trunc_ln146_reg_871_pp0_iter13_reg;
reg   [2:0] trunc_ln146_reg_871_pp0_iter14_reg;
reg   [2:0] trunc_ln146_reg_871_pp0_iter15_reg;
reg   [2:0] trunc_ln146_reg_871_pp0_iter16_reg;
reg   [2:0] trunc_ln146_reg_871_pp0_iter17_reg;
reg   [2:0] trunc_ln146_reg_871_pp0_iter18_reg;
reg   [2:0] trunc_ln146_reg_871_pp0_iter19_reg;
reg   [63:0] gmem_addr_read_reg_888;
wire   [31:0] trunc_ln144_1_fu_541_p1;
reg   [31:0] trunc_ln144_1_reg_893;
reg   [63:0] gmem_addr_6_read_reg_898;
wire   [31:0] trunc_ln145_1_fu_561_p1;
reg   [31:0] trunc_ln145_1_reg_903;
reg   [63:0] gmem_addr_7_read_reg_908;
wire   [31:0] bitcast_ln144_fu_565_p1;
wire   [31:0] bitcast_ln145_fu_569_p1;
wire   [31:0] trunc_ln146_1_fu_589_p1;
reg   [31:0] trunc_ln146_1_reg_923;
reg   [31:0] trunc_ln146_1_reg_923_pp0_iter20_reg;
reg   [63:0] gmem_addr_8_read_reg_928;
wire   [31:0] trunc_ln147_1_fu_609_p1;
reg   [31:0] trunc_ln147_1_reg_933;
reg   [31:0] trunc_ln147_1_reg_933_pp0_iter20_reg;
reg   [31:0] trunc_ln147_1_reg_933_pp0_iter21_reg;
reg   [31:0] add13_i_reg_938;
wire   [31:0] bitcast_ln146_fu_613_p1;
reg   [31:0] sub20_i1_reg_948;
wire   [31:0] bitcast_ln147_fu_617_p1;
reg   [31:0] sub27_i_reg_958;
wire   [61:0] add_ln143_fu_628_p2;
reg   [61:0] add_ln143_reg_963;
wire   [2:0] trunc_ln143_fu_646_p1;
reg   [2:0] trunc_ln143_reg_968;
wire   [7:0] shl_ln143_fu_654_p2;
reg   [7:0] shl_ln143_reg_973;
reg   [60:0] trunc_ln143_1_reg_978;
wire   [63:0] shl_ln143_1_fu_688_p2;
reg   [63:0] shl_ln143_1_reg_983;
reg    ap_enable_reg_pp0_iter0_reg;
wire  signed [63:0] sext_ln144_fu_391_p1;
wire  signed [63:0] sext_ln145_fu_469_p1;
wire  signed [63:0] sext_ln146_fu_505_p1;
wire  signed [63:0] sext_ln147_fu_515_p1;
wire  signed [63:0] sext_ln143_fu_694_p1;
reg    ap_block_pp0_stage3_01001;
reg   [30:0] i_fu_88;
wire   [30:0] add_ln145_fu_356_p2;
wire    ap_loop_init;
reg   [30:0] j_fu_92;
reg   [63:0] indvar_flatten154_fu_96;
wire   [63:0] add_ln137_fu_264_p2;
reg   [31:0] grp_fu_205_p0;
reg   [31:0] grp_fu_205_p1;
reg   [30:0] grp_fu_209_p0;
wire   [61:0] zext_ln145_fu_361_p1;
wire   [61:0] zext_ln140_1_fu_624_p1;
reg  signed [31:0] grp_fu_209_p1;
wire  signed [31:0] mul_ln144_fu_213_p1;
wire   [31:0] zext_ln140_3_fu_250_p1;
wire   [32:0] zext_ln140_2_fu_281_p1;
wire  signed [32:0] add_ln144_fu_285_p2;
wire   [32:0] zext_ln137_1_fu_311_p1;
wire   [32:0] empty_fu_315_p2;
wire   [61:0] add_ln144_1_fu_324_p2;
wire   [63:0] shl_ln_fu_329_p3;
wire   [63:0] add_ln144_2_fu_337_p2;
wire   [30:0] indvars_iv_next16_i24_mid1_fu_376_p2;
wire   [30:0] select_ln137_1_fu_381_p3;
wire   [61:0] zext_ln140_fu_387_p1;
wire   [61:0] add_ln145_1_fu_401_p2;
wire   [63:0] shl_ln1_fu_406_p3;
wire   [63:0] add_ln145_2_fu_414_p2;
wire   [61:0] add_ln147_fu_437_p2;
wire   [63:0] shl_ln3_fu_442_p3;
wire   [63:0] add_ln147_1_fu_450_p2;
wire   [63:0] shl_ln2_fu_479_p3;
wire   [63:0] add_ln146_1_fu_486_p2;
wire   [5:0] shl_ln144_1_fu_525_p3;
wire   [63:0] zext_ln144_fu_532_p1;
wire   [63:0] lshr_ln144_fu_536_p2;
wire   [5:0] shl_ln145_1_fu_545_p3;
wire   [63:0] zext_ln145_1_fu_552_p1;
wire   [63:0] lshr_ln145_fu_556_p2;
wire   [5:0] shl_ln146_1_fu_573_p3;
wire   [63:0] zext_ln146_fu_580_p1;
wire   [63:0] lshr_ln146_fu_584_p2;
wire   [5:0] shl_ln147_1_fu_593_p3;
wire   [63:0] zext_ln147_fu_600_p1;
wire   [63:0] lshr_ln147_fu_604_p2;
wire   [61:0] zext_ln137_fu_621_p1;
wire   [63:0] shl_ln4_fu_634_p3;
wire   [63:0] add_ln143_1_fu_641_p2;
wire   [7:0] zext_ln143_1_fu_650_p1;
wire   [31:0] bitcast_ln143_fu_670_p1;
wire   [5:0] shl_ln143_2_fu_677_p3;
wire   [63:0] zext_ln143_fu_673_p1;
wire   [63:0] zext_ln143_2_fu_684_p1;
reg   [1:0] grp_fu_205_opcode;
reg    ap_block_pp0_stage2_00001;
reg    ap_block_pp0_stage0_00001;
reg    ap_block_pp0_stage3_00001;
reg    grp_fu_205_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg    ap_loop_exit_ready_pp0_iter34_reg;
reg    ap_loop_exit_ready_pp0_iter35_reg;
reg    ap_loop_exit_ready_pp0_iter36_reg;
reg    ap_loop_exit_ready_pp0_iter37_reg;
reg    ap_loop_exit_ready_pp0_iter38_reg;
reg    ap_loop_exit_ready_pp0_iter39_reg;
reg    ap_loop_exit_ready_pp0_iter40_reg;
reg   [3:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to41;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
reg    ap_condition_1275;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 i_fu_88 = 31'd0;
#0 j_fu_92 = 31'd0;
#0 indvar_flatten154_fu_96 = 64'd0;
#0 ap_done_reg = 1'b0;
end

cluster_mul_31ns_32s_62_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 62 ))
mul_31ns_32s_62_1_1_U53(
    .din0(grp_fu_209_p0),
    .din1(grp_fu_209_p1),
    .dout(grp_fu_209_p2)
);

cluster_mul_33s_32s_62_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 33 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 62 ))
mul_33s_32s_62_1_1_U54(
    .din0(add_ln144_fu_285_p2),
    .din1(mul_ln144_fu_213_p1),
    .dout(mul_ln144_fu_213_p2)
);

cluster_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage3),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_loop_exit_ready_pp0_iter40_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage3)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_fu_88 <= 31'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln137_reg_777 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        i_fu_88 <= add_ln145_fu_356_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten154_fu_96 <= 64'd0;
    end else if (((icmp_ln137_fu_259_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        indvar_flatten154_fu_96 <= add_ln137_fu_264_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_fu_92 <= 31'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln137_reg_777 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        j_fu_92 <= select_ln137_2_fu_304_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        add13_i_reg_938 <= grp_fu_889_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln143_reg_963 <= add_ln143_fu_628_p2;
        add_ln146_reg_845 <= add_ln146_fu_433_p2;
        gmem_addr_6_read_reg_898 <= m_axi_gmem_RDATA;
        integralImg_w_cast_cast_reg_753 <= integralImg_w_cast_cast_fu_221_p1;
        sext_ln137_1_cast_reg_759 <= sext_ln137_1_cast_fu_225_p1;
        sext_ln137_cast_reg_748 <= sext_ln137_cast_fu_217_p1;
        trunc_ln144_1_reg_893 <= trunc_ln144_1_fu_541_p1;
        trunc_ln145_2_reg_835 <= {{add_ln145_2_fu_414_p2[63:3]}};
        trunc_ln145_reg_840 <= trunc_ln145_fu_429_p1;
        trunc_ln145_reg_840_pp0_iter10_reg <= trunc_ln145_reg_840_pp0_iter9_reg;
        trunc_ln145_reg_840_pp0_iter11_reg <= trunc_ln145_reg_840_pp0_iter10_reg;
        trunc_ln145_reg_840_pp0_iter12_reg <= trunc_ln145_reg_840_pp0_iter11_reg;
        trunc_ln145_reg_840_pp0_iter13_reg <= trunc_ln145_reg_840_pp0_iter12_reg;
        trunc_ln145_reg_840_pp0_iter14_reg <= trunc_ln145_reg_840_pp0_iter13_reg;
        trunc_ln145_reg_840_pp0_iter15_reg <= trunc_ln145_reg_840_pp0_iter14_reg;
        trunc_ln145_reg_840_pp0_iter16_reg <= trunc_ln145_reg_840_pp0_iter15_reg;
        trunc_ln145_reg_840_pp0_iter17_reg <= trunc_ln145_reg_840_pp0_iter16_reg;
        trunc_ln145_reg_840_pp0_iter18_reg <= trunc_ln145_reg_840_pp0_iter17_reg;
        trunc_ln145_reg_840_pp0_iter19_reg <= trunc_ln145_reg_840_pp0_iter18_reg;
        trunc_ln145_reg_840_pp0_iter2_reg <= trunc_ln145_reg_840;
        trunc_ln145_reg_840_pp0_iter3_reg <= trunc_ln145_reg_840_pp0_iter2_reg;
        trunc_ln145_reg_840_pp0_iter4_reg <= trunc_ln145_reg_840_pp0_iter3_reg;
        trunc_ln145_reg_840_pp0_iter5_reg <= trunc_ln145_reg_840_pp0_iter4_reg;
        trunc_ln145_reg_840_pp0_iter6_reg <= trunc_ln145_reg_840_pp0_iter5_reg;
        trunc_ln145_reg_840_pp0_iter7_reg <= trunc_ln145_reg_840_pp0_iter6_reg;
        trunc_ln145_reg_840_pp0_iter8_reg <= trunc_ln145_reg_840_pp0_iter7_reg;
        trunc_ln145_reg_840_pp0_iter9_reg <= trunc_ln145_reg_840_pp0_iter8_reg;
        trunc_ln147_2_reg_850 <= {{add_ln147_1_fu_450_p2[63:3]}};
        trunc_ln147_reg_855 <= trunc_ln147_fu_465_p1;
        trunc_ln147_reg_855_pp0_iter10_reg <= trunc_ln147_reg_855_pp0_iter9_reg;
        trunc_ln147_reg_855_pp0_iter11_reg <= trunc_ln147_reg_855_pp0_iter10_reg;
        trunc_ln147_reg_855_pp0_iter12_reg <= trunc_ln147_reg_855_pp0_iter11_reg;
        trunc_ln147_reg_855_pp0_iter13_reg <= trunc_ln147_reg_855_pp0_iter12_reg;
        trunc_ln147_reg_855_pp0_iter14_reg <= trunc_ln147_reg_855_pp0_iter13_reg;
        trunc_ln147_reg_855_pp0_iter15_reg <= trunc_ln147_reg_855_pp0_iter14_reg;
        trunc_ln147_reg_855_pp0_iter16_reg <= trunc_ln147_reg_855_pp0_iter15_reg;
        trunc_ln147_reg_855_pp0_iter17_reg <= trunc_ln147_reg_855_pp0_iter16_reg;
        trunc_ln147_reg_855_pp0_iter18_reg <= trunc_ln147_reg_855_pp0_iter17_reg;
        trunc_ln147_reg_855_pp0_iter19_reg <= trunc_ln147_reg_855_pp0_iter18_reg;
        trunc_ln147_reg_855_pp0_iter2_reg <= trunc_ln147_reg_855;
        trunc_ln147_reg_855_pp0_iter3_reg <= trunc_ln147_reg_855_pp0_iter2_reg;
        trunc_ln147_reg_855_pp0_iter4_reg <= trunc_ln147_reg_855_pp0_iter3_reg;
        trunc_ln147_reg_855_pp0_iter5_reg <= trunc_ln147_reg_855_pp0_iter4_reg;
        trunc_ln147_reg_855_pp0_iter6_reg <= trunc_ln147_reg_855_pp0_iter5_reg;
        trunc_ln147_reg_855_pp0_iter7_reg <= trunc_ln147_reg_855_pp0_iter6_reg;
        trunc_ln147_reg_855_pp0_iter8_reg <= trunc_ln147_reg_855_pp0_iter7_reg;
        trunc_ln147_reg_855_pp0_iter9_reg <= trunc_ln147_reg_855_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
        ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
        ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
        ap_loop_exit_ready_pp0_iter35_reg <= ap_loop_exit_ready_pp0_iter34_reg;
        ap_loop_exit_ready_pp0_iter36_reg <= ap_loop_exit_ready_pp0_iter35_reg;
        ap_loop_exit_ready_pp0_iter37_reg <= ap_loop_exit_ready_pp0_iter36_reg;
        ap_loop_exit_ready_pp0_iter38_reg <= ap_loop_exit_ready_pp0_iter37_reg;
        ap_loop_exit_ready_pp0_iter39_reg <= ap_loop_exit_ready_pp0_iter38_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter40_reg <= ap_loop_exit_ready_pp0_iter39_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        gmem_addr_read_reg_888 <= m_axi_gmem_RDATA;
        indvars_iv_next16_i24162_reg_798 <= indvars_iv_next16_i24162_fu_298_p2;
        j_load_reg_793 <= j_fu_92;
        p_cast27_reg_808 <= p_cast27_fu_320_p1;
        select_ln137_2_reg_803 <= select_ln137_2_fu_304_p3;
        select_ln137_2_reg_803_pp0_iter10_reg <= select_ln137_2_reg_803_pp0_iter9_reg;
        select_ln137_2_reg_803_pp0_iter11_reg <= select_ln137_2_reg_803_pp0_iter10_reg;
        select_ln137_2_reg_803_pp0_iter12_reg <= select_ln137_2_reg_803_pp0_iter11_reg;
        select_ln137_2_reg_803_pp0_iter13_reg <= select_ln137_2_reg_803_pp0_iter12_reg;
        select_ln137_2_reg_803_pp0_iter14_reg <= select_ln137_2_reg_803_pp0_iter13_reg;
        select_ln137_2_reg_803_pp0_iter15_reg <= select_ln137_2_reg_803_pp0_iter14_reg;
        select_ln137_2_reg_803_pp0_iter16_reg <= select_ln137_2_reg_803_pp0_iter15_reg;
        select_ln137_2_reg_803_pp0_iter17_reg <= select_ln137_2_reg_803_pp0_iter16_reg;
        select_ln137_2_reg_803_pp0_iter18_reg <= select_ln137_2_reg_803_pp0_iter17_reg;
        select_ln137_2_reg_803_pp0_iter19_reg <= select_ln137_2_reg_803_pp0_iter18_reg;
        select_ln137_2_reg_803_pp0_iter1_reg <= select_ln137_2_reg_803;
        select_ln137_2_reg_803_pp0_iter20_reg <= select_ln137_2_reg_803_pp0_iter19_reg;
        select_ln137_2_reg_803_pp0_iter21_reg <= select_ln137_2_reg_803_pp0_iter20_reg;
        select_ln137_2_reg_803_pp0_iter22_reg <= select_ln137_2_reg_803_pp0_iter21_reg;
        select_ln137_2_reg_803_pp0_iter23_reg <= select_ln137_2_reg_803_pp0_iter22_reg;
        select_ln137_2_reg_803_pp0_iter2_reg <= select_ln137_2_reg_803_pp0_iter1_reg;
        select_ln137_2_reg_803_pp0_iter3_reg <= select_ln137_2_reg_803_pp0_iter2_reg;
        select_ln137_2_reg_803_pp0_iter4_reg <= select_ln137_2_reg_803_pp0_iter3_reg;
        select_ln137_2_reg_803_pp0_iter5_reg <= select_ln137_2_reg_803_pp0_iter4_reg;
        select_ln137_2_reg_803_pp0_iter6_reg <= select_ln137_2_reg_803_pp0_iter5_reg;
        select_ln137_2_reg_803_pp0_iter7_reg <= select_ln137_2_reg_803_pp0_iter6_reg;
        select_ln137_2_reg_803_pp0_iter8_reg <= select_ln137_2_reg_803_pp0_iter7_reg;
        select_ln137_2_reg_803_pp0_iter9_reg <= select_ln137_2_reg_803_pp0_iter8_reg;
        trunc_ln144_2_reg_813 <= {{add_ln144_2_fu_337_p2[63:3]}};
        trunc_ln144_reg_818 <= trunc_ln144_fu_352_p1;
        trunc_ln144_reg_818_pp0_iter10_reg <= trunc_ln144_reg_818_pp0_iter9_reg;
        trunc_ln144_reg_818_pp0_iter11_reg <= trunc_ln144_reg_818_pp0_iter10_reg;
        trunc_ln144_reg_818_pp0_iter12_reg <= trunc_ln144_reg_818_pp0_iter11_reg;
        trunc_ln144_reg_818_pp0_iter13_reg <= trunc_ln144_reg_818_pp0_iter12_reg;
        trunc_ln144_reg_818_pp0_iter14_reg <= trunc_ln144_reg_818_pp0_iter13_reg;
        trunc_ln144_reg_818_pp0_iter15_reg <= trunc_ln144_reg_818_pp0_iter14_reg;
        trunc_ln144_reg_818_pp0_iter16_reg <= trunc_ln144_reg_818_pp0_iter15_reg;
        trunc_ln144_reg_818_pp0_iter17_reg <= trunc_ln144_reg_818_pp0_iter16_reg;
        trunc_ln144_reg_818_pp0_iter18_reg <= trunc_ln144_reg_818_pp0_iter17_reg;
        trunc_ln144_reg_818_pp0_iter1_reg <= trunc_ln144_reg_818;
        trunc_ln144_reg_818_pp0_iter2_reg <= trunc_ln144_reg_818_pp0_iter1_reg;
        trunc_ln144_reg_818_pp0_iter3_reg <= trunc_ln144_reg_818_pp0_iter2_reg;
        trunc_ln144_reg_818_pp0_iter4_reg <= trunc_ln144_reg_818_pp0_iter3_reg;
        trunc_ln144_reg_818_pp0_iter5_reg <= trunc_ln144_reg_818_pp0_iter4_reg;
        trunc_ln144_reg_818_pp0_iter6_reg <= trunc_ln144_reg_818_pp0_iter5_reg;
        trunc_ln144_reg_818_pp0_iter7_reg <= trunc_ln144_reg_818_pp0_iter6_reg;
        trunc_ln144_reg_818_pp0_iter8_reg <= trunc_ln144_reg_818_pp0_iter7_reg;
        trunc_ln144_reg_818_pp0_iter9_reg <= trunc_ln144_reg_818_pp0_iter8_reg;
        trunc_ln147_1_reg_933 <= trunc_ln147_1_fu_609_p1;
        trunc_ln147_1_reg_933_pp0_iter20_reg <= trunc_ln147_1_reg_933;
        trunc_ln147_1_reg_933_pp0_iter21_reg <= trunc_ln147_1_reg_933_pp0_iter20_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        gmem_addr_7_read_reg_908 <= m_axi_gmem_RDATA;
        i_2_reg_765 <= i_fu_88;
        icmp_ln137_reg_777 <= icmp_ln137_fu_259_p2;
        icmp_ln140_reg_770 <= icmp_ln140_fu_254_p2;
        shl_ln143_reg_973 <= shl_ln143_fu_654_p2;
        trunc_ln143_1_reg_978 <= {{add_ln143_1_fu_641_p2[63:3]}};
        trunc_ln143_reg_968 <= trunc_ln143_fu_646_p1;
        trunc_ln145_1_reg_903 <= trunc_ln145_1_fu_561_p1;
        trunc_ln146_2_reg_866 <= {{add_ln146_1_fu_486_p2[63:3]}};
        trunc_ln146_reg_871 <= trunc_ln146_fu_501_p1;
        trunc_ln146_reg_871_pp0_iter10_reg <= trunc_ln146_reg_871_pp0_iter9_reg;
        trunc_ln146_reg_871_pp0_iter11_reg <= trunc_ln146_reg_871_pp0_iter10_reg;
        trunc_ln146_reg_871_pp0_iter12_reg <= trunc_ln146_reg_871_pp0_iter11_reg;
        trunc_ln146_reg_871_pp0_iter13_reg <= trunc_ln146_reg_871_pp0_iter12_reg;
        trunc_ln146_reg_871_pp0_iter14_reg <= trunc_ln146_reg_871_pp0_iter13_reg;
        trunc_ln146_reg_871_pp0_iter15_reg <= trunc_ln146_reg_871_pp0_iter14_reg;
        trunc_ln146_reg_871_pp0_iter16_reg <= trunc_ln146_reg_871_pp0_iter15_reg;
        trunc_ln146_reg_871_pp0_iter17_reg <= trunc_ln146_reg_871_pp0_iter16_reg;
        trunc_ln146_reg_871_pp0_iter18_reg <= trunc_ln146_reg_871_pp0_iter17_reg;
        trunc_ln146_reg_871_pp0_iter19_reg <= trunc_ln146_reg_871_pp0_iter18_reg;
        trunc_ln146_reg_871_pp0_iter2_reg <= trunc_ln146_reg_871;
        trunc_ln146_reg_871_pp0_iter3_reg <= trunc_ln146_reg_871_pp0_iter2_reg;
        trunc_ln146_reg_871_pp0_iter4_reg <= trunc_ln146_reg_871_pp0_iter3_reg;
        trunc_ln146_reg_871_pp0_iter5_reg <= trunc_ln146_reg_871_pp0_iter4_reg;
        trunc_ln146_reg_871_pp0_iter6_reg <= trunc_ln146_reg_871_pp0_iter5_reg;
        trunc_ln146_reg_871_pp0_iter7_reg <= trunc_ln146_reg_871_pp0_iter6_reg;
        trunc_ln146_reg_871_pp0_iter8_reg <= trunc_ln146_reg_871_pp0_iter7_reg;
        trunc_ln146_reg_871_pp0_iter9_reg <= trunc_ln146_reg_871_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        gmem_addr_8_read_reg_928 <= m_axi_gmem_RDATA;
        mul_ln144_reg_787 <= mul_ln144_fu_213_p2;
        select_ln137_reg_781 <= select_ln137_fu_275_p3;
        select_ln137_reg_781_pp0_iter10_reg <= select_ln137_reg_781_pp0_iter9_reg;
        select_ln137_reg_781_pp0_iter11_reg <= select_ln137_reg_781_pp0_iter10_reg;
        select_ln137_reg_781_pp0_iter12_reg <= select_ln137_reg_781_pp0_iter11_reg;
        select_ln137_reg_781_pp0_iter13_reg <= select_ln137_reg_781_pp0_iter12_reg;
        select_ln137_reg_781_pp0_iter14_reg <= select_ln137_reg_781_pp0_iter13_reg;
        select_ln137_reg_781_pp0_iter15_reg <= select_ln137_reg_781_pp0_iter14_reg;
        select_ln137_reg_781_pp0_iter16_reg <= select_ln137_reg_781_pp0_iter15_reg;
        select_ln137_reg_781_pp0_iter17_reg <= select_ln137_reg_781_pp0_iter16_reg;
        select_ln137_reg_781_pp0_iter18_reg <= select_ln137_reg_781_pp0_iter17_reg;
        select_ln137_reg_781_pp0_iter19_reg <= select_ln137_reg_781_pp0_iter18_reg;
        select_ln137_reg_781_pp0_iter1_reg <= select_ln137_reg_781;
        select_ln137_reg_781_pp0_iter20_reg <= select_ln137_reg_781_pp0_iter19_reg;
        select_ln137_reg_781_pp0_iter21_reg <= select_ln137_reg_781_pp0_iter20_reg;
        select_ln137_reg_781_pp0_iter22_reg <= select_ln137_reg_781_pp0_iter21_reg;
        select_ln137_reg_781_pp0_iter23_reg <= select_ln137_reg_781_pp0_iter22_reg;
        select_ln137_reg_781_pp0_iter2_reg <= select_ln137_reg_781_pp0_iter1_reg;
        select_ln137_reg_781_pp0_iter3_reg <= select_ln137_reg_781_pp0_iter2_reg;
        select_ln137_reg_781_pp0_iter4_reg <= select_ln137_reg_781_pp0_iter3_reg;
        select_ln137_reg_781_pp0_iter5_reg <= select_ln137_reg_781_pp0_iter4_reg;
        select_ln137_reg_781_pp0_iter6_reg <= select_ln137_reg_781_pp0_iter5_reg;
        select_ln137_reg_781_pp0_iter7_reg <= select_ln137_reg_781_pp0_iter6_reg;
        select_ln137_reg_781_pp0_iter8_reg <= select_ln137_reg_781_pp0_iter7_reg;
        select_ln137_reg_781_pp0_iter9_reg <= select_ln137_reg_781_pp0_iter8_reg;
        shl_ln143_1_reg_983 <= shl_ln143_1_fu_688_p2;
        trunc_ln146_1_reg_923 <= trunc_ln146_1_fu_589_p1;
        trunc_ln146_1_reg_923_pp0_iter20_reg <= trunc_ln146_1_reg_923;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        mul_ln145_reg_823 <= grp_fu_209_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        sub20_i1_reg_948 <= grp_fu_889_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub27_i_reg_958 <= grp_fu_889_p_dout0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln137_reg_777 == 1'd1) & (1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_loop_exit_ready_pp0_iter40_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) 
    & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) 
    & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0))) begin
        ap_idle_pp0_1to41 = 1'b1;
    end else begin
        ap_idle_pp0_1to41 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln137_reg_777 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter41 == 1'b1))) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_205_ce = 1'b1;
    end else begin
        grp_fu_205_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_00001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b0 == ap_block_pp0_stage3_00001) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        grp_fu_205_opcode = 2'd1;
    end else if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage2_00001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_205_opcode = 2'd0;
    end else begin
        grp_fu_205_opcode = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_205_p0 = sub20_i1_reg_948;
    end else if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_205_p0 = add13_i_reg_938;
    end else if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_205_p0 = bitcast_ln144_fu_565_p1;
    end else begin
        grp_fu_205_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_205_p1 = bitcast_ln147_fu_617_p1;
    end else if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_205_p1 = bitcast_ln146_fu_613_p1;
    end else if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_205_p1 = bitcast_ln145_fu_569_p1;
    end else begin
        grp_fu_205_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_209_p0 = zext_ln140_1_fu_624_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_209_p0 = zext_ln145_fu_361_p1;
    end else begin
        grp_fu_209_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_209_p1 = sext_ln137_cast_reg_748;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_209_p1 = integralImg_w_cast_cast_reg_753;
    end else begin
        grp_fu_209_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            m_axi_gmem_ARADDR = sext_ln147_fu_515_p1;
        end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            m_axi_gmem_ARADDR = sext_ln146_fu_505_p1;
        end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            m_axi_gmem_ARADDR = sext_ln145_fu_469_p1;
        end else if ((1'b1 == ap_condition_1275)) begin
            m_axi_gmem_ARADDR = sext_ln144_fu_391_p1;
        end else begin
            m_axi_gmem_ARADDR = 'bx;
        end
    end else begin
        m_axi_gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln137_reg_777 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        m_axi_gmem_ARVALID = 1'b1;
    end else begin
        m_axi_gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        m_axi_gmem_AWVALID = 1'b1;
    end else begin
        m_axi_gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter41 == 1'b1))) begin
        m_axi_gmem_BREADY = 1'b1;
    end else begin
        m_axi_gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        m_axi_gmem_RREADY = 1'b1;
    end else begin
        m_axi_gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        m_axi_gmem_WVALID = 1'b1;
    end else begin
        m_axi_gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to41 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln137_fu_264_p2 = (indvar_flatten154_fu_96 + 64'd1);

assign add_ln143_1_fu_641_p2 = (shl_ln4_fu_634_p3 + retSAD_data);

assign add_ln143_fu_628_p2 = (grp_fu_209_p2 + zext_ln137_fu_621_p1);

assign add_ln144_1_fu_324_p2 = ($signed(mul_ln144_reg_787) + $signed(p_cast27_fu_320_p1));

assign add_ln144_2_fu_337_p2 = (shl_ln_fu_329_p3 + integralImg_data);

assign add_ln144_fu_285_p2 = ($signed(zext_ln140_2_fu_281_p1) + $signed(sext_ln137_1_cast_reg_759));

assign add_ln145_1_fu_401_p2 = (mul_ln145_reg_823 + zext_ln140_fu_387_p1);

assign add_ln145_2_fu_414_p2 = (shl_ln1_fu_406_p3 + integralImg_data);

assign add_ln145_fu_356_p2 = (select_ln137_reg_781 + 31'd1);

assign add_ln146_1_fu_486_p2 = (shl_ln2_fu_479_p3 + integralImg_data);

assign add_ln146_fu_433_p2 = ($signed(mul_ln145_reg_823) + $signed(p_cast27_reg_808));

assign add_ln147_1_fu_450_p2 = (shl_ln3_fu_442_p3 + integralImg_data);

assign add_ln147_fu_437_p2 = (mul_ln144_reg_787 + zext_ln140_fu_387_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_00001 = ((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_block_state77_pp0_stage0_iter19));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_block_state77_pp0_stage0_iter19)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state5_io)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_block_state77_pp0_stage0_iter19)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state5_io)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_block_state78_pp0_stage1_iter19)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem_ARREADY == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_block_state78_pp0_stage1_iter19)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem_ARREADY == 1'b0)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_00001 = ((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_block_state79_pp0_stage2_iter19));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_block_state79_pp0_stage2_iter19)) | ((ap_enable_reg_pp0_iter24 == 1'b1) & (m_axi_gmem_AWREADY == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem_ARREADY == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b1 == ap_block_state79_pp0_stage2_iter19)) | ((ap_enable_reg_pp0_iter24 == 1'b1) & (m_axi_gmem_AWREADY == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem_ARREADY == 1'b0)));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_00001 = (((1'b1 == ap_block_state168_pp0_stage3_iter41) & (ap_enable_reg_pp0_iter41 == 1'b1)) | ((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_block_state76_pp0_stage3_iter18)));
end

always @ (*) begin
    ap_block_pp0_stage3_01001 = (((1'b1 == ap_block_state168_pp0_stage3_iter41) & (ap_enable_reg_pp0_iter41 == 1'b1)) | ((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_block_state76_pp0_stage3_iter18)));
end

always @ (*) begin
    ap_block_pp0_stage3_11001 = (((1'b1 == ap_block_state168_pp0_stage3_iter41) & (ap_enable_reg_pp0_iter41 == 1'b1)) | ((ap_enable_reg_pp0_iter24 == 1'b1) & (m_axi_gmem_WREADY == 1'b0)) | ((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_block_state76_pp0_stage3_iter18)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem_ARREADY == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = (((1'b1 == ap_block_state168_pp0_stage3_iter41) & (ap_enable_reg_pp0_iter41 == 1'b1)) | ((ap_enable_reg_pp0_iter24 == 1'b1) & (m_axi_gmem_WREADY == 1'b0)) | ((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_block_state76_pp0_stage3_iter18)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem_ARREADY == 1'b0)));
end

always @ (*) begin
    ap_block_state168_pp0_stage3_iter41 = (m_axi_gmem_BVALID == 1'b0);
end

always @ (*) begin
    ap_block_state5_io = ((icmp_ln137_reg_777 == 1'd0) & (m_axi_gmem_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state76_pp0_stage3_iter18 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state77_pp0_stage0_iter19 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state78_pp0_stage1_iter19 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state79_pp0_stage2_iter19 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_condition_1275 = ((icmp_ln137_reg_777 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage3;

assign ap_ready = ap_ready_sig;

assign bitcast_ln143_fu_670_p1 = sub27_i_reg_958;

assign bitcast_ln144_fu_565_p1 = trunc_ln144_1_reg_893;

assign bitcast_ln145_fu_569_p1 = trunc_ln145_1_reg_903;

assign bitcast_ln146_fu_613_p1 = trunc_ln146_1_reg_923_pp0_iter20_reg;

assign bitcast_ln147_fu_617_p1 = trunc_ln147_1_reg_933_pp0_iter21_reg;

assign empty_fu_315_p2 = ($signed(zext_ln137_1_fu_311_p1) + $signed(sext_ln137_1_cast_reg_759));

assign grp_fu_889_p_ce = grp_fu_205_ce;

assign grp_fu_889_p_din0 = grp_fu_205_p0;

assign grp_fu_889_p_din1 = grp_fu_205_p1;

assign grp_fu_889_p_opcode = grp_fu_205_opcode;

assign icmp_ln137_fu_259_p2 = ((indvar_flatten154_fu_96 == bound149) ? 1'b1 : 1'b0);

assign icmp_ln140_fu_254_p2 = (($signed(zext_ln140_3_fu_250_p1) < $signed(sub2_i)) ? 1'b1 : 1'b0);

assign indvars_iv_next16_i24162_fu_298_p2 = (j_fu_92 + 31'd1);

assign indvars_iv_next16_i24_mid1_fu_376_p2 = (j_load_reg_793 + 31'd2);

assign integralImg_w_cast_cast_fu_221_p1 = $signed(integralImg_w_cast);

assign lshr_ln144_fu_536_p2 = gmem_addr_read_reg_888 >> zext_ln144_fu_532_p1;

assign lshr_ln145_fu_556_p2 = gmem_addr_6_read_reg_898 >> zext_ln145_1_fu_552_p1;

assign lshr_ln146_fu_584_p2 = gmem_addr_7_read_reg_908 >> zext_ln146_fu_580_p1;

assign lshr_ln147_fu_604_p2 = gmem_addr_8_read_reg_928 >> zext_ln147_fu_600_p1;

assign m_axi_gmem_ARBURST = 2'd0;

assign m_axi_gmem_ARCACHE = 4'd0;

assign m_axi_gmem_ARID = 1'd0;

assign m_axi_gmem_ARLEN = 64'd1;

assign m_axi_gmem_ARLOCK = 2'd0;

assign m_axi_gmem_ARPROT = 3'd0;

assign m_axi_gmem_ARQOS = 4'd0;

assign m_axi_gmem_ARREGION = 4'd0;

assign m_axi_gmem_ARSIZE = 3'd0;

assign m_axi_gmem_ARUSER = 1'd0;

assign m_axi_gmem_AWADDR = sext_ln143_fu_694_p1;

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLEN = 64'd1;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_WDATA = shl_ln143_1_reg_983;

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WSTRB = shl_ln143_reg_973;

assign m_axi_gmem_WUSER = 1'd0;

assign mul_ln144_fu_213_p1 = integralImg_w_cast_cast_reg_753;

assign p_cast27_fu_320_p1 = $signed(empty_fu_315_p2);

assign select_ln137_1_fu_381_p3 = ((icmp_ln140_reg_770[0:0] == 1'b1) ? indvars_iv_next16_i24162_reg_798 : indvars_iv_next16_i24_mid1_fu_376_p2);

assign select_ln137_2_fu_304_p3 = ((icmp_ln140_reg_770[0:0] == 1'b1) ? j_fu_92 : indvars_iv_next16_i24162_fu_298_p2);

assign select_ln137_fu_275_p3 = ((icmp_ln140_reg_770[0:0] == 1'b1) ? i_2_reg_765 : 31'd0);

assign sext_ln137_1_cast_fu_225_p1 = $signed(sext_ln137_1);

assign sext_ln137_cast_fu_217_p1 = $signed(sext_ln137);

assign sext_ln143_fu_694_p1 = $signed(trunc_ln143_1_reg_978);

assign sext_ln144_fu_391_p1 = $signed(trunc_ln144_2_reg_813);

assign sext_ln145_fu_469_p1 = $signed(trunc_ln145_2_reg_835);

assign sext_ln146_fu_505_p1 = $signed(trunc_ln146_2_reg_866);

assign sext_ln147_fu_515_p1 = $signed(trunc_ln147_2_reg_850);

assign shl_ln143_1_fu_688_p2 = zext_ln143_fu_673_p1 << zext_ln143_2_fu_684_p1;

assign shl_ln143_2_fu_677_p3 = {{trunc_ln143_reg_968}, {3'd0}};

assign shl_ln143_fu_654_p2 = 8'd15 << zext_ln143_1_fu_650_p1;

assign shl_ln144_1_fu_525_p3 = {{trunc_ln144_reg_818_pp0_iter18_reg}, {3'd0}};

assign shl_ln145_1_fu_545_p3 = {{trunc_ln145_reg_840_pp0_iter19_reg}, {3'd0}};

assign shl_ln146_1_fu_573_p3 = {{trunc_ln146_reg_871_pp0_iter19_reg}, {3'd0}};

assign shl_ln147_1_fu_593_p3 = {{trunc_ln147_reg_855_pp0_iter19_reg}, {3'd0}};

assign shl_ln1_fu_406_p3 = {{add_ln145_1_fu_401_p2}, {2'd0}};

assign shl_ln2_fu_479_p3 = {{add_ln146_reg_845}, {2'd0}};

assign shl_ln3_fu_442_p3 = {{add_ln147_fu_437_p2}, {2'd0}};

assign shl_ln4_fu_634_p3 = {{add_ln143_reg_963}, {2'd0}};

assign shl_ln_fu_329_p3 = {{add_ln144_1_fu_324_p2}, {2'd0}};

assign trunc_ln143_fu_646_p1 = add_ln143_1_fu_641_p2[2:0];

assign trunc_ln144_1_fu_541_p1 = lshr_ln144_fu_536_p2[31:0];

assign trunc_ln144_fu_352_p1 = add_ln144_2_fu_337_p2[2:0];

assign trunc_ln145_1_fu_561_p1 = lshr_ln145_fu_556_p2[31:0];

assign trunc_ln145_fu_429_p1 = add_ln145_2_fu_414_p2[2:0];

assign trunc_ln146_1_fu_589_p1 = lshr_ln146_fu_584_p2[31:0];

assign trunc_ln146_fu_501_p1 = add_ln146_1_fu_486_p2[2:0];

assign trunc_ln147_1_fu_609_p1 = lshr_ln147_fu_604_p2[31:0];

assign trunc_ln147_fu_465_p1 = add_ln147_1_fu_450_p2[2:0];

assign zext_ln137_1_fu_311_p1 = select_ln137_2_fu_304_p3;

assign zext_ln137_fu_621_p1 = select_ln137_2_reg_803_pp0_iter23_reg;

assign zext_ln140_1_fu_624_p1 = select_ln137_reg_781_pp0_iter23_reg;

assign zext_ln140_2_fu_281_p1 = select_ln137_fu_275_p3;

assign zext_ln140_3_fu_250_p1 = i_fu_88;

assign zext_ln140_fu_387_p1 = select_ln137_1_fu_381_p3;

assign zext_ln143_1_fu_650_p1 = trunc_ln143_fu_646_p1;

assign zext_ln143_2_fu_684_p1 = shl_ln143_2_fu_677_p3;

assign zext_ln143_fu_673_p1 = bitcast_ln143_fu_670_p1;

assign zext_ln144_fu_532_p1 = shl_ln144_1_fu_525_p3;

assign zext_ln145_1_fu_552_p1 = shl_ln145_1_fu_545_p3;

assign zext_ln145_fu_361_p1 = add_ln145_fu_356_p2;

assign zext_ln146_fu_580_p1 = shl_ln146_1_fu_573_p3;

assign zext_ln147_fu_600_p1 = shl_ln147_1_fu_593_p3;

endmodule //cluster_cluster_Pipeline_VITIS_LOOP_137_1_VITIS_LOOP_140_2
